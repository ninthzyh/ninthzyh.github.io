<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>weight</title>
    <link href="/2021/01/10/weight/"/>
    <url>/2021/01/10/weight/</url>
    
    <content type="html"><![CDATA[<h1 id="weight"><a href="#weight" class="headerlink" title="weight"></a>weight</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>week7</title>
    <link href="/2021/01/10/week/week7/"/>
    <url>/2021/01/10/week/week7/</url>
    
    <content type="html"><![CDATA[<h1 id="week7"><a href="#week7" class="headerlink" title="week7"></a>week7</h1><p>1.[iframe框架都有哪些优缺点？]</p><p>2.[[css]简述你对BFC规范的理解]</p><p>3.[[js]统计某一字符或字符串在另一个字符串中出现的次数]</p><h3 id="1-iframe框架都有哪些优缺点？"><a href="#1-iframe框架都有哪些优缺点？" class="headerlink" title="1.[iframe框架都有哪些优缺点？]"></a>1.[iframe框架都有哪些优缺点？]</h3><h3 id="2-css-简述你对BFC规范的理解"><a href="#2-css-简述你对BFC规范的理解" class="headerlink" title="2.[[css]简述你对BFC规范的理解]"></a>2.[[css]简述你对BFC规范的理解]</h3><h3 id="3-js-统计某一字符或字符串在另一个字符串中出现的次数"><a href="#3-js-统计某一字符或字符串在另一个字符串中出现的次数" class="headerlink" title="3.[[js]统计某一字符或字符串在另一个字符串中出现的次数]"></a>3.[[js]统计某一字符或字符串在另一个字符串中出现的次数]</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>week6</title>
    <link href="/2020/12/31/week/week6/"/>
    <url>/2020/12/31/week/week6/</url>
    
    <content type="html"><![CDATA[<h1 id="week6"><a href="#week6" class="headerlink" title="week6"></a>week6</h1><p>1.[[html]label都有哪些作用？并举相应的例子说明]</p><p>2.[[css]用css创建一个三角形，并简述原理]</p><p>3.[[js]写一个去除制表符和换行符的方法]</p><h3 id="1-html-label都有哪些作用？并举相应的例子说明"><a href="#1-html-label都有哪些作用？并举相应的例子说明" class="headerlink" title="1.[[html]label都有哪些作用？并举相应的例子说明]"></a>1.[[html]label都有哪些作用？并举相应的例子说明]</h3><p>1）label标签for属性与input标签种的id相同，绑定表单，点击label可以获取焦点；</p><p>2）label模拟button</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=&#x27;button&#x27;]</span> &#123;  <span class="hljs-attribute">display</span>: none;&#125;<span class="hljs-selector-tag">label</span> &#123;  <span class="hljs-attribute">display</span>: inline-block;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">20px</span>;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#456</span>;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">cursor</span>: pointer;  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">4px</span> <span class="hljs-number">0</span> rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">3</span>);  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;&#125;</code></pre><p>3）checkbox、radio实现css切换</p><h3 id="2-css-用css创建一个三角形，并简述原理"><a href="#2-css-用css创建一个三角形，并简述原理" class="headerlink" title="2.[[css]用css创建一个三角形，并简述原理]"></a>2.[[css]用css创建一个三角形，并简述原理]</h3><p>border是由4个三角形拼成的，border-width控制三角的大小，</p><p>width:0;height:0;</p><p>border宽度：div中心到四边的宽度</p><p>1）一条横竖边：</p><p>border-横竖边方向：长度 solid color;</p><p>border-两条斜边方向：长度 solid transparent;</p><p>2）两条横竖边：</p><p>若斜边是在三角形的右边，这时候设置top或bottom的直线，和右边的斜线。</p><p>border-top|borde-bottom:长度 solid color;</p><p>border-right:长度 solid transparent；</p><p>若斜边是在三角形的左边，这时候设置top或bottom的直线，和左边的斜线。</p><p>border-top|borde-bottom:长度 solid color;</p><p>border-left:长度 solid transparent；</p><hr><p>带边框的三角型</p><p>黄色三角相对父元素padding绝对定位，父元素宽高为0，内容区域为div的中心，是蓝色三角顶点位置。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">border-bottom</span>:<span class="hljs-number">40px</span> solid blue;    <span class="hljs-attribute">border-left</span>:<span class="hljs-number">40px</span> solid transparent;    <span class="hljs-attribute">border-right</span>:<span class="hljs-number">40px</span> solid transparent;&#125;<span class="hljs-attribute">div</span>::after&#123;    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">38px</span> solid yellow;    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">38px</span> solid transparent;    <span class="hljs-attribute">border-right</span>: <span class="hljs-number">38px</span> solid transparent;    <span class="hljs-attribute">position</span>: absolute;    <span class="hljs-attribute">left</span>: <span class="hljs-number">10px</span>;    <span class="hljs-attribute">top</span>: <span class="hljs-number">9px</span>;&#125;</code></pre><h3 id="3-js-写一个去除制表符和换行符的方法"><a href="#3-js-写一个去除制表符和换行符的方法" class="headerlink" title="3.[[js]写一个去除制表符和换行符的方法]"></a>3.[[js]写一个去除制表符和换行符的方法]</h3><p>[]：表达式</p><p>\n：换行符</p><p>\t：制表符</p><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">str</span>) </span>&#123;      <span class="hljs-keyword">return</span> str.replace(<span class="hljs-regexp">/[\n\t]/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)&#125;<span class="hljs-keyword">let</span> str=<span class="hljs-string">&#x27;asdf   as\tasd\sasd\n  .&#x27;</span><span class="hljs-built_in">console</span>.log(fn(str))</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>grid布局</title>
    <link href="/2020/12/27/grid/"/>
    <url>/2020/12/27/grid/</url>
    
    <content type="html"><![CDATA[<h1 id="grid布局"><a href="#grid布局" class="headerlink" title="grid布局"></a>grid布局</h1><p>1.栅格布局4*4</p><p>template都在开启grid布局的盒子里</p><p>display:grid;</p><p>grid-template-rows:设置行</p><p>grid-template-colums:设置列</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>7<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>9<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>11<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>12<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>13<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>14<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>15<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>16<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-comment">// 背景到盒子的content 100-10*2-1*2=78</span>        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-comment">// 元素的总宽高包含到border 100*100</span>        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>2.重复设置栅格结构</p><p>行高1，行高2….，重复x次</p><p>grid-template-rows:repeat(行数，行高);</p><p>grid-template-colums:repeat(列数，列宽);</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 行高100px 50px，重复2行</span>    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">2</span>,<span class="hljs-number">100px</span> <span class="hljs-number">50px</span>);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-comment">// 背景到盒子的content 100-10*2-1*2=78</span>        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-comment">// 元素的总宽高包含到border 100*100</span>        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>3.自动填充行列</p><p>行|列自动填充，每个元素宽高为num*num</p><p>grid-template-rows:repeat(auto-fill,num);</p><p>grid-template-colums:repeat(auto-fill,num);</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>7<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>9<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 自动填充行列，元素100*100</span>    <span class="hljs-attribute">grid-template-rows</span>: repeat(auto-fill,<span class="hljs-number">100px</span>);    <span class="hljs-attribute">grid-template-columns</span>: repeat(auto-fill,<span class="hljs-number">100px</span>);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>4.元素尺寸范围minmax()</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 3行，元素高度50-100</span>    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,minmax(<span class="hljs-number">50px</span>,<span class="hljs-number">100px</span>));    <span class="hljs-attribute">grid-template-columns</span>: repeat(auto-fill,<span class="hljs-number">100px</span>);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>5.栅格间距</p><p>row-gap<br>|column-gap&lt;==&gt;gap</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">gap</span>:<span class="hljs-number">10px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>6.栅格编号线</p><p>行起始线：grid-row-start:num; </p><p>行终止线：grid-row-end:num;</p><p>列起始线：grid-column-start:num;</p><p>列终止线：grid-column-end:num;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-comment">// 行线2-3，列线2-3</span>        <span class="hljs-attribute">grid-row-start</span>:<span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-row-end</span>:<span class="hljs-number">3</span>;        <span class="hljs-attribute">grid-column-start</span>:<span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-column-end</span>: <span class="hljs-number">3</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>不规则元素布局</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 第一个元素行线1-3，列线1-2，将元素3挤到空白处</span>    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">1</span>)&#123;        <span class="hljs-attribute">grid-row-start</span>:<span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-row-end</span>:<span class="hljs-number">3</span>;        <span class="hljs-attribute">grid-column-start</span>: <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column-end</span>:<span class="hljs-number">2</span>;    &#125;&#125;</code></pre><p>7.栅格命名</p><p>1）每行|列命名，每行列都要命名</p><p>grid-template-rows:[r1行起] num [r1行终 r2行起] num [r2行终 r3行起] num [r3行终]；</p><p>grid-template-columns: [c1列起] num [c1列终 c2列起] num [c2列终 c3列起] num [c3列终]；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: [r1-start] <span class="hljs-number">100px</span> [r1-end r2-start] <span class="hljs-number">100px</span> [r2-end r3-start] <span class="hljs-number">100px</span> [r3-end];    <span class="hljs-attribute">grid-template-columns</span>: [c1-start] <span class="hljs-number">100px</span> [c1-end c2-start] <span class="hljs-number">100px</span> [c2-end c3-start] <span class="hljs-number">100px</span> [c3-end];    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 2行起-2行终，2列起-2列终</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row-start</span>:r2-start;        <span class="hljs-attribute">grid-row-end</span>:r2-end;        <span class="hljs-attribute">grid-column-start</span>:c2-start;        <span class="hljs-attribute">grid-column-end</span>:c2-end;    &#125;&#125;</code></pre><p>2）重复栅格命名，行列只命名一次</p><p>n行|列，每行|列高度num，栅格线每行|列起始、终止命名为括号里的内容</p><p>grid-template-rows:repeat(n, [行起] num [行终])</p><p>grid-template-columns:(n, [列起] num [列终])</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 重复3行|列等分</span>    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,[r-start] <span class="hljs-number">1</span>fr [r-end]);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,[c-start] <span class="hljs-number">1</span>fr[c-end]);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 1行起-1行终，1列起-3列终</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row-start</span>: r-start <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-row-end</span>: r-end <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column-start</span>: c-start <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column-end</span>: c-end <span class="hljs-number">3</span>;    &#125;&#125;</code></pre><p>3）栅格线数字命名，只数栅格线数字序号</p><p>不写grid-x-start，默认偏移1格</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 数字命名只数栅格线数字序号，行线：1-2，列线：1-4</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row-start</span>:<span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-row-end</span>:<span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-column-start</span>: <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column-end</span>:<span class="hljs-number">4</span>;    &#125;&#125;</code></pre><p>4）偏移量命名</p><p>行|列偏移num：grid-x-start:span num;</p><p>栅格线命名只加grid-x-end|grid-x-start，默认偏移一格；</p><p>偏移量span同时加在start|end上</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 行end：3，列end：4，起始start同时偏移2</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row-start</span>:span <span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-row-end</span>:<span class="hljs-number">3</span>;        <span class="hljs-attribute">grid-column-start</span>:span <span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-column-end</span>:<span class="hljs-number">4</span>;    &#125;&#125;</code></pre><p>5）元素定位简写</p><p>行start：x，end：y        grid-row:x/y;</p><p>列start：x，end：y        grid-column:x/y</p><p>less使用grid元素定位简写会被计算，要跟偏移量同时使用；</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 行start：1，span 1；列start：1，span 3</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row</span>: <span class="hljs-number">1</span>/span <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column</span>: <span class="hljs-number">1</span>/span <span class="hljs-number">3</span>;    &#125;&#125;</code></pre><p>eg.不规则布局(小米首页)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 行start：1，span 3；列start：1，span 1</span>    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">1</span>)&#123;        <span class="hljs-attribute">grid-row</span>: <span class="hljs-number">1</span>/span <span class="hljs-number">3</span>;    &#125;    <span class="hljs-comment">// 行start：1，span 2；列start：2，span 2</span>    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">2</span>)&#123;        <span class="hljs-attribute">grid-row</span>:<span class="hljs-number">1</span>/span <span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-column</span>:<span class="hljs-number">2</span>/span <span class="hljs-number">2</span>;    &#125;    <span class="hljs-comment">// 计算完1、2位置3被挤到行3 span 1的位置；列start：2，span 2</span>    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">3</span>)&#123;        <span class="hljs-attribute">grid-column</span>:<span class="hljs-number">2</span>/span <span class="hljs-number">2</span>;    &#125;&#125;</code></pre><p>6）区域命名</p><p>grid-area:行/列/行/列；</p><p>less会被计算成值，使用区域定位的命名</p><p>grid-template-rows:repeat(3,[r] 1fr);</p><p>grid-template-columns:repeat(3,[c] 1fr);</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 区域定位的命名</span>    <span class="hljs-attribute">grid-template-rows</span>:repeat(<span class="hljs-number">3</span>,[r]<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">3</span>,[c]<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">box-sizing</span>:border-box;        <span class="hljs-attribute">grid-area</span>: r <span class="hljs-number">2</span>/ c <span class="hljs-number">2</span>/ r <span class="hljs-number">3</span>/ c <span class="hljs-number">3</span>;    &#125;&#125;</code></pre><p>7）区域模板命名</p><p>父元素：</p><p>grid-template-rows:m行;</p><p>grid-template-colunms:n列;</p><p>grid-template-areas: m行n列;</p><p>子元素：</p><p>grid-area:对应父元素中区域的名字</p><p>eg.不规则布局(小米首页)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr <span class="hljs-number">60px</span>;    <span class="hljs-attribute">grid-template-columns</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr;    <span class="hljs-comment">// 三行两列命名</span>    <span class="hljs-attribute">grid-template-areas</span>:<span class="hljs-string">&#x27;header header&#x27;</span>    <span class="hljs-string">&#x27;nav main&#x27;</span>    <span class="hljs-string">&#x27;footer footer&#x27;</span>;    <span class="hljs-selector-tag">header</span>,<span class="hljs-selector-tag">nav</span>,<span class="hljs-selector-tag">main</span>,<span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-attribute">padding</span>:<span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">background-clip</span>: content-box;    &#125;    <span class="hljs-comment">// 各部分区域名</span>    <span class="hljs-selector-tag">header</span>&#123;        <span class="hljs-attribute">grid-area</span>: header;    &#125;    <span class="hljs-selector-tag">nav</span>&#123;        <span class="hljs-attribute">grid-area</span>:nav;    &#125;    <span class="hljs-selector-tag">main</span>&#123;        <span class="hljs-attribute">grid-area</span>:main;    &#125;    <span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-attribute">grid-area</span>:footer;    &#125;&#125;</code></pre><p>占位符优化区域模板命名</p><p>区域模板中名字相同会被合并区域；</p><p>不同用’.’占位，每个区域是独立的空间；</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr <span class="hljs-number">60px</span>;    <span class="hljs-attribute">grid-template-columns</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr;    <span class="hljs-comment">// 三行两列命名, 引号内区域名称相同会被合并;</span>    <span class="hljs-comment">// &#x27;. .&#x27;占位不会合并区域</span>    <span class="hljs-attribute">grid-template-areas</span>:<span class="hljs-string">&#x27;header header&#x27;</span>    <span class="hljs-string">&#x27;. .&#x27;</span>    <span class="hljs-string">&#x27;footer footer&#x27;</span>;    <span class="hljs-selector-tag">header</span>,<span class="hljs-selector-tag">nav</span>,<span class="hljs-selector-tag">main</span>,<span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-comment">// 现有background才能background-clip</span>        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>:<span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;        <span class="hljs-attribute">background-clip</span>: content-box;    &#125;    <span class="hljs-selector-tag">header</span>&#123;        <span class="hljs-attribute">grid-area</span>: header;    &#125;    <span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-attribute">grid-area</span>: footer;    &#125;&#125;</code></pre><p>8）区域栅格线命名</p><p>每条栅格线名称：区域模板中区域命名-start|end</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr <span class="hljs-number">60px</span>;    <span class="hljs-attribute">grid-template-columns</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr;    <span class="hljs-comment">// 三行两列命名</span>    <span class="hljs-attribute">grid-template-areas</span>:<span class="hljs-string">&#x27;header header&#x27;</span>    <span class="hljs-string">&#x27;nav main&#x27;</span>    <span class="hljs-string">&#x27;footer footer&#x27;</span>;    <span class="hljs-selector-tag">header</span>,<span class="hljs-selector-tag">nav</span>,<span class="hljs-selector-tag">main</span>,<span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-attribute">padding</span>:<span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;        <span class="hljs-attribute">background-clip</span>: content-box;    &#125;    <span class="hljs-comment">// 行：header结束-footer开始</span>    <span class="hljs-comment">// 列: nav开始-main结束</span>    <span class="hljs-selector-tag">header</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">grid-row</span>: header-end/footer-start;        <span class="hljs-attribute">grid-column</span>: nav-start/main-end;    &#125;&#125;</code></pre><p>8.栅格流动</p><p>栅格横向|纵向排列 自动占满空出来的空间：grid-auto-flow: row|column dense;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-comment">// 行排列 后面的元素自动填满空出来的空间</span>    <span class="hljs-attribute">grid-auto-flow</span>: row dense;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">1</span>)&#123;        <span class="hljs-attribute">grid-column</span>: <span class="hljs-number">1</span>/span <span class="hljs-number">2</span>;    &#125;    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">2</span>)&#123;        <span class="hljs-attribute">grid-row</span>:<span class="hljs-number">2</span>/span <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column</span>: <span class="hljs-number">3</span>/span <span class="hljs-number">1</span>;    &#125;&#125;</code></pre><p>9.栅格对齐</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><p>1）栅格整体对齐与简写</p><p>栅格整体：</p><p>justify-content: 栅格整体主轴对齐方式;</p><p>align-content:栅格整体交叉轴对其方式;</p><p>简写：place-content:align justify;</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">4</span>,<span class="hljs-number">100px</span>);    <span class="hljs-comment">// 栅格整体对齐</span>    <span class="hljs-comment">// justify-content: space-around;</span>    <span class="hljs-comment">// align-content: center;</span>    <span class="hljs-comment">// 栅格整体对齐简写</span>    <span class="hljs-attribute">place-content</span>: center space-around;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>2）栅格内元素整体对齐与简写</p><p>栅格整体：</p><p>justify-items:栅格内元素主轴对齐方式;</p><p>align-items:栅格内元素交叉轴对齐方式;</p><p>简写：place-items:align justify; </p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">4</span>,<span class="hljs-number">100px</span>);    <span class="hljs-comment">// 栅格内元素整体对齐</span>    <span class="hljs-comment">// justify-items: start;</span>    <span class="hljs-comment">// align-items:center;</span>    <span class="hljs-comment">// 栅格整体对齐简写</span>    <span class="hljs-attribute">place-items</span>: center start;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>3）栅格元素独立控制对齐与简写</p><p>栅格独立元素内：</p><p>justify-self:栅格元素独立控制主轴对齐方式;</p><p>align-self:栅格元素独立控制交叉轴对齐方式;</p><p>简写：place-self:align justify; </p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">4</span>,<span class="hljs-number">100px</span>);    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">3</span>)&#123;        <span class="hljs-comment">// 栅格元素独立控制对齐</span>        <span class="hljs-comment">// justify-self: end;</span>        <span class="hljs-comment">// align-self: center;</span>        <span class="hljs-comment">// 栅格元素独立控制对齐简写</span>        <span class="hljs-attribute">place-self</span>: center end;    &#125;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>week5</title>
    <link href="/2020/12/27/week/week5/"/>
    <url>/2020/12/27/week/week5/</url>
    
    <content type="html"><![CDATA[<h1 id="week5"><a href="#week5" class="headerlink" title="week5"></a>week5</h1><p>1.[[html]简述超链接target属性的取值和作用]</p><p>2.[[css]CSS3新增伪类有哪些并简要描述]</p><p>3.[[js]写一个把字符串大小写切换的方法]</p><h3 id="1-html-简述超链接target属性的取值和作用"><a href="#1-html-简述超链接target属性的取值和作用" class="headerlink" title="1.[[html]简述超链接target属性的取值和作用]"></a>1.[[html]简述超链接target属性的取值和作用]</h3><table><thead><tr><th>target</th><th>描述</th></tr></thead><tbody><tr><td>_blank</td><td>点击一次打开一个窗口</td></tr><tr><td>_self</td><td>始终打开自己的窗口</td></tr><tr><td>_new</td><td>点击多次，始终打开一个窗口</td></tr><tr><td>_parent</td><td>打开父框架的窗口。链接的框架不是嵌套的，等同_self</td></tr><tr><td>_top</td><td>打开自己的窗口，会删除所有框架</td></tr></tbody></table><h3 id="2-css-CSS3新增伪类有哪些并简要描述"><a href="#2-css-CSS3新增伪类有哪些并简要描述" class="headerlink" title="2.[[css]CSS3新增伪类有哪些并简要描述]"></a>2.[[css]CSS3新增伪类有哪些并简要描述]</h3><p>:first-child|:last-child|:first-of-type|:last-of-type|:only-child|:only-of-type</p><p>:enabled|:disabled|:checked</p><h3 id="3-js-写一个把字符串大小写切换的方法"><a href="#3-js-写一个把字符串大小写切换的方法" class="headerlink" title="3.[[js]写一个把字符串大小写切换的方法]"></a>3.[[js]写一个把字符串大小写切换的方法]</h3><p>全大写：str.toUpperCase()</p><p>全小写：str.toLowerCase()</p><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toggleLetter</span>(<span class="hljs-params">str</span>)</span>&#123;<span class="hljs-keyword">return</span> str.split(<span class="hljs-string">&#x27;&#x27;</span>).map(<span class="hljs-function"><span class="hljs-params">item</span>=&gt;</span>&#123;        <span class="hljs-keyword">if</span>(item===item.toUpperCase())&#123;            <span class="hljs-keyword">return</span> item.toLowerCase()        &#125;<span class="hljs-keyword">else</span>&#123;            <span class="hljs-keyword">return</span> item.toUpperCase()        &#125;    &#125;).join(<span class="hljs-string">&#x27;&#x27;</span>)&#125;toggleLetter(<span class="hljs-string">&#x27;AsDf&#x27;</span>)</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>选择器</title>
    <link href="/2020/12/27/selector/"/>
    <url>/2020/12/27/selector/</url>
    
    <content type="html"><![CDATA[<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h4 id="1-选择器"><a href="#1-选择器" class="headerlink" title="1.选择器"></a>1.选择器</h4><p>1）通配符(*)</p><p>2）标签</p><p>3）id（唯一）&amp;类</p><h4 id="2-结构选择器"><a href="#2-结构选择器" class="headerlink" title="2.结构选择器"></a>2.结构选择器</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>结构选择器h1<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>结构选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>结构选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>结构选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>结构选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><p>1）所有后代</p><pre><code class="hljs less"><span class="hljs-comment">// main article 所有h2</span><span class="hljs-selector-tag">main</span> <span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">color</span>: lightblue;&#125;</code></pre><p>2）子元素</p><pre><code class="hljs less"><span class="hljs-comment">// main article子元素h2</span><span class="hljs-selector-tag">main</span> <span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">color</span>: lightblue;&#125;</code></pre><p>3）兄弟</p><pre><code class="hljs less"><span class="hljs-comment">// main article h1的兄弟元素h2</span><span class="hljs-selector-tag">main</span> <span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h1</span>~<span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">color</span>: lightblue;&#125;</code></pre><p>4）铁兄弟</p><pre><code class="hljs less"><span class="hljs-comment">// main article h1紧挨下面的兄弟h2</span><span class="hljs-selector-tag">main</span> <span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h1</span>+<span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">color</span>: lightblue;&#125;</code></pre><h4 id="3-属性选择器"><a href="#3-属性选择器" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h4><p>1）属性约束，选择属性[title]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>2）属性值约束，[title=’attribute’]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;attribute&quot;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title=&#x27;attribute&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>3）^以属性值开头，[title^=’attri’]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;attr&quot;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;attri&quot;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title^=&#x27;attri&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>4）$以属性值结尾，[title$=’ibute’]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;ibute&quot;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;bute&quot;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title$=&#x27;ibute&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>5）<em>属性包含相同属性值会被选中，[key</em>=value]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute1&#x27;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute12345&#x27;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title*=&#x27;attribute12345&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>6）<del>选择器值是一个单词会被选中，[key</del>=value]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute12&#x27;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute12  com&#x27;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title~=&#x27;attribute12&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>7）|以选择器值开头，并用‘-’连接下一个内容，[key|=value]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute123&#x27;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute123-com&#x27;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title|=&#x27;attribute123&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><h4 id="4-伪类"><a href="#4-伪类" class="headerlink" title="4.伪类"></a>4.伪类</h4><p>1）lv|ha|fha</p><p>:link|:visited|:hover|:active （初始|点击后|悬浮|点击中）</p><p>focus（聚焦）</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>伪类选择器<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">a</span>&#123;  <span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-attribute">a</span>:link&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;<span class="hljs-attribute">a</span>:visited&#123;  <span class="hljs-attribute">background</span>: lightgreen;&#125;<span class="hljs-attribute">a</span>:hover&#123;  <span class="hljs-attribute">background</span>: red;&#125;<span class="hljs-attribute">a</span>:active&#123;  <span class="hljs-attribute">background</span>: yellow;&#125;<span class="hljs-attribute">input</span>:focus&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;<span class="hljs-attribute">input</span>:hover&#123;  <span class="hljs-attribute">background</span>: red;&#125;<span class="hljs-attribute">input</span>:active&#123;  <span class="hljs-attribute">background</span>: yellow;&#125;</code></pre><p>2）:target|:empty|:root（目标伪类|空伪类|根伪类）</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#target&quot;</span>&gt;</span>目标<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;target&quot;</span>&gt;</span>锚点<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>非空<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">1000px</span>;&#125;<span class="hljs-comment">// 目标伪类</span><span class="hljs-attribute">div</span>:target&#123;  <span class="hljs-attribute">color</span>: blue;&#125;<span class="hljs-comment">// 空伪类，空li不显示</span><span class="hljs-attribute">li</span>:empty&#123;  <span class="hljs-attribute">display</span>: none;&#125;<span class="hljs-comment">// 根伪类:root等价于html</span><span class="hljs-selector-pseudo">:root</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><h4 id="5-伪类选择元素"><a href="#5-伪类选择元素" class="headerlink" title="5.伪类选择元素"></a>5.伪类选择元素</h4><p>空格：元素的后代</p><p>child要紧跟冒号前的元素，type不需要</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>首尾元素选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>首尾元素选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>首尾元素选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><p>1）:first-child选择第一个元素</p><p>:last-child选择最后一个元素</p><hr><p>article所有后代第一个|最后一个元素</p><pre><code class="hljs less"><span class="hljs-attribute">article </span>:first-child&#123;    <span class="hljs-attribute">color</span>: red;&#125;</code></pre><pre><code class="hljs less"> <span class="hljs-attribute">article </span>:last-child&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article后代子元素第一个|最后一个</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-pseudo">:first-child</span>&#123;    <span class="hljs-attribute">color</span>: red;&#125;</code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-pseudo">:last-child</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article子元素是h2的第一个|最后一个元素</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:first-child</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:last-child</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article所有后代是h1的第一个元素</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:first-child</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article所有后代是h1，h1下所有后代的第一个元素</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h1</span> <span class="hljs-selector-pseudo">:first-child</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>2）:first-of-type选择第一个类型的元素</p><p>:last-of-type选择最后一个类型的元素</p><hr><p>article所有后代的是h2，第一个|最后一个出现的类型元素</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:first-of-type</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:last-of-type</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>3）唯一选择器:only-child</p><p>article所有后代唯一的子元素。aside-&gt;h2是唯一的孙元素，有唯一性。</p><p>h1和h2是平级关系，没唯一性。</p><pre><code class="hljs less"><span class="hljs-attribute">article </span>:only-child&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>4）only-of-type选择唯一元素类型</p><p>article子元素是h2的唯一类型</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:only-of-type</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><h4 id="6-元素编号选择"><a href="#6-元素编号选择" class="headerlink" title="6.元素编号选择"></a>6.元素编号选择</h4><p>1）:nth-child(n)选择第n个元素，n从1开始，选择紧跟冒号：之前的元素</p><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>元素编号<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>元素编号h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>             <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>元素编号h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>         <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span>     <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><p>article所有后代元素下的第2个，aside这层只有一个，所以不被选中</p><pre><code class="hljs less"><span class="hljs-attribute">article </span>:nth-child(<span class="hljs-number">2</span>)&#123;    <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article所有子元素下紧跟article的第1个</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article所有子元素h1下紧跟article的第1个</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>odd：奇数，even：偶数</p><p>列表li的索引从1开始，括号中计算的结果&gt;0，n&gt;=0</p><p>-n+2 n=2(结果0) n=1(1) n=0(2) 选中1、2</p><p>n+2 n=0(2)   n=1(3) n=2(4) 选中2之后</p><hr><p>:nth-child(n)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><p>选择li第1、2个</p><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(-n+2)</span>&#123;     <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>2）:nth-last-child(n)选择倒数第n个元素，</p><p>ul所有后代元素li，选择li倒数第1、2个</p><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-last-child(-n+2)</span>&#123;    <span class="hljs-attribute">color</span>:red;&#125;</code></pre><p>3）article所有后代元素是h2的倒数1、2个元素，包括孙元素</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>元素编号<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>元素编号.com<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>元素编号.com<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:nth-last-child(-n+2)</span>&#123;    <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>4）:nth-last-of-type(n)选择倒数第n个类型的元素</p><p>article子元素是h2，倒数第一个类型</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:nth-last-of-type(1)</span>&#123;    <span class="hljs-attribute">color</span>:red;&#125;</code></pre><p>5）:not(n)排除选择器</p><p>ul所有后代元素为li，选择第1、2、3个元素，排除第3个，排除第一个</p><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(-n+3)</span><span class="hljs-selector-pseudo">:not(</span><span class="hljs-selector-pseudo">:nth-child(3))</span><span class="hljs-selector-pseudo">:not(</span><span class="hljs-selector-pseudo">:first-child)</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><h4 id="7-表单伪类"><a href="#7-表单伪类" class="headerlink" title="7.表单伪类"></a>7.表单伪类</h4><p>:disabled|:enabled|:required|:optional|:checked（禁用|可用|必填|非必填|选中）</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>禁用<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>可用<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">enabled</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>必填<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">required</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>非必填<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">optional</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;man&quot;</span> <span class="hljs-attr">checked</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;man&quot;</span>&gt;</span>man<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;woman&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;woman&quot;</span>&gt;</span>woman<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-attribute">input</span>:disabled&#123;    <span class="hljs-attribute">background</span>: lightblue;&#125;<span class="hljs-attribute">input</span>:enabled&#123;    <span class="hljs-attribute">background</span>: blue;&#125;<span class="hljs-attribute">input</span>:required&#123;    <span class="hljs-attribute">background</span>: green;&#125;<span class="hljs-selector-tag">span</span>&gt;<span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:optional</span>&#123;    <span class="hljs-attribute">background</span>: red;&#125;<span class="hljs-attribute">input</span>:checked+label&#123;    <span class="hljs-attribute">color</span>: gold;&#125;</code></pre><h4 id="8-文本伪类"><a href="#8-文本伪类" class="headerlink" title="8.文本伪类"></a>8.文本伪类</h4><p>1）文本</p><p>::first-letter选择文本第一个字</p><p>::first-line选择文本第一行</p><p>::after|::before选择元素后面|前面（可对添加的伪类元素修改）</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Praesentium, eos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>文本伪类<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">p</span>&#123;    <span class="hljs-attribute">display</span>: block;    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;&#125;<span class="hljs-attribute">p</span>::first-letter&#123;    <span class="hljs-attribute">color</span>: red;&#125;<span class="hljs-attribute">p</span>::first-line&#123;    <span class="hljs-attribute">color</span>: greenyellow;&#125;<span class="hljs-attribute">div</span>::after&#123;    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;123&#x27;</span>;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">left</span>: <span class="hljs-number">200px</span>;    <span class="hljs-attribute">top</span>: <span class="hljs-number">40px</span>;&#125;</code></pre><p>2）自定义输入框</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;    <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=&#x27;text&#x27;]</span>&#123;        <span class="hljs-attribute">border</span>:none;        <span class="hljs-attribute">outline</span>: none;    &#125;    <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=&#x27;text&#x27;]</span>+<span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">::after</span>&#123;        <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;🙂&#x27;</span>;        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">color</span>:gray    &#125;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>week4</title>
    <link href="/2020/12/18/week/week4/"/>
    <url>/2020/12/18/week/week4/</url>
    
    <content type="html"><![CDATA[<h2 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h2><p>1.[[html]为什么HTML5只需要写<code>&lt;!DOCTYPE HTML&gt;</code>就可以？]</p><p>2.[[css]CSS选择器有哪些？哪些属性可以继承？]</p><p>3.[[js]写一个方法把下划线命名转成大驼峰命名]</p><h3 id="1-html-为什么HTML5只需要写-lt-DOCTYPE-HTML-gt-就可以？"><a href="#1-html-为什么HTML5只需要写-lt-DOCTYPE-HTML-gt-就可以？" class="headerlink" title="1.[[html]为什么HTML5只需要写&lt;!DOCTYPE HTML&gt;就可以？]"></a>1.[[html]为什么HTML5只需要写<code>&lt;!DOCTYPE HTML&gt;</code>就可以？]</h3><p>html5不基于标准通用标记语言（SGML），不用对DTD引用，需要DOCTYPE规范浏览器行为（按照什么类型运行）；</p><p>html4基于SGML，需要对DTD引用，才能知道文档类型（document type）HTML版本</p><h3 id="2-css-CSS选择器有哪些？哪些属性可以继承？"><a href="#2-css-CSS选择器有哪些？哪些属性可以继承？" class="headerlink" title="2.[[css]CSS选择器有哪些？哪些属性可以继承？]"></a>2.[[css]CSS选择器有哪些？哪些属性可以继承？]</h3><table><thead><tr><th>选择器</th><th></th></tr></thead><tbody><tr><td>标签、id、class</td><td></td></tr><tr><td>结构</td><td>1）后代（空格）<br />2）子元素（&gt;）<br />3）兄弟（~）<br />4）铁兄弟（+）</td></tr><tr><td>属性</td><td>1）[key]<br />2）[key=value]<br />3）[key^=value]以value开头<br />4）[key$=value]以value结尾<br />5）[key*=value]有value<br />6）[key~=value]value是一个单词<br />7）[key|=value]开头value，‘-’连接</td></tr><tr><td>伪类</td><td>1）:link初始值<br />2）:visited点击后<br />3）:hover悬浮<br />4）:acitve点击中<br />5）:focus聚焦<br />6）:target目标<br />7）:empty空<br />8）:root根<br /></td></tr><tr><td>伪类元素</td><td>1）:first-child|:last-child选择第一个|最后一个元素<br />2）:first-of-type|:last-of-type选择第一个|最后一个元素类型<br />3）:only-child唯一元素<br />4）:only-of-type唯一元素类型<br />5）:nth-child(n)第n个元素<br />6）:nth-last-child(n)最后第n个元素<br />7）:nth-last-of-type(n)最后第n个元素类型<br />8）:not(n)排除第n个元素<br /></td></tr><tr><td>表单伪类</td><td>1）:disabled禁用<br />2）:enabled可用<br />3）:required必填<br />4）:optional非必填<br />5）:checked选中</td></tr><tr><td>文本伪类</td><td>1）::first-letter选择文本第一个字<br />2）::first-line选择文本第一行<br />3）::after|::before选择元素后面|前面的元素</td></tr></tbody></table><table><thead><tr><th>可继承</th><th>不可继承</th></tr></thead><tbody><tr><td>font|color</td><td>margin|padding|border|width|height</td></tr></tbody></table><h3 id="3-js-写一个方法把下划线命名转成大驼峰命名"><a href="#3-js-写一个方法把下划线命名转成大驼峰命名" class="headerlink" title="3.[[js]写一个方法把下划线命名转成大驼峰命名]"></a>3.[[js]写一个方法把下划线命名转成大驼峰命名]</h3><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bigHumpFunc</span>(<span class="hljs-params">str</span>) </span>&#123;    <span class="hljs-comment">// str前没有‘_’,给str加上</span>    <span class="hljs-keyword">if</span> (str[<span class="hljs-number">0</span>] !== <span class="hljs-string">&quot;_&quot;</span>) str = <span class="hljs-string">&quot;_&quot;</span> + str;    <span class="hljs-keyword">let</span> arr = str.split(<span class="hljs-string">&quot;&quot;</span>);    arr.map(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;        <span class="hljs-comment">// 有‘_’，删除‘_’，删除后当前索引item转换大写</span>        <span class="hljs-keyword">if</span> (item === <span class="hljs-string">&quot;_&quot;</span>) &#123;            arr.splice(index, <span class="hljs-number">1</span>);            arr[index] = arr[index].toUpperCase();        &#125;    &#125;);    <span class="hljs-keyword">return</span> arr.join(<span class="hljs-string">&quot;&quot;</span>);&#125;<span class="hljs-keyword">let</span> hump = bigHumpFunc(<span class="hljs-string">&quot;_ad_bd_cd&quot;</span>);<span class="hljs-built_in">console</span>.log(hump);</code></pre><hr><pre><code class="hljs xquery"><span class="hljs-keyword">function</span> bigHumpFunc(str) &#123;    <span class="hljs-keyword">let</span> arr = str.split(<span class="hljs-string">&#x27;_&#x27;</span>).<span class="hljs-keyword">map</span>((<span class="hljs-type">item</span>,index)=&gt;(<span class="hljs-type">item</span>[<span class="hljs-number">0</span>]) &amp;&amp; <span class="hljs-type">item</span>[<span class="hljs-number">0</span>].toUpperCase()+<span class="hljs-type">item</span>.substr(<span class="hljs-number">1</span>))    <span class="hljs-keyword">return</span> arr.join(<span class="hljs-string">&#x27;&#x27;</span>)&#125;<span class="hljs-keyword">let</span> hump = bigHumpFunc(<span class="hljs-string">&quot;_ ad_bd_cd&quot;</span>);console.log(hump)</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>背景与渐变</title>
    <link href="/2020/12/13/background/"/>
    <url>/2020/12/13/background/</url>
    
    <content type="html"><![CDATA[<h2 id="背景与渐变"><a href="#背景与渐变" class="headerlink" title="背景与渐变"></a>背景与渐变</h2><h4 id="1-背景裁切"><a href="#1-背景裁切" class="headerlink" title="1.背景裁切"></a>1.背景裁切</h4><p>背景显示到边框|padding|content</p><p>background-clip:border-box|padding-box|content-box;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>背景裁切<span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">background-color</span>: lightblue;  <span class="hljs-attribute">border</span>:<span class="hljs-number">5px</span> dashed;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-comment">// 背景内容显示在content区域</span>  <span class="hljs-attribute">background-clip</span>: content-box;&#125;</code></pre><h4 id="2-背景重复-amp-滚动"><a href="#2-背景重复-amp-滚动" class="headerlink" title="2.背景重复&amp;滚动"></a>2.背景重复&amp;滚动</h4><p>背景重复：    </p><p>background-repeat: no-repeat|repeat|repeat-x|repeat-y;</p><p>背景滚动：</p><p>background-attachment: fixed|scorll;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>背景重复&amp;滚动<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> dashed;  <span class="hljs-attribute">overflow</span>: auto;  &gt;<span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">3000px</span>;    <span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">&#x27;../background/pic.jpg&#x27;</span>);    <span class="hljs-comment">// 背景重复</span>    <span class="hljs-attribute">background-repeat</span>: no-repeat;    <span class="hljs-comment">// 背景滚动</span>    <span class="hljs-attribute">background-attachment</span>: fixed;  &#125;&#125;</code></pre><h4 id="3-多图定义组合语句"><a href="#3-多图定义组合语句" class="headerlink" title="3.多图定义组合语句"></a>3.多图定义组合语句</h4><p>background:rgba src repeat position/size;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> dashed;  <span class="hljs-comment">// 组合</span>  <span class="hljs-attribute">background</span>:lightblue url(<span class="hljs-string">&#x27;../background/pic.jpg&#x27;</span>) no-repeat center/contain;&#125;</code></pre><h4 id="4-盒子阴影"><a href="#4-盒子阴影" class="headerlink" title="4.盒子阴影"></a>4.盒子阴影</h4><p>box-shadow:h v blur 阴影大小 rgba;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> rgba(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>, .<span class="hljs-number">5</span>);  <span class="hljs-comment">// 盒子阴影</span>  <span class="hljs-attribute">background</span>:lightblue url(<span class="hljs-string">&#x27;../background/pic.jpg&#x27;</span>) no-repeat center/contain;&#125;</code></pre><h4 id="5-渐变"><a href="#5-渐变" class="headerlink" title="5.渐变"></a>5.渐变</h4><p>线性</p><p>linear-gradient(to 方向/角度,color1,color2……);</p><p>镜像</p><p>radial-gradient(at 位置/%/px,color1,color2……);</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-comment">// 线性</span>  <span class="hljs-attribute">background</span>: linear-gradient(to bottom right, red, yellow);&#125;<span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-comment">// 渐变</span>  <span class="hljs-attribute">background</span>: radial-gradient(at bottom,red,yellow,black);&#125;</code></pre><h4 id="6-标志位-amp-阈值"><a href="#6-标志位-amp-阈值" class="headerlink" title="6.标志位&amp;阈值"></a>6.标志位&amp;阈值</h4><p>标志位：不写默认为0，%/px</p><p>阈值：渐变开始的位置，%/px</p><p>线性</p><p>background: linear-gradient(to %/px|角度,color1 标志位, 阈值,color2 标志位……);</p><p>镜像</p><p>background: radial-gradient(at 位置/%/px,color1 标志位, 阈值,color2 标志位……);</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">background</span>: radial-gradient(at <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>,red,yellow <span class="hljs-number">30px</span>,black <span class="hljs-number">70%</span>,black <span class="hljs-number">100%</span>);&#125;</code></pre><h4 id="7-渐变重复"><a href="#7-渐变重复" class="headerlink" title="7.渐变重复"></a>7.渐变重复</h4><p>线性</p><p>background:repeating-linear-gradient(角度|to 方向%/px,</p><p>color1 标志位, 阈值,color2 标志位,……)</p><p>镜像</p><p>background:repeating-radial-gradient(at 位置%/px,</p><p>color1 标志位,阈值，color 标志位,……)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-comment">// 线性</span>  <span class="hljs-attribute">background</span>:repeating-linear-gradient(<span class="hljs-number">45deg</span>,red <span class="hljs-number">20px</span>,yellow <span class="hljs-number">40px</span>,black <span class="hljs-number">60px</span>);&#125;<span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-comment">// 镜像</span>  <span class="hljs-attribute">background</span>:repeating-radial-gradient(at <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>, red <span class="hljs-number">20px</span>,yellow <span class="hljs-number">40px</span>,black <span class="hljs-number">60px</span>);&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>弹性布局</title>
    <link href="/2020/12/13/flex/"/>
    <url>/2020/12/13/flex/</url>
    
    <content type="html"><![CDATA[<h2 id="弹性布局"><a href="#弹性布局" class="headerlink" title="弹性布局"></a>弹性布局</h2><h4 id="1-传统布局-amp-弹性布局"><a href="#1-传统布局-amp-弹性布局" class="headerlink" title="1.传统布局&amp;弹性布局"></a>1.传统布局&amp;弹性布局</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>main<span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>second<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>thrid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-comment">//传统布局</span>*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;&#125;<span class="hljs-selector-tag">footer</span>&#123;  <span class="hljs-attribute">position</span>: fixed;  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  &gt;<span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">background</span>: linear-gradient(to bottom,<span class="hljs-number">#f3f3f3</span>,<span class="hljs-number">#ddd</span>,<span class="hljs-number">#f3f3f3</span>);    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">33%</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;    <span class="hljs-attribute">text-align</span>: center;    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">3em</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(n+2)</span>&#123;    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#555</span>;  &#125;&#125;</code></pre><pre><code class="hljs less"><span class="hljs-comment">// 弹性布局</span>*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-direction</span>: column;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;&#125;<span class="hljs-selector-tag">footer</span>&#123;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">align-items</span>: center;  <span class="hljs-attribute">background</span>: linear-gradient(to bottom,<span class="hljs-number">#f3f3f3</span>, <span class="hljs-number">#ddd</span>, <span class="hljs-number">#f3f3f3</span>);  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;  &gt;<span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">3em</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">33%</span>;    <span class="hljs-attribute">text-align</span>: center;  &#125;  <span class="hljs-selector-pseudo">:nth-child(n+2)</span>&#123;    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#555</span>;  &#125;&#125;</code></pre><h4 id="2-弹性元素方向-amp-溢出换行"><a href="#2-弹性元素方向-amp-溢出换行" class="headerlink" title="2.弹性元素方向&amp;溢出换行"></a>2.弹性元素方向&amp;溢出换行</h4><p>元素方向：水平|水平翻转|垂直|垂直翻转</p><p>flex-direction:row|row-reverse|column|column-reverse;</p><hr><p>不加换行时，外部盒子w|h减小，内部元素自动被压缩，直到内部弹性元素的margin+border+padding+content&gt;外部包裹的盒子盒子被撑破。</p><p>换行|反向换行</p><p>flex-wrap:wrap|wrap-reverse;</p><hr><p>组合语句：flex-flow: flex-direction flex-wrap;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-comment">//flex-direction:column; 垂直排列反向换行</span>  <span class="hljs-comment">// 水平排列弹性元素&gt;外部盒子压缩，flex-wrap反向换行</span>  <span class="hljs-attribute">flex-wrap</span>: wrap-reverse;  <span class="hljs-comment">// *全选子元素</span>  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><h4 id="3-主轴-amp-交叉轴"><a href="#3-主轴-amp-交叉轴" class="headerlink" title="3.主轴&amp;交叉轴"></a>3.主轴&amp;交叉轴</h4><p>flex-direction设置后水平|垂直排列，主轴为水平|垂直，与主轴垂直的是交叉轴。</p><p>主轴排列</p><p>justify-content</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-comment">// 水平反向排列，主轴对齐方式也要反向</span>  <span class="hljs-attribute">flex-direction</span>: row-reverse;  <span class="hljs-attribute">justify-content</span>: flex-end;  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><p>交叉轴排列</p><p>align-items</p><p>stretch;拉伸不设置弹性元素在交叉轴上的尺寸，否则不能拉伸。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-comment">// y主轴</span>  <span class="hljs-attribute">flex-direction</span>: column;  <span class="hljs-comment">// 交叉轴属性align-items，向交叉轴拉伸，不设置弹性元素在交叉轴上的尺寸，width</span>  <span class="hljs-attribute">align-items</span>:stretch;  <span class="hljs-comment">// x主轴，设置交叉轴上的拉伸，不设置弹性元素在交叉轴上的尺寸，height</span>  <span class="hljs-comment">// align-items: stretch;</span>  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-comment">// width: 100px;</span>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><h4 id="4-多行交叉轴"><a href="#4-多行交叉轴" class="headerlink" title="4.多行交叉轴"></a>4.多行交叉轴</h4><p>多行元素在交叉轴上的排列</p><p>align-content:包含主轴交叉轴的属性；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-wrap</span>: wrap;  <span class="hljs-attribute">align-content</span>: space-around;  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><h4 id="5-单个元素交叉轴"><a href="#5-单个元素交叉轴" class="headerlink" title="5.单个元素交叉轴"></a>5.单个元素交叉轴</h4><p>单个元素在交叉轴的控制</p><p>align-self:center|flex-end|flex-start</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-comment">// 弹性元素排列方向翻转，交叉轴y排列到end</span>  <span class="hljs-attribute">flex-direction</span>: row-reverse;  <span class="hljs-attribute">align-items</span>: flex-end;  <span class="hljs-comment">// article第二个元素居中</span>  <span class="hljs-selector-pseudo">:nth-child(2)</span>&#123;    <span class="hljs-attribute">align-self</span>:center  &#125;  <span class="hljs-comment">// article第三个元素排列到start</span>  <span class="hljs-selector-pseudo">:nth-child(3)</span>&#123;    <span class="hljs-attribute">align-self</span>: flex-start;  &#125;  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><h4 id="6-弹性元素"><a href="#6-弹性元素" class="headerlink" title="6.弹性元素"></a>6.弹性元素</h4><h5 id="1）剩余空间分配"><a href="#1）剩余空间分配" class="headerlink" title="1）剩余空间分配"></a>1）剩余空间分配</h5><p>剩余空间分配</p><p>flex-grow:num;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  * &#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;    <span class="hljs-comment">// 元素总宽高包含padding+border</span>    <span class="hljs-attribute">box-sizing</span>: border-box;    <span class="hljs-comment">// 背景元素区域从content开始保留，现有background再有background-clip</span>    <span class="hljs-attribute">background-clip</span>: content-box;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  &#125;  <span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;    <span class="hljs-comment">// 第1个元素占剩余空间的0/0+1+2</span>    <span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">0</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(2)</span> &#123;    <span class="hljs-comment">// 第2个元素占剩余空间的1/0+1+2</span>    <span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">1</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(3)</span> &#123;    <span class="hljs-comment">// 第3个元素占剩余空间的2/0+1+2</span>    <span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">2</span>;  &#125;&#125;</code></pre><p>页面结构</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-direction</span>: column;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;&#125;<span class="hljs-selector-tag">header</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">background</span>: yellow;  <span class="hljs-comment">// 上下定宽，中间自适应</span>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;&#125;<span class="hljs-selector-tag">footer</span>&#123;  <span class="hljs-attribute">background</span>: lightgreen;  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;</code></pre><h5 id="2）超出空间缩小"><a href="#2）超出空间缩小" class="headerlink" title="2）超出空间缩小"></a>2）超出空间缩小</h5><p>超出弹性盒子缩小比例</p><p>flex-shrink:num;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;  <span class="hljs-attribute">display</span>: flex;  * &#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;    <span class="hljs-comment">// 元素总宽高包含padding+border</span>    <span class="hljs-attribute">box-sizing</span>: border-box;    <span class="hljs-comment">// 背景元素区域从content开始保留</span>    <span class="hljs-attribute">background-clip</span>: content-box;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  &#125;  <span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;    <span class="hljs-comment">// 第1个元素缩小超出空间的100-(200-100*3)*(0/0+1+3)</span>    <span class="hljs-attribute">flex-shrink</span>: <span class="hljs-number">0</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(2)</span> &#123;    <span class="hljs-comment">// 第2个元素缩小超出空间的100-(200-100*3)*(1/0+1+3)</span>    <span class="hljs-attribute">flex-shrink</span>: <span class="hljs-number">1</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(3)</span> &#123;    <span class="hljs-comment">// 第3个元素缩小超出空间的100-(200-100*3)*(3/0+1+3)</span>    <span class="hljs-attribute">flex-shrink</span>: <span class="hljs-number">3</span>;  &#125;&#125;</code></pre><h5 id="3）组合定义"><a href="#3）组合定义" class="headerlink" title="3）组合定义"></a>3）组合定义</h5><p>默认flex:0 1 auto;</p><p>flex-grow:0;</p><p>flex-shrink:1;</p><p>权重：min|max&gt;flex-basis&gt;width|height</p><p>flex-basis:auto;</p><h4 id="7-弹性元素排序"><a href="#7-弹性元素排序" class="headerlink" title="7.弹性元素排序"></a>7.弹性元素排序</h4><p>从上到下order减小</p><p>order:num;</p><h4 id="8-定位元素在弹性布局"><a href="#8-定位元素在弹性布局" class="headerlink" title="8.定位元素在弹性布局"></a>8.定位元素在弹性布局</h4><p>绝对定位丢失空间位，弹性布局会把空间位计算在内</p><p>position: absolute;</p><p>相对定位有空间位，会影响后面的元素</p><p>position: relative;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-direction</span>: column;  <span class="hljs-attribute">justify-content</span>: space-between;  <span class="hljs-attribute">position</span>: relative;  * &#123;    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">background-clip</span>: content-box;    <span class="hljs-attribute">box-sizing</span>: border-box;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(1)</span>&#123;    <span class="hljs-comment">// 绝对定位丢失空间位，弹性布局会把空间位计算在内，</span>    <span class="hljs-comment">// position: absolute;</span>    <span class="hljs-comment">// 相对定位有空间位，会影响后面的元素</span>    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">background</span>: lightgreen;    <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;  &#125;&#125;</code></pre><h4 id="9-弹性布局通用菜单"><a href="#9-弹性布局通用菜单" class="headerlink" title="9.弹性布局通用菜单"></a>9.弹性布局通用菜单</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>main<span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>second<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>b<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>thrid<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>b<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>c<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less">*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-direction</span>: column;&#125;<span class="hljs-selector-tag">main</span> &#123;  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#f3f3f3</span>;&#125;<span class="hljs-selector-tag">footer</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">justify-content</span>: space-around;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#eee</span>;  <span class="hljs-selector-tag">section</span>&#123;    <span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;    <span class="hljs-attribute">display</span>: flex;    <span class="hljs-comment">// h4 ul 列翻转</span>    <span class="hljs-attribute">flex-direction</span>: column-reverse;    <span class="hljs-comment">// flex可以用在文本上</span>    <span class="hljs-selector-tag">h4</span>&#123;      <span class="hljs-comment">// 不放、缩，basis:50px</span>      <span class="hljs-attribute">flex</span>:<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">50px</span>;      <span class="hljs-attribute">display</span>: flex;      <span class="hljs-attribute">align-items</span>: center;      <span class="hljs-attribute">justify-content</span>: center;    &#125;    <span class="hljs-selector-tag">ul</span>&#123;      <span class="hljs-attribute">list-style</span>: none;      <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;      <span class="hljs-attribute">display</span>: flex;      <span class="hljs-attribute">flex-direction</span>: column;      <span class="hljs-attribute">align-items</span>:center;      <span class="hljs-comment">// 不放大、收缩，basis:50px</span>      <span class="hljs-attribute">flex</span>:<span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">50px</span>;    &#125;  &#125;  <span class="hljs-comment">// 去掉最右边的边线</span>  <span class="hljs-attribute">section</span>:last-child&#123;    <span class="hljs-attribute">border-right</span>: none;  &#125;&#125;</code></pre><h4 id="10-导航菜单flex"><a href="#10-导航菜单flex" class="headerlink" title="10.导航菜单flex"></a>10.导航菜单flex</h4><p>margin-auto:自动撑满空间</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>home<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>video<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>img<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>user<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">nav</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-selector-tag">ul</span>&#123;    <span class="hljs-attribute">list-style</span>: none;    <span class="hljs-attribute">display</span>: flex;    <span class="hljs-attribute">align-items</span>: center;  &#125;  <span class="hljs-comment">// 第一个ul margin-right: auto;地洞撑满空间</span>  <span class="hljs-attribute">ul</span>:nth-child(<span class="hljs-number">1</span>)&#123;    <span class="hljs-attribute">margin-right</span>: auto;  &#125;  <span class="hljs-attribute">ul</span>:nth-child(<span class="hljs-number">1</span>)&gt;li&#123;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;  &#125;  <span class="hljs-attribute">ul</span>:nth-child(<span class="hljs-number">2</span>)&gt;li&#123;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">display</span>: flex;    <span class="hljs-attribute">justify-content</span>: center;    <span class="hljs-attribute">align-items</span>: center;  &#125;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>定位布局</title>
    <link href="/2020/12/06/position/"/>
    <url>/2020/12/06/position/</url>
    
    <content type="html"><![CDATA[<h2 id="定位布局"><a href="#定位布局" class="headerlink" title="定位布局"></a>定位布局</h2><h3 id="1-absolute参照元素："><a href="#1-absolute参照元素：" class="headerlink" title="1.absolute参照元素："></a>1.absolute参照元素：</h3><p>父元素有定位属性absolute|relative|fixed|…，子元素相对于父元素定位，如果父元素没有定位，一直向上找，找不到时对于整个页面；</p><h3 id="2-定位设置尺寸："><a href="#2-定位设置尺寸：" class="headerlink" title="2.定位设置尺寸："></a>2.定位设置尺寸：</h3><p>没设置尺寸时定位的top|bottom|left|right会影响尺寸;</p><h3 id="3-滚动对元素定位影响"><a href="#3-滚动对元素定位影响" class="headerlink" title="3.滚动对元素定位影响"></a>3.滚动对元素定位影响</h3><p>内容在容器里发生定位，有滚动条时内容随滚动条滚动，不会相对父元素始终定位</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid yellowgreen;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">position</span>: relative;  <span class="hljs-attribute">overflow</span>: scroll;  <span class="hljs-selector-tag">section</span>&#123;    <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;    <span class="hljs-selector-tag">div</span> &#123;      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">background</span>: yellowgreen;      <span class="hljs-attribute">position</span>: absolute;      <span class="hljs-comment">// 绝对定位居中，父元素有定位属性，相对于父元素定位；</span>      <span class="hljs-comment">// 父元素没有定位，向上层找有定位属性，相对于该上层元素定位，</span>      <span class="hljs-comment">// 没有相对于整个页面</span>      <span class="hljs-attribute">top</span>:<span class="hljs-number">50%</span>;      <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;      <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">50px</span>;      <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">50px</span>;    &#125;  &#125;&#125;</code></pre><h3 id="4-图标定位"><a href="#4-图标定位" class="headerlink" title="4.图标定位"></a>4.图标定位</h3><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>hot<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> &#123;  <span class="hljs-attribute">list-style</span>: none;  <span class="hljs-selector-tag">li</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> solid lightgreen;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">box-sizing</span>: content-box;    <span class="hljs-selector-tag">span</span> &#123;      <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;      <span class="hljs-attribute">background</span>: red;      <span class="hljs-attribute">display</span>: inline-block;      <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;      <span class="hljs-attribute">text-align</span>: center;      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">26px</span>;      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;      <span class="hljs-attribute">position</span>: absolute;      <span class="hljs-attribute">top</span>: -<span class="hljs-number">20px</span>;      <span class="hljs-attribute">left</span>: -<span class="hljs-number">20px</span>;    &#125;  &#125;&#125;</code></pre><h3 id="5-定位层级"><a href="#5-定位层级" class="headerlink" title="5.定位层级"></a>5.定位层级</h3><p>a.有定位属性时，鼠标移入改变元素层级</p><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>hot<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;first&quot;</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> &#123;  <span class="hljs-attribute">list-style</span>: none;  <span class="hljs-selector-tag">li</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> solid lightgreen;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">box-sizing</span>: content-box;    <span class="hljs-attribute">cursor</span>: pointer;    <span class="hljs-selector-tag">span</span> &#123;      <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;      <span class="hljs-attribute">background</span>: red;      <span class="hljs-attribute">display</span>: inline-block;      <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;      <span class="hljs-attribute">text-align</span>: center;      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">26px</span>;      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;      <span class="hljs-attribute">position</span>: absolute;      <span class="hljs-attribute">top</span>: -<span class="hljs-number">20px</span>;      <span class="hljs-attribute">left</span>: -<span class="hljs-number">20px</span>;      <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;    &#125;    <span class="hljs-selector-class">.first</span>&#123;      <span class="hljs-attribute">background</span>:red;      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">position</span>: absolute;      <span class="hljs-attribute">color</span>:<span class="hljs-number">#fff</span>;      <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;    &#125;  &#125;  <span class="hljs-comment">// 鼠标移入li&gt;.first层级改变</span>  <span class="hljs-attribute">li</span>:hover .first&#123;    <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;  &#125;&#125;</code></pre><p>b.购物车</p><p>鼠标移入展开，移除收缩</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span>shop<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>showShop<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">position</span>: relative;  &gt; <span class="hljs-selector-tag">div</span> &#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;  &#125;  <span class="hljs-selector-class">.top</span> &#123;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">cursor</span>: pointer;    <span class="hljs-comment">// 设置定位属性，增加top层级，让top层级覆盖bottom，默认层级为0</span>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  &#125;  <span class="hljs-comment">// 默认bottom隐藏，top有border-bottom</span>  <span class="hljs-selector-class">.bottom</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;    <span class="hljs-comment">// 绝对定位，right：0，bottom靠右，相对父级article定位</span>    <span class="hljs-attribute">position</span>: absolute;    <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">top</span>:<span class="hljs-number">50px</span>;    <span class="hljs-attribute">display</span>: none;  &#125;&#125;<span class="hljs-comment">// 鼠标移入article top的border-bottom消失，bottom出现</span><span class="hljs-attribute">article</span>:hover .top &#123;  <span class="hljs-attribute">border-bottom</span>: none;&#125;<span class="hljs-attribute">article</span>:hover .bottom &#123;  <span class="hljs-attribute">display</span>: block;&#125;</code></pre><h3 id="6-粘性定位sticky"><a href="#6-粘性定位sticky" class="headerlink" title="6.粘性定位sticky"></a>6.粘性定位sticky</h3><p>a.sticky的h2在同级，新来的元素会叠加之前的粘性元素；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>title1<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>title2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><p>b.sticky的h2在不同级，新来的元素会把之前的粘性元素顶走；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>title1<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>title2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">overflow</span>: auto;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">position</span>: relative;  <span class="hljs-selector-tag">p</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;  &#125;&#125;<span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">section</span><span class="hljs-selector-pseudo">:nth-of-type(even)</span> <span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">background</span>: yellowgreen;&#125;<span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-comment">// 粘性定位 top：0定位到顶部</span>  <span class="hljs-attribute">position</span>: sticky;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;  <span class="hljs-attribute">top</span>:<span class="hljs-number">0</span>;&#125;</code></pre><h3 id="7-固定定位fixed"><a href="#7-固定定位fixed" class="headerlink" title="7.固定定位fixed"></a>7.固定定位fixed</h3><p>a.两个元素都有定位，后出现的定位权重高，层级大于前面的定位元素，能滚动时会覆盖前面的元素</p><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- main在header后，两个元素都有定位属性 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">header</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-comment">// 固定定位fixed，top:0</span>  <span class="hljs-attribute">position</span>: fixed;  <span class="hljs-attribute">top</span>:<span class="hljs-number">0</span>;  <span class="hljs-attribute">background</span>: lightgreen;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-attribute">position</span>: relative;  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">120px</span>;&#125;</code></pre><p>b.后面的元素没有定位属性，前面的元素能够固定</p><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- main在header后，两个元素都有定位属性 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">header</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">position</span>: fixed;  <span class="hljs-attribute">top</span>:<span class="hljs-number">0</span>;  <span class="hljs-attribute">background</span>: lightgreen;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-comment">// position: relative;</span>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">120px</span>;&#125;</code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>week3</title>
    <link href="/2020/12/06/week/week3/"/>
    <url>/2020/12/06/week/week3/</url>
    
    <content type="html"><![CDATA[<h2 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h2><p>1.[[html]HTML全局属性(global attribute)有哪些（包含H5）？]</p><p>2.[[css]在页面上隐藏元素的方法有哪些？]</p><p>3.[[js]去除字符串中最后一个指定的字符]</p><h3 id="1-html-HTML全局属性-global-attribute-有哪些（包含H5）？"><a href="#1-html-HTML全局属性-global-attribute-有哪些（包含H5）？" class="headerlink" title="1.[[html]HTML全局属性(global attribute)有哪些（包含H5）？]"></a>1.[[html]HTML全局属性(global attribute)有哪些（包含H5）？]</h3><table><thead><tr><th>全局属性</th><th></th></tr></thead><tbody><tr><td>class</td><td>类</td></tr><tr><td>id</td><td>id，唯一</td></tr><tr><td>title</td><td>显示tooltip</td></tr><tr><td>lang</td><td>浏览器语言识别</td></tr><tr><td>style</td><td>css</td></tr><tr><td>accesskey</td><td>快捷键alt+‘ ’ （href=‘//’当前浏览器用http|https协议，自动加载相应协议脚本）<code>&lt;a href=&#39;//baidu.com&#39; accesskey=&#39;c&#39;&gt;baidu&lt;/a&gt;</code></td></tr><tr><td>hidden</td><td>元素隐藏 <code>&lt;div hidden&gt;hidden&lt;/div&gt;</code></td></tr><tr><td>draggable</td><td>元素拖动 draggable=’false|true|auto’</td></tr><tr><td>dropzone</td><td>在元素上拖动数据是否拷贝|移动|链接指向（大部分浏览器不支持）dropzone=‘copy|move|link‘</td></tr><tr><td>dir</td><td>文本方向从左到右|从右到左 dir=’ltr|rtl’</td></tr><tr><td>translate</td><td>是否翻译文本（大部分浏览器不支持） translate=’yes|no‘</td></tr><tr><td>contenteditable</td><td>元素是否可编辑contenteditable=’false|true‘</td></tr><tr><td>data-*</td><td>自定义属性str ，嵌入自定义数据</td></tr><tr><td>spellcheck</td><td>是否对元素语法检查</td></tr><tr><td>contextmenu</td><td>右键点击元素出现上下文菜单（只有火狐支持）</td></tr><tr><td>tabindex</td><td>tab控制导航次序</td></tr></tbody></table><h3 id="2-css-在页面上隐藏元素的方法有哪些？"><a href="#2-css-在页面上隐藏元素的方法有哪些？" class="headerlink" title="2.[[css]在页面上隐藏元素的方法有哪些？]"></a>2.[[css]在页面上隐藏元素的方法有哪些？]</h3><p>1.opacity（css）</p><p>opacity:0;</p><p>2.display（css）</p><p>display:none|block;</p><p>3.z-index（css）</p><p>4.transform（css）</p><p>缩放</p><p>transform:scale(0)</p><p>5.visibility:hidden|visible;</p><p>6.hidden（html）</p><h3 id="3-js-去除字符串中最后一个指定的字符"><a href="#3-js-去除字符串中最后一个指定的字符" class="headerlink" title="3.[[js]去除字符串中最后一个指定的字符]"></a>3.[[js]去除字符串中最后一个指定的字符]</h3><p>substr：str.substr(start,length);</p><p>1）截取str，不传参数，返回全部。不改变原始str；</p><p>2）省略stop，截取从开始到结尾；</p><p>3）start可为负数， -1：最后一个。length&lt;0，返回空；</p><hr><p>substring：str.substring(start,end);</p><p>1）截取str，不传参数，返回全部。不改变原始str；</p><p>2）省略stop，截取从开始到结尾；</p><p>3）如果start、end&lt;0，把值转换成0;</p><p>4）start&gt;end时，调换start和end的位置；</p><hr><p>slice：str.slice(start,end);</p><p>1）截取str/arr，不传参数，返回全部。不改变原始str；</p><p>2）省略stop，截取从开始到结尾；</p><p>3）start、end可为负数， -1：最后一个；</p><p>4）start&gt;end时，返回空；</p><p>end&lt;0|start&lt;0时，newend=length-end|newstart=length-start；</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> s=<span class="hljs-string">&#x27;123456&#x27;</span>;s.substr(<span class="hljs-number">0</span>,s.length-<span class="hljs-number">1</span>);s.substring(<span class="hljs-number">0</span>,s.length-<span class="hljs-number">1</span>);s.slice(<span class="hljs-number">0</span>,str.length-<span class="hljs-number">1</span>);</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>week2</title>
    <link href="/2020/12/06/week/week2/"/>
    <url>/2020/12/06/week/week2/</url>
    
    <content type="html"><![CDATA[<h2 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h2><p>1.[[html]html的元素有哪些（包含H5）？]</p><p>2.[[css]CSS3有哪些新增的特性？]</p><p>3.[[js]写一个方法去掉字符串中的空格]</p><h3 id="1-html-html的元素有哪些（包含H5）？"><a href="#1-html-html的元素有哪些（包含H5）？" class="headerlink" title="1.[[html]html的元素有哪些（包含H5）？]"></a>1.[[html]html的元素有哪些（包含H5）？]</h3><p>行内：a|span|em|label|br</p><p>1）不可设置width|height|padding|margin；</p><p>2）和其他元素一行排列；</p><p>3）自身有高度</p><p>块：div|h*|p|form|table|ul|li</p><p>1）可设置width|height|padding|margin;</p><p>2）独占一行；</p><p>3）高度默认继承父元素</p><p>行块：input|img</p><p>1）可设置width|heigth|padding|margin;</p><p>2）独占一行；</p><p>3）display:inline-block;|float|position:absolute|fixed可改变为行块；</p><p>H5：header|footer|main|article|aside|nav|video|audio|canvas|mark|time|details|meter</p><h3 id="2-css-CSS3有哪些新增的特性？"><a href="#2-css-CSS3有哪些新增的特性？" class="headerlink" title="2.[[css]CSS3有哪些新增的特性？]"></a>2.[[css]CSS3有哪些新增的特性？]</h3><p>1.css选择器</p><p>last-child 父元素最后一个子元素</p><p>nth-child(n) 父元素的第n个子元素</p><p>nth-last-child(n) 父元素倒数第n个子元素</p><p>2.圆角</p><p>border-radius:num|%;</p><p>3.阴影</p><p>box-shadow: h v 模糊距离 阴影大小 rgba;</p><p>4.多列布局</p><p>column-count:num;</p><p>column-gap:num;</p><p>column-rule: 列宽 列中间样式 列中间颜色</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mul-col&quot;</span>&gt;</span>      当我年轻的时候，我梦想改变这个世界；当我成熟以后，我发现我不能够改变这个世界，我将目光缩短了些，决定只改变我的国家；当我进入暮年以后，我发现我不能够改变我们的国家，我的最后愿望仅仅是改变一下我的家庭，但是，这也不可能。当我现在躺在床上，行将就木时，我突然意识到：如果一开始我仅仅去改变我自己，然后，我可能改变我的家庭；在家人的帮助和鼓励下，我可能为国家做一些事情；然后，谁知道呢?我甚至可能改变这个世界。<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.mul-col</span>&#123;  <span class="hljs-attribute">column-count</span>:<span class="hljs-number">3</span>;  <span class="hljs-attribute">column-gap</span>:<span class="hljs-number">10px</span>;  <span class="hljs-attribute">column-rule</span>:<span class="hljs-number">1px</span> solid red;&#125;</code></pre><p>5.@font-face</p><p>加载没有安装的字体</p><pre><code class="hljs less"><span class="hljs-keyword">@font-face</span>&#123;  <span class="hljs-attribute">font-family</span>: myfont;  <span class="hljs-attribute">src</span>:url(<span class="hljs-string">&#x27;../text/ADOBEGOTHICSTD-BOLD.OTF&#x27;</span>)&#125;<span class="hljs-selector-class">.mul-col</span>&#123;  <span class="hljs-attribute">column-count</span>:<span class="hljs-number">3</span>;  <span class="hljs-attribute">column-gap</span>:<span class="hljs-number">10px</span>;  <span class="hljs-attribute">column-rule</span>:<span class="hljs-number">1px</span> solid red;  <span class="hljs-attribute">font-family</span>: myfont;&#125;</code></pre><p>6.flex</p><p>7.渐变</p><p>background:linear-gradient(渐变方向,color1,color2,…….)</p><h3 id="3-js-写一个方法去掉字符串中的空格"><a href="#3-js-写一个方法去掉字符串中的空格" class="headerlink" title="3.[[js]写一个方法去掉字符串中的空格]"></a>3.[[js]写一个方法去掉字符串中的空格]</h3><p>1）正则</p><pre><code class="hljs JS"><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;    f d   sf s  &quot;</span><span class="hljs-comment">// ig:忽略大小写&amp;全局匹配</span><span class="hljs-comment">// *:表达式匹配&gt;=0次</span><span class="hljs-comment">// $:匹配行尾</span><span class="hljs-comment">// ^:匹配行首</span><span class="hljs-comment">// |:或</span><span class="hljs-comment">// 去除所有空格</span>s.replace(<span class="hljs-regexp">/\s/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-comment">// 去除左右两边所有空格</span>s.replace(<span class="hljs-regexp">/^\s*|\s*$/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-comment">// 去除左边空格</span>s.replace(<span class="hljs-regexp">/^\s*/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-comment">// 去除右边空格</span>s.replace(<span class="hljs-regexp">/\s*$/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)</code></pre><p>2）trim</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;    f d   sf s  &quot;</span><span class="hljs-comment">// 去除左右两边所有空格</span>s.trim()<span class="hljs-comment">// 去除左边空格</span>s.trimLeft()<span class="hljs-comment">// 去除右边空格</span>s.trimRight()</code></pre><p>3）split</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;    f d   sf s  &quot;</span><span class="hljs-comment">// 去除所有空格</span>s.split(<span class="hljs-string">&#x27; &#x27;</span>).join(<span class="hljs-string">&#x27;&#x27;</span>)</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>浮动布局</title>
    <link href="/2020/11/30/float/"/>
    <url>/2020/11/30/float/</url>
    
    <content type="html"><![CDATA[<h2 id="浮动布局"><a href="#浮动布局" class="headerlink" title="浮动布局"></a>浮动布局</h2><h3 id="1-文档流与浮动空间的消失"><a href="#1-文档流与浮动空间的消失" class="headerlink" title="1.文档流与浮动空间的消失"></a>1.文档流与浮动空间的消失</h3><p>块级元素：浮动会脱离文档流，从左向右排列，不占空间位，影响后面的元素，后面的元素不浮动会补充到浮动的位置上。</p><p>行级元素：浮动会变为行级块，浮动到相应位置，依然占据空间位，能设置宽高。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box1&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box2&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;&#125;<span class="hljs-selector-class">.box1</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;  <span class="hljs-attribute">float</span>: left;&#125;<span class="hljs-selector-class">.box2</span>&#123;  <span class="hljs-attribute">background</span>: blue;&#125;</code></pre><h3 id="2-左右浮动"><a href="#2-左右浮动" class="headerlink" title="2.左右浮动"></a>2.左右浮动</h3><p>浮动参考父盒子，在内边距内padding内。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  &#125;  <span class="hljs-selector-class">.box1</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;    <span class="hljs-attribute">float</span>: left;  &#125;  <span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">background</span>: blue;    <span class="hljs-attribute">float</span>: right;  &#125;&#125;</code></pre><h3 id="3-行级元素浮动后转换为行级块"><a href="#3-行级元素浮动后转换为行级块" class="headerlink" title="3.行级元素浮动后转换为行级块"></a>3.行级元素浮动后转换为行级块</h3><p>行级元素没有宽高，在一行。浮动后转换为块级元素，有宽高</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span>box1<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span>box2<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    &#125;    <span class="hljs-selector-class">.box1</span>&#123;        <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;        <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-class">.box2</span>&#123;        <span class="hljs-attribute">background</span>: blue;        <span class="hljs-comment">// float: right;</span>  &#125;&#125;</code></pre><h3 id="4-清除浮动（clear）"><a href="#4-清除浮动（clear）" class="headerlink" title="4.清除浮动（clear）"></a>4.清除浮动（clear）</h3><p>清除不占空间位对后面元素的影响;</p><p>a.空的块级元素清除浮动后能撑开父元素</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span>box1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span>box2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box3&quot;</span>&gt;</span>box3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  &#125;  <span class="hljs-selector-class">.box1</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;    <span class="hljs-attribute">float</span>: left;  &#125;  <span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">background</span>: blue;    <span class="hljs-attribute">float</span>: right;  &#125;  <span class="hljs-selector-class">.box3</span>&#123;    <span class="hljs-attribute">clear</span>: both;  &#125;&#125;</code></pre><h6 id="b-伪元素清除浮动，在父元素后面增加伪元素，通过清除一个空的伪元素并把伪元素转换成块级元素来撑开父元素；"><a href="#b-伪元素清除浮动，在父元素后面增加伪元素，通过清除一个空的伪元素并把伪元素转换成块级元素来撑开父元素；" class="headerlink" title="b.伪元素清除浮动，在父元素后面增加伪元素，通过清除一个空的伪元素并把伪元素转换成块级元素来撑开父元素；"></a>b.伪元素清除浮动，在父元素后面增加伪元素，通过清除一个空的伪元素并把伪元素转换成块级元素来撑开父元素；</h6><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span>box1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span>box2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  &#125;  <span class="hljs-selector-class">.box1</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;    <span class="hljs-attribute">float</span>: left;  &#125;  <span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">background</span>: blue;    <span class="hljs-attribute">float</span>: right;  &#125;&#125;<span class="hljs-selector-class">.main</span><span class="hljs-selector-pseudo">::after</span>&#123;  <span class="hljs-attribute">content</span>:<span class="hljs-string">&#x27;&#x27;</span>;  <span class="hljs-attribute">clear</span>: both;  <span class="hljs-attribute">display</span>: block;&#125;</code></pre><h6 id="c-BFC清除浮动overflow-hidden"><a href="#c-BFC清除浮动overflow-hidden" class="headerlink" title="c.BFC清除浮动overflow:hidden;"></a>c.BFC清除浮动overflow:hidden;</h6><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span>box1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span>box2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  &#125;  <span class="hljs-selector-class">.box1</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;    <span class="hljs-attribute">float</span>: left;  &#125;  <span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">background</span>: blue;    <span class="hljs-attribute">float</span>: right;  &#125;&#125;</code></pre><h3 id="5-块结构布局"><a href="#5-块结构布局" class="headerlink" title="5.块结构布局"></a>5.块结构布局</h3><h6 id="a-布局1"><a href="#a-布局1" class="headerlink" title="a.布局1"></a>a.布局1</h6><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>          <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">box-sizing</span>: border-box;  <span class="hljs-selector-class">.box</span>&#123;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;    <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">overflow</span>: hidden;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">10px</span>  &#125;  <span class="hljs-selector-class">.top</span>&#123;    <span class="hljs-selector-class">.box</span>;    <span class="hljs-selector-class">.topItem</span>&#123;      <span class="hljs-attribute">background</span>: yellow;      <span class="hljs-attribute">width</span>: <span class="hljs-number">550px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;     &#125;    <span class="hljs-selector-class">.left</span>&#123;      <span class="hljs-selector-class">.topItem</span>;      <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-class">.right</span>&#123;      <span class="hljs-selector-class">.topItem</span>;      <span class="hljs-attribute">float</span>: right;    &#125;  &#125;  <span class="hljs-selector-class">.bottom</span>&#123;    <span class="hljs-selector-class">.box</span>;    <span class="hljs-selector-class">.left</span>&#123;      <span class="hljs-attribute">background</span>: yellow;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-class">.right</span>&#123;      <span class="hljs-attribute">background</span>: yellow;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;      <span class="hljs-attribute">width</span>: calc(<span class="hljs-number">100%</span> - <span class="hljs-number">120px</span>);      <span class="hljs-attribute">float</span>: right;      <span class="hljs-selector-tag">ul</span> &#123;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;        <span class="hljs-selector-tag">li</span>&#123;        <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;          <span class="hljs-attribute">list-style</span>: none;          <span class="hljs-attribute">float</span>: left;          <span class="hljs-attribute">height</span>: calc(<span class="hljs-number">100%</span> - <span class="hljs-number">15px</span>);          <span class="hljs-attribute">width</span>:<span class="hljs-number">300px</span>;          <span class="hljs-attribute">background</span>: greenyellow;        &#125;      &#125;    &#125;  &#125;&#125;</code></pre><h6 id="b-布局2"><a href="#b-布局2" class="headerlink" title="b.布局2"></a>b.布局2</h6><p>不用position:fixed; bottom:0;定位footer到底端，就需要BFC清除浮动；</p><p>否则不用BFC；</p><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>             <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>                 <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>             <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>         <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>             <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>login<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>         <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>     <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">main</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>footer<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less">*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">li</span>&#123;  <span class="hljs-attribute">list-style</span>: none;&#125;<span class="hljs-selector-tag">a</span>&#123;  <span class="hljs-attribute">text-decoration</span>: none;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;&#125;<span class="hljs-comment">// header</span><span class="hljs-selector-class">.header</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> rgba(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,.<span class="hljs-number">3</span>);  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">5px</span> solid <span class="hljs-number">#1791A1</span>;  <span class="hljs-selector-tag">nav</span>&#123;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">25px</span> <span class="hljs-number">10px</span> <span class="hljs-number">40px</span> <span class="hljs-number">10px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;    <span class="hljs-selector-class">.left</span>&#123;      <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-tag">ul</span>&#123;      <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-class">.right</span>&#123;      <span class="hljs-attribute">float</span>: right;    &#125;  &#125;&#125;<span class="hljs-comment">// content</span><span class="hljs-selector-class">.content</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">15px</span> auto;  <span class="hljs-comment">// BFC</span>  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">width</span>: <span class="hljs-number">800px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  &#125;  <span class="hljs-selector-tag">aside</span>&#123;    <span class="hljs-attribute">float</span>: right;    <span class="hljs-attribute">width</span>: calc(<span class="hljs-number">100%</span> - <span class="hljs-number">900px</span>);    <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  &#125;&#125;<span class="hljs-comment">// footer</span><span class="hljs-selector-class">.footer</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-comment">// position: fixed;</span>  <span class="hljs-comment">// bottom: 0;</span>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">border-top</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>; <span class="hljs-selector-class">.content</span>&#123;   <span class="hljs-attribute">padding</span>: <span class="hljs-number">25px</span>;   <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;   <span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span> auto;   <span class="hljs-attribute">text-align</span>: center; &#125; &#125;</code></pre><h3 id="6-文字环绕距离"><a href="#6-文字环绕距离" class="headerlink" title="6.文字环绕距离"></a>6.文字环绕距离</h3><p>内容与元素的距离</p><p>shape-outside:padding-box|border-box|content-box;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia.      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.left</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> solid red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">shape-outside</span>: padding-box;  &#125;&#125;</code></pre><h3 id="7-浮动显示区域形状"><a href="#7-浮动显示区域形状" class="headerlink" title="7.浮动显示区域形状"></a>7.浮动显示区域形状</h3><p>clip-path:circle()|ellipse(10% 30%)|polygon(0 0, 100% 100%, 0 100%);</p><p>形状 circle(半径)|ellipse(长轴，短轴)|polygon(顺时针，左上角坐标0 0)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia.      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.left</span>&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">shape-outside</span>: padding-box;    <span class="hljs-comment">// clip-path: circle();</span>    <span class="hljs-comment">// clip-path: ellipse(10% 30%);</span>    <span class="hljs-attribute">clip-path</span>: polygon(<span class="hljs-number">0</span> <span class="hljs-number">0</span>, <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">0</span> <span class="hljs-number">100%</span>);  &#125;&#125;</code></pre><h3 id="8-文字与显示形状环绕"><a href="#8-文字与显示形状环绕" class="headerlink" title="8.文字与显示形状环绕"></a>8.文字与显示形状环绕</h3><p>shape-outside与clip-path设置成一样的区域，文字与显示形状会环绕</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia.      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.left</span>&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-comment">// clip-path: circle();</span>    <span class="hljs-comment">// shape-outside: circle();</span>    <span class="hljs-comment">// clip-path: ellipse(10% 30%);</span>    <span class="hljs-comment">// shape-outside: ellipse(10% 30%);</span>    <span class="hljs-attribute">clip-path</span>: polygon(<span class="hljs-number">0</span> <span class="hljs-number">0</span>, <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">0</span> <span class="hljs-number">100%</span>);    <span class="hljs-attribute">shape-outside</span>: polygon(<span class="hljs-number">0</span> <span class="hljs-number">0</span>, <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">0</span> <span class="hljs-number">100%</span>);  &#125;&#125;</code></pre><h3 id="9-文字与图片环绕"><a href="#9-文字与图片环绕" class="headerlink" title="9.文字与图片环绕"></a>9.文字与图片环绕</h3><p>shape-outside:url(‘’)文字围绕图片形状环绕</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1607254170243&amp;di=1b2f8a4f1cff0cb1aa22cd96e96475cc&amp;imgtype=0&amp;src=http%3A%2F%2Fpngimg.com%2Fuploads%2Fpokemon%2Fpokemon_PNG148.png&#x27;</span>/&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia.      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-tag">img</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">shape-outside</span>: url(<span class="hljs-string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1607254170243&amp;di=1b2f8a4f1cff0cb1aa22cd96e96475cc&amp;imgtype=0&amp;src=http%3A%2F%2Fpngimg.com%2Fuploads%2Fpokemon%2Fpokemon_PNG148.png&#x27;</span>);  &#125;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>week1</title>
    <link href="/2020/11/26/week/week1/"/>
    <url>/2020/11/26/week/week1/</url>
    
    <content type="html"><![CDATA[<h2 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h2><p>1.[页面导入样式时，使用link和@import有什么区别？]</p><p>2.[[css]圣杯布局和双飞翼布局的理解和区别，并用代码实现]</p><p>3.[[js]用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值]</p><hr><h3 id="1-页面导入样式时，使用link和-import有什么区别？"><a href="#1-页面导入样式时，使用link和-import有什么区别？" class="headerlink" title="1.[页面导入样式时，使用link和@import有什么区别？]"></a>1.[页面导入样式时，使用link和@import有什么区别？]</h3><p>link：</p><p>1.页面渲染同时加载，</p><p>2.xhtml，无兼容问题；</p><p>3.支持用js控制dom修改样式；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;old.css&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text/css&#x27;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&#x27;stylesheet&#x27;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;link&#x27;</span>&gt;</span></code></pre><pre><code class="hljs js"><span class="hljs-keyword">let</span> linkId = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;link&#x27;</span>)linkId.href = <span class="hljs-string">&#x27;new.css&#x27;</span></code></pre><p>@import：</p><p>1.页面渲染结束加载；</p><p>2.css，存在兼容问题，不兼容ie5之前；</p><p>3.不支持；</p><h3 id="2-css-圣杯布局和双飞翼布局的理解和区别，并用代码实现"><a href="#2-css-圣杯布局和双飞翼布局的理解和区别，并用代码实现" class="headerlink" title="2.[[css]圣杯布局和双飞翼布局的理解和区别，并用代码实现]"></a>2.[[css]圣杯布局和双飞翼布局的理解和区别，并用代码实现]</h3><p>圣杯布局:</p><p>1）dom直观，div包裹整个主区域；</p><p>2）相对定位；</p><p>3）代码量多，清除浮动多，副作用少；</p><p>双飞翼布局:</p><p>1）dom不直观，div包裹主区域的中间区域；</p><p>2）不用定位；</p><p>3）代码量少，清除浮动少，副作用多；</p><h6 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h6><table><thead><tr><th>header</th><th>header</th><th>头</th></tr></thead><tbody><tr><td>left content right</td><td>div</td><td>主</td></tr><tr><td>footer</td><td>footer</td><td>底</td></tr></tbody></table><p>1）主区域的content优先加载，要将content的div放在第一个位置，此时从上到下排列为left content right,</p><p>2）float将主区域的三块内容显示在一行，设置负外边距，给main增加padding，padding左右两侧的距离是左右元素的宽度，再设置margin元素不会出去。调整顺序.content{width: 100%;}主区域的中间内容独占一行。</p><p>左区域.left{margin-left:-100%;}使左区域在中间区域的左边；</p><p>右区域.left{margin-left:-右区域宽度;}使左区域在中间区域的右边；</p><p>3）给左右区域增加相对定位，就不会挡住中间区域；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>header<span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-comment">&lt;!-- 圣杯布局先加载主区域，优先显示 --&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>footer<span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less">*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;&#125;<span class="hljs-selector-class">.header</span>,<span class="hljs-selector-class">.footer</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;&#125;<span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">300px</span>;  <span class="hljs-comment">// 清除浮动的塌陷</span>  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.content</span>&#123;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;    <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightgreen;  &#125;  <span class="hljs-selector-class">.left</span>&#123;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">100%</span>;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">left</span>: -<span class="hljs-number">300px</span>;  &#125;  <span class="hljs-selector-class">.right</span>&#123;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: yellow;    <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">300px</span>;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">right</span>: -<span class="hljs-number">300px</span>;  &#125;&#125;</code></pre><h6 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h6><table><thead><tr><th>header</th><th>header</th><th>头</th></tr></thead><tbody><tr><td>content</td><td>div content div</td><td>中</td></tr><tr><td>left</td><td>div</td><td>左</td></tr><tr><td>right</td><td>div</td><td>右</td></tr><tr><td>footer</td><td>footer</td><td>底</td></tr></tbody></table><p>双飞翼布局主区域中的中间区域被div包裹</p><p>1）中间区域宽度.main{width:100%}，</p><p>左区域.left{margin-left:-100%}调整左区域与中间区域的顺序，</p><p>右区域.right{margin-right:右区域的宽度}</p><p>左右区域会遮住中间区域，给中间区域包裹一层div，设置浮动和宽度。给中间区域设置外边距中间缩进；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>header<span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">main</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>conter<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>footer<span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less">*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;&#125;<span class="hljs-selector-class">.header</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;&#125;<span class="hljs-selector-class">.footer</span>&#123;  <span class="hljs-selector-class">.header</span>;  <span class="hljs-comment">// 清除浮动对footer的影响</span>  <span class="hljs-attribute">clear</span>: both;&#125;<span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">float</span>: left;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-selector-class">.center</span>&#123;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightgreen;  &#125;&#125;<span class="hljs-selector-class">.left</span>&#123;  <span class="hljs-attribute">float</span>: left;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">100%</span>;&#125;<span class="hljs-selector-class">.right</span>&#123;  <span class="hljs-attribute">float</span>: left;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">background</span>: yellow;  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">300px</span>;&#125;</code></pre><h3 id="3-js-用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值"><a href="#3-js-用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值" class="headerlink" title="3.[[js]用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值]"></a>3.[[js]用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值]</h3><pre><code class="hljs js"><span class="hljs-comment">// new 长度=5的数组</span><span class="hljs-keyword">let</span> arr = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">5</span>) <span class="hljs-keyword">let</span> num = randomNum()<span class="hljs-comment">//计数器</span><span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>randomArr(arr,num)<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomArr</span>(<span class="hljs-params">arr,num</span>)</span>&#123;    <span class="hljs-comment">//arr数组中没有随机数num，给arr索引位置赋值，i++,</span>    <span class="hljs-comment">//否则重新获取随机数</span>    <span class="hljs-keyword">if</span>(arr.indexOf(num)&lt;<span class="hljs-number">0</span>)&#123;        arr[i] = num;        i++    &#125;<span class="hljs-keyword">else</span>&#123;        num=randomNum()    &#125;    <span class="hljs-comment">//计数器i&lt;arr数组长度,重新调用randomArr()</span>    <span class="hljs-comment">//否则return</span>    <span class="hljs-keyword">if</span>(i&lt;arr.length)&#123;        randomArr(arr,num)    &#125;<span class="hljs-keyword">else</span>&#123;        <span class="hljs-built_in">console</span>.log(arr)        <span class="hljs-keyword">return</span>    &#125;&#125;<span class="hljs-comment">//2-32的随机数</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomNum</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-comment">//floor向下取整，random取(0,1)随机数</span>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">31</span>+<span class="hljs-number">2</span>)&#125;</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>week</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
