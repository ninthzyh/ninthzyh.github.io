<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>charles</title>
    <link href="/2021/07/14/charles/"/>
    <url>/2021/07/14/charles/</url>
    
    <content type="html"><![CDATA[<h1 id="weight"><a href="#weight" class="headerlink" title="weight"></a>weight</h1><h3 id="charles"><a href="#charles" class="headerlink" title="charles"></a>charles</h3><h4 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h4><p>charles是http的代理服务器，截取请求和请求结果达到抓包的目的。</p><ul><li>作用：分析前后端问题；弱网环境下测试；用断点构建异常的测试场景；</li><li>工作原理</li></ul><p><img src="D:\hexo\blog\img\charles\工作原理.png"></p><ul><li>功能：支持http、https的代理；流量控制（模拟弱网环境）；断点调试；接口并发请求；重发网络请求；</li><li>优点：反向代理；支持多平台（linux、mac、windows）；可以通过域名和接口查看，简洁明了；支持网络限速，选择网络；支持amf协议；</li></ul><h4 id="2-代理设置"><a href="#2-代理设置" class="headerlink" title="2.代理设置"></a>2.代理设置</h4><ul><li>proxy—Access Control Settings：（访问控制）允许的IP通过charles访问网络，勾选prompt to allow unauthorized connections 不在列表里的ip通过charles访问网络时有提示信息：“是否通过charles访问服务器”</li><li>proxy—proxy Settings：设置代理端口</li><li>windows开启代理：chrome—-设置—-代理（<strong>打开您计算机的代理设置</strong>）—-输入charles所在的ip和proxy Settings设置的端口（默认8888）。如果charles就在本机上只需要勾选（proxy—-windows proxy）</li><li>proxy—SSL Proxying Settings：设置charles抓包的地址，全部location填*</li><li>help—–SSL Proxying—-Install Charles Root Certificate：添加https证书，不添加https证书，请求https会看到乱码</li></ul><h4 id="3-流量配置"><a href="#3-流量配置" class="headerlink" title="3.流量配置"></a>3.流量配置</h4><p>proxy—-Throttle Setting：流量配置，勾选Enable Torottling</p><h4 id="4-弱网测试"><a href="#4-弱网测试" class="headerlink" title="4.弱网测试"></a>4.弱网测试</h4><p>针对app测试网络环境差的情况下会不会闪退、崩溃等</p><p>流量配置后timing会边长</p><h4 id="5-断点配置"><a href="#5-断点配置" class="headerlink" title="5.断点配置"></a>5.断点配置</h4><ul><li>在charles的接口列表种选择自己需要调试的接口，右键选择breakpoints开启断点调试，前端页面请求这个接口，请求会被charles拦截。</li><li>选择左侧breakpoints的断点，右侧Edit Request—-JSON Text对入参进行修改，修改完成后选择Execute。</li><li>charles把客户端请求发给服务器，服务器把请求结果再给charles，charles拦截，可以对出参进行修改，Edit Response—-JSON Text，修改完成后选择Execute。charles再把请求结果交给客户端。</li></ul>]]></content>
    
    
    <categories>
      
      <category>charles</category>
      
    </categories>
    
    
    <tags>
      
      <tag>charles</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx</title>
    <link href="/2021/06/30/nginx/"/>
    <url>/2021/06/30/nginx/</url>
    
    <content type="html"><![CDATA[<h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><p>http、反向代理、静态页面的服务器；</p><p>支持动态语言（不支持Java）；</p><p>高负载支持高达5w并发；</p><h3 id="2-正向代理"><a href="#2-正向代理" class="headerlink" title="2.正向代理"></a>2.正向代理</h3><p>客户端直接无法访问网址(<a href="http://www.google.com),就先在浏览器中配置代理服务器,用代理服务器去访问这个网址./">www.google.com)，就先在浏览器中配置代理服务器，用代理服务器去访问这个网址。</a></p><p><img src="D:\hexo\blog\img\nginx\正向代理.jpg"></p><h3 id="3-反向代理"><a href="#3-反向代理" class="headerlink" title="3.反向代理"></a>3.反向代理</h3><p><strong>目标服务器看作不同后端的地址</strong></p><p>客户端不会直接访问目标服务器（8080、8081、8082），客户端（不需要在浏览器中配置代理服务器）先访问反向代理服务器（9001），反向代理服务器再去访问目标服务器获取数据，然后再把数据返回给客户端。</p><p>对外暴露反向代理服务器的地址，隐藏目标服务器的地址，对用户来说访问的是（反向代理+目标服务器）一台服务器。</p><p><img src="D:\hexo\blog\img\nginx\反向代理.png"></p><h3 id="4-负载均衡"><a href="#4-负载均衡" class="headerlink" title="4.负载均衡"></a>4.负载均衡</h3><p>反向代理的目标服务器有多个，分散一台服务器的请求、相应的压力。</p><p>单一服务器：</p><p>客户端请求服务端数，服务端操作数据库，获取到了数据相应客户端</p><p>多个服务器：上图反向代理</p><h3 id="5-动静分离"><a href="#5-动静分离" class="headerlink" title="5.动静分离"></a>5.动静分离</h3><p>反向代理服务器把请求动态资源和静态资源分在两台服务器上</p><p><img src="D:\hexo\blog\img\nginx\动静分离.png"></p><h3 id="6-nginx命令"><a href="#6-nginx命令" class="headerlink" title="6.nginx命令"></a>6.nginx命令</h3><pre><code class="hljs asciidoc">查看开放的端口号：firewall-cmd --list-alllinux防火墙开放端口号：sudo firewall-cmd --add-port=8001/tcp --permanent重启防火墙：firewall-cmd --reload--------------------------------------------------------------------------nginx命令需要在nginx目录下/usr/local/nginx/sbin查看版本号：./nginx -v查看nginx状态：ps -ef | grep nginx启动：./nginx关闭：./nginx -s stop重新加载：./nginx -s reload--------------------------------------------------------------------------nginx配置文件位置：usr/local/nginx/nginx.conf全局块：开始到event块之间，包括worker<span class="hljs-emphasis">_processes(最大并发）</span><span class="hljs-emphasis">event块：worker_</span>connections(连接数)http块：<span class="hljs-code">|  http全局块：文件引入、MIME-TYPE定义、日志自定义、连接超时时间、单链请求数上   |         线；</span><span class="hljs-code">|   server块：</span><span class="hljs-code">   |全局server块：配置虚拟主机的ip、port</span><span class="hljs-code">   |location块：一个server可以有多个locaition</span><span class="hljs-code">   </span></code></pre><h3 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h3><h5 id="1）实例1"><a href="#1）实例1" class="headerlink" title="1）实例1"></a>1）实例1</h5><p>客户端网址输入<a href="http://www.123.com:8080/">www.123.com:8080</a> 打开tomcat欢迎页</p><pre><code class="hljs asciidoc">1.启动tomcat（bin/startup.bat）地址：localhost:80802.windows/System32/drivers/etc/hosts修改映射，将本机ip【目标服务器ip】映射到www.123.com名称上【如www.wisdom-eye.com】192.168.1.49 www.123.com 访问www.123.com就相当于访问本机【目标服务器ip www.wisdom-eye.com访问www.wisdom-eye.com相当于访问目标服务器】3.启动nginx进入nginx欢迎页localhost:80，客户端访问反向代理服务器，代理服务器将请求转发到目标服务器tomcat的欢迎页【代理服务器将请求转发到目标服务器的ip上】4.修改nginx配置（config/nginx.conf）监听81端口，这是反向代理暴露出来的端口，server块中proxy<span class="hljs-emphasis">_pass配转发的目标服务器地址localhost:8080【项目目标地址】</span><span class="hljs-emphasis">--------------------------------------------------------------------------</span><span class="hljs-emphasis">server&#123;</span><span class="hljs-emphasis">listen 81;</span><span class="hljs-emphasis">server_</span>name  localhost;<span class="hljs-code">location / &#123;</span><span class="hljs-code">root html;</span><span class="hljs-code">proxy_pass  http://127.0.0.1:8080;</span><span class="hljs-code">index  index.html  index.htm;</span><span class="hljs-code">&#125;</span>&#125;5.测试，访问www.123.com:8080跳转到tomcat的欢迎页</code></pre><h5 id="2）实例2"><a href="#2）实例2" class="headerlink" title="2）实例2"></a>2）实例2</h5><p>客户端<code>http://localhost:8080</code>访问反向代理服务器9009端口，反向代理服务器分别请求</p><p><code>http://36.137.0.237:81/images/</code></p><p><code>http://36.134.212.144:82/live/</code></p><p><code>http://36.134.212.143:83/audio/</code></p><p>然后把返回数据给客户端</p><pre><code class="hljs awk">server &#123;        listen       <span class="hljs-number">9009</span>;        server_name  localhost;        location <span class="hljs-regexp">/qnxm/</span> &#123;            proxy_pass    http:<span class="hljs-regexp">//</span><span class="hljs-number">36.137</span>.<span class="hljs-number">0.237</span>:<span class="hljs-number">81</span><span class="hljs-regexp">/qnxm/</span>;        &#125;        <span class="hljs-comment"># 匹配路径是/image/，访问http://36.137.0.237:81/images/</span>location <span class="hljs-regexp">/images/</span> &#123;proxy_pass    http:<span class="hljs-regexp">//</span><span class="hljs-number">36.137</span>.<span class="hljs-number">0.237</span>:<span class="hljs-number">81</span><span class="hljs-regexp">/images/</span>;&#125;<span class="hljs-comment"># 匹配到路径中有live---&gt;访问http://36.134.212.144:82/live/</span>location ~ <span class="hljs-regexp">/live/</span>&#123;proxy_pass    http:<span class="hljs-regexp">//</span><span class="hljs-number">36.134</span>.<span class="hljs-number">212.144</span>:<span class="hljs-number">82</span><span class="hljs-regexp">/live/</span>;&#125;<span class="hljs-comment"># 匹配到路径中有audio---&gt;访问http://36.134.212.143:83/audio</span>location ~ <span class="hljs-regexp">/audio/</span>&#123;proxy_pass    http:<span class="hljs-regexp">//</span><span class="hljs-number">36.134</span>.<span class="hljs-number">212.143</span>:<span class="hljs-number">83</span>;&#125;        location / &#123;            proxy_pass    http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">8080</span>/;        &#125;        error_page   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /<span class="hljs-number">50</span>x.html;        location = /<span class="hljs-number">50</span>x.html &#123;            root   html;        &#125;            &#125;</code></pre><h3 id="8-location配置"><a href="#8-location配置" class="headerlink" title="8.location配置"></a>8.location配置</h3><h5 id="location匹配"><a href="#location匹配" class="headerlink" title="location匹配"></a>location匹配</h5><p>优先级从高到低</p><table><thead><tr><th>location = /a{}</th><th>= /a</th><th>精准匹配a，完全相同</th></tr></thead><tbody><tr><td>location ^~ /a{}</td><td>^~ /a</td><td>以a开头</td></tr><tr><td>location ~ /a{}</td><td>~</td><td>区分大小写，正则匹配，路径中有a</td></tr><tr><td>location ~* /a{}</td><td>~*</td><td>不区分大小写，正则匹配，路径中有a</td></tr><tr><td>location !~ /a{}</td><td>!~</td><td>区分大小写，正则匹配，路径中没有a</td></tr><tr><td>location !~* /a{}</td><td>!~*</td><td>不区分大小写，正则匹配，路径中没有a</td></tr><tr><td>location /a{}</td><td>/</td><td>通用匹配，任何请求都会匹配到</td></tr></tbody></table><p>匹配</p><p>1）优先级 从高到低<code>=</code> <code>^~</code> <code>~</code> <code>/</code></p><p>2）优先级相同，匹配度高的先匹配</p><p>3）匹配度也相同，按先后顺序</p><table><thead><tr><th align="center"></th><th align="center">/a</th><th align="center">/a/b</th><th align="center">/a/d</th><th align="center">/d</th></tr></thead><tbody><tr><td align="center">location = /a{}</td><td align="center">1</td><td align="center">-</td><td align="center">-</td><td align="center">-</td></tr><tr><td align="center">location ^~ /a{}</td><td align="center">-</td><td align="center">2匹配优先级^高于~</td><td align="center">3</td><td align="center">-</td></tr><tr><td align="center">location ^~ /a/b{}</td><td align="center">-</td><td align="center">1匹配度高于 ^/a</td><td align="center">-</td><td align="center">-</td></tr><tr><td align="center">location ~ ^/[a-z]{}</td><td align="center">-</td><td align="center">3优先级相同按先后顺序</td><td align="center">1</td><td align="center">1优先级相同按先后顺序</td></tr><tr><td align="center">location ~ ^/\w{}</td><td align="center">-</td><td align="center">4</td><td align="center">2</td><td align="center">2</td></tr></tbody></table><p>反向代理</p><p>1）proxy_pass的ip后有<code>/</code>，访问地址ip+请求路径（不加loaction后面的匹配字符）</p><p>2）proxy_pass的ip后没有<code>/</code>，访问地址ip+loaction后面的匹配字符+请求路径</p><pre><code class="hljs awk">location /a&#123;proxy_passhttp:<span class="hljs-regexp">//i</span>p;&#125;location <span class="hljs-regexp">/b/</span>&#123;proxy_passhttp:<span class="hljs-regexp">//i</span>p/;&#125;--------------------------------------------------------------------------等价于<span class="hljs-regexp">/a/</span>x---&gt;通过<span class="hljs-regexp">/a访问http:/</span><span class="hljs-regexp">/ip/</span>a/x<span class="hljs-regexp">/b/</span>x ---&gt;通过<span class="hljs-regexp">/b/</span>x<span class="hljs-regexp">/访问http:/</span><span class="hljs-regexp">/ip/</span>x</code></pre><h5 id="alias别名"><a href="#alias别名" class="headerlink" title="alias别名"></a>alias别名</h5><p>alias后的路径不加location的匹配，alias后路径以 <code>/</code> 结尾；</p><p>root后的路径不管location匹配的是什么 都要拼在路径后；</p><pre><code class="hljs gradle"># 如果访问 www.domain.com<span class="hljs-regexp">/i/</span>test.png 最后返回的结果为 <span class="hljs-regexp">/data/</span>w3<span class="hljs-regexp">/i/</span>test.png ,root 配置最后的/要不要都行location <span class="hljs-regexp">/i/</span> &#123;    root <span class="hljs-regexp">/data/</span>w3/;&#125;# 如果访问 www.domain.com<span class="hljs-regexp">/i/</span>test.png 最后返回的结果为 <span class="hljs-regexp">/data/</span>w3<span class="hljs-regexp">/test.png ,root 配置最后的/</span>一定是要的，否则返回结果会变成  <span class="hljs-regexp">/data/</span>w3test.png  而返回的<span class="hljs-number">404</span>location <span class="hljs-regexp">/i/</span> &#123;    alias <span class="hljs-regexp">/data/</span>w3/;&#125;</code></pre><h5 id="server-root-location-root"><a href="#server-root-location-root" class="headerlink" title="server root || location root"></a>server root || location root</h5><p>有<code>location / &#123;&#125;</code>优先指向里面的root，如果没有<code>location \ &#123;&#125;</code>，就会执行server root</p><pre><code class="hljs nginx"><span class="hljs-comment"># location /&#123;&#125;有root，优先指向D:/environment，如果没有则指向C:/environment</span><span class="hljs-section">server</span> &#123;        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;        <span class="hljs-attribute">server_name</span>  localhost;        <span class="hljs-attribute">root</span>  C:/environment;<span class="hljs-attribute">autoindex</span> <span class="hljs-literal">on</span>;<span class="hljs-attribute">location</span> / &#123;            <span class="hljs-attribute">root</span>   D:/environment;            <span class="hljs-attribute">index</span>  index.html index.htm;        &#125;    &#125;</code></pre><h3 id="9-负载均衡"><a href="#9-负载均衡" class="headerlink" title="9.负载均衡"></a>9.负载均衡</h3><p>浏览器访问<code>http://localhost/a/</code>，平均请求到36.137.0.237的81和82端口</p><p>upstream group 配置两个目标服务器，客户端访问<code>http://localhost/a/</code>时，因为访问权重都是1，所以跳转的几率相同。权重越高，分配客户端越多  </p><pre><code class="hljs nginx"><span class="hljs-attribute">worker_processes</span>  <span class="hljs-number">1</span>;<span class="hljs-section">events</span> &#123;    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;&#125;<span class="hljs-section">http</span> &#123;    <span class="hljs-attribute">include</span>       mime.types;    <span class="hljs-attribute">default_type</span>  application/octet-stream;    <span class="hljs-attribute">upstream</span> group&#123;    <span class="hljs-attribute">server</span> http://36.137.0.237:81 weight=<span class="hljs-number">1</span>;    <span class="hljs-attribute">server</span> http://36.137.0.237:82 weight=<span class="hljs-number">1</span>;    &#125;<span class="hljs-section">server</span> &#123;        <span class="hljs-attribute">listen</span>       <span class="hljs-number">9009</span>;        <span class="hljs-attribute">server_name</span>  localhost;        <span class="hljs-attribute">location</span> /a/ &#123;<span class="hljs-attribute">proxy_pass</span>    http://group/;&#125;        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;        <span class="hljs-attribute">location</span> = /50x.html &#123;            <span class="hljs-attribute">root</span>   html;        &#125;            &#125;&#125;</code></pre><p> 负载均衡策略</p><p>1）轮询：随机分配到目标服务器</p><p>2）权重：根据权重大小分配到目标服务器</p><p>3）ip_hash：upstream中加ip_hash，同一ip第一次分配到了哪个服务器，后面访问都会到这个服务器上</p><p>4）fair：根据响应时间分配服务器，时间短的优先分配</p><h3 id="10-动静分离"><a href="#10-动静分离" class="headerlink" title="10.动静分离"></a>10.动静分离</h3><p>动态请求：数据库的操作。</p><p>静态请求：请求资源文件。</p><p>1）动态请求和静态请求分别放在两个服务器。</p><p>2）动态请求和静态请求混合在一个服务器上，用nginx分开。</p><p>location指定不同后缀实现不同的转发，expires设置过期时间。如3d，三天后发送请求对比服务器文件最后更新时间，时间没变化返回304，不会从服务器抓取数据；如果有变化返回200，重新从服务器下载数据进行缓存。</p><p>静态文件请求，不管location后的匹配和root最后有没有<code>/</code>，都把浏览器的访问路径端口号后和location root后的路径拼在一起</p><p>静态文件请求：root</p><p>动态文件请求：proxy_pass</p><pre><code class="hljs pgsql"># http://localhost:<span class="hljs-number">81</span>/Desktop/<span class="hljs-number">1.</span>jpg  C:/Users/pc/Desktop/<span class="hljs-number">1.</span>jpg<span class="hljs-keyword">server</span>&#123;<span class="hljs-keyword">listen</span> <span class="hljs-number">81</span>;server_name  localhost;<span class="hljs-keyword">location</span> /Desktop &#123;root C:/Users/pc;<span class="hljs-keyword">index</span>  <span class="hljs-keyword">index</span>.html  <span class="hljs-keyword">index</span>.htm;&#125;&#125;</code></pre><h3 id="11-高可用"><a href="#11-高可用" class="headerlink" title="11.高可用"></a>11.高可用</h3><p><img src="D:\hexo\blog\img\nginx\高可用.png"></p><p>浏览器发送请求到一台nginx上，一台nginx可能宕机。</p><p>两台nginx服务器做主、备服务器，当主服务器nginx1宕机，就用备份服务器nginx2去请求目标服务器。对外浏览器请求是一个虚拟ip，虚拟ip默认绑定在主服务器上，主服务器宕机服务器上的keepalived会将虚拟ip绑定到备份服务器上，就能继续请求目标服务器。</p><p>1）<strong>主备服务器上需要安装keepalived软件</strong></p><p>2）高可用配置在etc/keepalived.conf，配置主备服务器</p><p>3）/usr/local/src添加检测服务器是否宕机的脚本</p><p>4）启动两台服务器和上面的keepalived（systemctl start keepalived.service）</p><p>5）浏览器中访问虚拟ip会把请求发送到主服务器nginx1，主服务器宕机就会把请求发送到备份服务器nginx2</p><h3 id="12-原理"><a href="#12-原理" class="headerlink" title="12.原理"></a>12.原理</h3><p><img src="D:\hexo\blog\img\nginx\原理1.png"></p><p>查看nginx进程</p><p>ps -ef | grep nginx</p><p>nginx有1个master（管理员）多个worker（工人），master接到任务发给worker，worker争抢任务。worker的数量由服务器cpu数决定，保证每个worker都有一个cpu可用，在nginx.conf的全局块中设置<code>worker_processes     n;</code>    </p><p><img src="D:\hexo\blog\img\nginx\原理2.png"></p><p>1）发送请求占用worker几个连接数：请求静态资源2个（client&lt;—&gt;worke），动态资源4个（client&lt;—&gt;worker&lt;—&gt;tomcat1）。</p><p>2）最大并发数：worker_processes*worker_connection（最大连接数1024）/一个请求的连接数（静态请求2/动态请求4）</p><p>3）1个mastern个worker的好处：</p><ul><li>​    每个worker是独立的，一个worker出现问题，其他worker继续工作不会造成服务中断；</li><li>热部署后老的worker在请求处理完后被kill，新的请求会被没有任务的worker争抢。</li></ul>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js-01</title>
    <link href="/2021/06/17/js-01/"/>
    <url>/2021/06/17/js-01/</url>
    
    <content type="html"><![CDATA[<h1 id="js"><a href="#js" class="headerlink" title="js"></a>js</h1><h3 id="1-注释与执行符"><a href="#1-注释与执行符" class="headerlink" title="1.注释与执行符"></a>1.注释与执行符</h3><p>注释：//<br>| /**/</p><p>执行符：每行代码结尾带分号；</p><h3 id="2-变量声明-赋值"><a href="#2-变量声明-赋值" class="headerlink" title="2.变量声明+赋值"></a>2.变量声明+赋值</h3><pre><code class="hljs js"><span class="hljs-comment">// 声明多个变量</span><span class="hljs-keyword">let</span> a=<span class="hljs-number">1</span>,    b=<span class="hljs-number">2</span>,    c=<span class="hljs-number">3</span>;<span class="hljs-comment">// 声明+赋值多个变量，变量相等</span><span class="hljs-keyword">let</span> a=b=c=<span class="hljs-number">1</span>;<span class="hljs-comment">// 变量修改与类型</span><span class="hljs-keyword">let</span> a=<span class="hljs-number">1</span>;<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span> a);<span class="hljs-comment">//number</span>a=<span class="hljs-string">&#x27;string&#x27;</span>;<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span> a);<span class="hljs-comment">//string</span>a=&#123;&#125;<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span> a);<span class="hljs-comment">//object</span></code></pre><h3 id="3-变量提升"><a href="#3-变量提升" class="headerlink" title="3.变量提升"></a>3.变量提升</h3><p>编译时把声明的变量提升到最外层</p><p><code>var</code>会变量提示，先调用后声明变量不会报错</p><pre><code class="hljs js"><span class="hljs-comment">// undefined 等价于 var a;console.log(a);a=1;</span><span class="hljs-built_in">console</span>.log(a)<span class="hljs-keyword">var</span> a = <span class="hljs-number">1</span>;<span class="hljs-comment">// undefined，if中没执行，但是a被变量提升。等价于先声明var a;后console.log(a)</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-literal">false</span>)&#123;<span class="hljs-keyword">var</span> a=<span class="hljs-number">1</span>&#125;<span class="hljs-built_in">console</span>.log(a)&#125;fn()</code></pre><h3 id="4-暂时性死区（TDC）"><a href="#4-暂时性死区（TDC）" class="headerlink" title="4.暂时性死区（TDC）"></a>4.暂时性死区（TDC）</h3><p><code>let const</code>先定义后使用，否则会TDC。</p><p>函数</p><pre><code class="hljs js"><span class="hljs-comment">// bad</span><span class="hljs-comment">// 函数作用域内使用变量先声明后使用</span><span class="hljs-keyword">let</span> a=<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-built_in">console</span>.log(a);<span class="hljs-comment">// Cannot access &#x27;a&#x27; before initialization</span>    <span class="hljs-keyword">let</span> a=<span class="hljs-number">2</span>;&#125;fn()<span class="hljs-comment">// good</span><span class="hljs-keyword">let</span> a=<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-keyword">let</span> a=<span class="hljs-number">2</span>;<span class="hljs-built_in">console</span>.log(a);<span class="hljs-comment">// 2</span>&#125;fn()</code></pre><p>参数</p><pre><code class="hljs js"><span class="hljs-comment">// bad</span><span class="hljs-comment">// 入参a=b，此时b还没有声明，使用会造成TDC，如果先声明b，再声明a=b，不会报错</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">a=b,b=<span class="hljs-number">1</span></span>)</span>&#123;&#125;fn()<span class="hljs-comment">// good</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">b=<span class="hljs-number">1</span>,a=b</span>)</span>&#123;&#125;fn()</code></pre><h3 id="5-全局污染"><a href="#5-全局污染" class="headerlink" title="5.全局污染"></a>5.全局污染</h3><p>不用<code>var let const</code>声明的变量容易造成全局污染，编译时变量提升，函数作用域内的变量会污染全局;</p><p>使用严格模式’use strict’强制变量声明，不声明会报错；</p><hr><p>总结：</p><h5 id="（1）完全不用var-let-const作用域声明变量"><a href="#（1）完全不用var-let-const作用域声明变量" class="headerlink" title="（1）完全不用var let  const作用域声明变量"></a>（1）完全不用<code>var let  const</code>作用域声明变量</h5><pre><code class="hljs js"><span class="hljs-comment">// 函数内为a=2，函数外a被局部变量a覆盖a=2，全局变量a被污染</span><span class="hljs-comment">// &#x27;use strict&#x27;;(严格模式会报错)</span>a=<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;    a=<span class="hljs-number">2</span>    <span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 2</span>&#125;fn()<span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 2</span>--------------------------------------------------------------------------<span class="hljs-comment">// 函数内打印的a是函数外全局变量a</span>a=<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 1</span>    a=<span class="hljs-number">2</span>&#125;fn()<span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 2</span></code></pre><h5 id="（2）函数外、内只有一个作用域声明变量"><a href="#（2）函数外、内只有一个作用域声明变量" class="headerlink" title="（2）函数外、内只有一个作用域声明变量"></a>（2）函数外、内只有一个作用域声明变量</h5><pre><code class="hljs js"><span class="hljs-comment">// 函数外是全局变量，函数内重新对a赋值，a=2，函数外全局变量被污染a=2</span><span class="hljs-keyword">let</span> a=<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;    a=<span class="hljs-number">2</span>    <span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 2</span>&#125;fn()<span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 2</span>--------------------------------------------------------------------------<span class="hljs-comment">// 函数内使用let const 必须先声明，否则进入TDC</span><span class="hljs-comment">// 报错：Cannot access &#x27;a&#x27; before initialization</span>a=<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-built_in">console</span>.log(a)    <span class="hljs-keyword">let</span> a=<span class="hljs-number">2</span>&#125;fn()<span class="hljs-built_in">console</span>.log(a) --------------------------------------------------------------------------<span class="hljs-comment">// 函数内使用var 打印变量a，a会变量提升将var a;提升到最前面，打印变量a，为undefined，函数外打印的a是全局变量a=1</span>a=<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// undefined</span>    <span class="hljs-keyword">var</span> a=<span class="hljs-number">2</span>&#125;fn()<span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 1</span></code></pre><h5 id="（3）使用作用域声明"><a href="#（3）使用作用域声明" class="headerlink" title="（3）使用作用域声明"></a>（3）使用作用域声明</h5><p>不会污染全局，函数体内使用内部变量，外面使用全局变量</p><pre><code class="hljs js"><span class="hljs-comment">// 函数外打印a=1是全局变量，函数内打印a是局部变量a=2</span><span class="hljs-keyword">let</span> a=<span class="hljs-number">1</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-keyword">let</span> a=<span class="hljs-number">2</span>    <span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 2</span>&#125;fn()<span class="hljs-built_in">console</span>.log(a) <span class="hljs-comment">// 1</span></code></pre><h3 id="6-块作用域和函数作用域"><a href="#6-块作用域和函数作用域" class="headerlink" title="6.块作用域和函数作用域"></a>6.块作用域和函数作用域</h3><p>块作用域：<code>let</code>有块作用域，相当于私有空间，内部变量不影响外部</p><p>​                <code>var</code>没有块作用域，会变量提升</p><p>函数作用域：私有空间，不管用什么作用域<code>var let const</code>内部变量不会影响外部</p><hr><p>（1）在同一层级：声明同一个变量，如果用了<code>let const</code>，就不能再用var声明</p><pre><code class="hljs js"><span class="hljs-comment">// 报错：Identifier &#x27;aa&#x27; has already been declared</span><span class="hljs-keyword">let</span> a=<span class="hljs-number">1</span><span class="hljs-keyword">var</span> a=<span class="hljs-number">2</span>--------------------------------------------------------------------------<span class="hljs-comment">// Identifier &#x27;i&#x27; has already been declared</span><span class="hljs-comment">// let声明i后，又紧接着用var声明i，会报错。var没有块作用域，会被变量提升，相当于连续用let和var声明i。</span><span class="hljs-keyword">let</span> i=<span class="hljs-number">99</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;    <span class="hljs-built_in">console</span>.log(i)&#125;<span class="hljs-built_in">console</span>.log(i)</code></pre><p>（2）在同一层级：声明同一个变量，都使用<code>var</code>，块作用域都是平行关系</p><pre><code class="hljs js"><span class="hljs-comment">// 0 1 2 3</span><span class="hljs-comment">// var 没有块作用域</span><span class="hljs-keyword">var</span> i=<span class="hljs-number">99</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;    <span class="hljs-built_in">console</span>.log(i)&#125;<span class="hljs-built_in">console</span>.log(i)</code></pre><p>（3）在不同层级：</p><p>声明同一个变量，块作用域中使用<code>let</code>，作用域外使用<code>var</code>。let有自己的作用域，不会影响外部</p><pre><code class="hljs js"><span class="hljs-keyword">var</span> a=<span class="hljs-number">1</span>&#123;<span class="hljs-keyword">let</span> a=<span class="hljs-number">2</span><span class="hljs-built_in">console</span>.log(aa) <span class="hljs-comment">// 2</span>&#125;<span class="hljs-built_in">console</span>.log(aa) <span class="hljs-comment">// 1</span>--------------------------------------------------------------------------<span class="hljs-comment">// 0 1 2 99</span><span class="hljs-comment">// let 有自己的块作用域</span><span class="hljs-keyword">var</span> i=<span class="hljs-number">99</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;    <span class="hljs-built_in">console</span>.log(i)&#125;<span class="hljs-built_in">console</span>.log(i)</code></pre><p>（4）在不同层级：</p><p>声明同一个变量，声明同一个变量，都使用<code>let</code>，let有块作用域，块之间独立不会影响外部。</p><pre><code class="hljs js"><span class="hljs-comment">// 0 1 2 99</span><span class="hljs-keyword">let</span> i=<span class="hljs-number">99</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;    <span class="hljs-built_in">console</span>.log(i)&#125;<span class="hljs-built_in">console</span>.log(i)</code></pre>]]></content>
    
    
    <categories>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>scss</title>
    <link href="/2021/05/31/scss/"/>
    <url>/2021/05/31/scss/</url>
    
    <content type="html"><![CDATA[<h1 id="scss"><a href="#scss" class="headerlink" title="scss"></a>scss</h1><h4 id="1-历史"><a href="#1-历史" class="headerlink" title="1.历史"></a>1.历史</h4><h5 id="1）css预编译器出现的原因："><a href="#1）css预编译器出现的原因：" class="headerlink" title="1）css预编译器出现的原因："></a>1）css预编译器出现的原因：</h5><p>css只有字面量，没有变量（现在有）无法复用；</p><p>无法嵌套代码冗长；</p><h5 id="2）scss-sass（sass官方实现是ruby）："><a href="#2）scss-sass（sass官方实现是ruby）：" class="headerlink" title="2）scss/sass（sass官方实现是ruby）："></a>2）scss/sass（sass官方实现是ruby）：</h5><p>scss是css的超集，最接近css写法，sass升级版，兼容css可以在scss文件中import导入css；</p><p>sass（花括号、分号）；</p><p>sass（缩进）；</p><h4 id="2-注释"><a href="#2-注释" class="headerlink" title="2.注释"></a>2.注释</h4><table><thead><tr><th></th><th>开发编译（生成css）</th><th>压缩编译（生成css）</th></tr></thead><tbody><tr><td>/* */</td><td>注释还在</td><td>注释不在</td></tr><tr><td>//</td><td>注释不在</td><td>注释不在</td></tr><tr><td>/*! */（注释中增加版权信息）</td><td>注释还在</td><td>注释还在</td></tr></tbody></table><h4 id="3-变量"><a href="#3-变量" class="headerlink" title="3.变量"></a>3.变量</h4><h5 id="1）定义"><a href="#1）定义" class="headerlink" title="1）定义"></a>1）定义</h5><p>$变量名；命名规则（字母|数字|中划线-）</p><pre><code class="hljs scss"><span class="hljs-variable">$width</span>: <span class="hljs-number">1600px</span>;<span class="hljs-variable">$pen-size</span>: <span class="hljs-number">3em</span>;</code></pre><h5 id="2）使用"><a href="#2）使用" class="headerlink" title="2）使用"></a>2）使用</h5><p>定义好的变量放在要使用的位置</p><pre><code class="hljs scss"><span class="hljs-selector-id">#app</span>&#123;    <span class="hljs-attribute">height</span>:<span class="hljs-variable">$width</span>;    <span class="hljs-attribute">font-size</span>:<span class="hljs-variable">$pen-size</span>;&#125;</code></pre><h5 id="3）作用域"><a href="#3）作用域" class="headerlink" title="3）作用域"></a>3）作用域</h5><p>a.变量支持块级作用域，嵌套外的是全局变量，嵌套内是局部变量；</p><p>b.局部作用域转全局作用域，声明!global;</p><pre><code class="hljs scss"><span class="hljs-variable">$width1</span>:<span class="hljs-number">10em</span>;<span class="hljs-selector-id">#foo</span>&#123;    <span class="hljs-comment">// !global将局部变量转换为全局变量</span>    <span class="hljs-variable">$width</span>:<span class="hljs-number">5em</span> !global;    <span class="hljs-comment">// width:5em;</span>    <span class="hljs-attribute">width</span>:<span class="hljs-variable">$width</span>;    <span class="hljs-comment">// heigth:10em; 使用全局变量width:10em;</span>    <span class="hljs-attribute">height</span>:<span class="hljs-variable">$width</span>;&#125;<span class="hljs-selector-id">#bar</span>&#123;    <span class="hljs-comment">// width:5em; !global将局部变量转换为全局变量</span>    <span class="hljs-attribute">width</span>:<span class="hljs-variable">$width</span>;&#125;</code></pre><h4 id="4-数据类型"><a href="#4-数据类型" class="headerlink" title="4.数据类型"></a>4.数据类型</h4><table><thead><tr><th>数字</th><th><code>1，2.5，10px，5a</code></th><th>1.有单位也是数字；<br />2.不是单位的也会看作数组，能通过编译，∵scss是弱类型，可能会产生其他错误；</th></tr></thead><tbody><tr><td>字符串</td><td><code>“foo”，‘foo’，foo</code></td><td>1.有引号字符串（单双引号）引号中包含空格；<br />2.无引号字符串，引号中不包含空格；</td></tr><tr><td>颜色</td><td><code>red，#fff，rgba(255,0,0,0.5)</code></td><td></td></tr><tr><td>布尔型</td><td>`true</td><td>false`</td></tr><tr><td>空值</td><td><code>null</code></td><td>逻辑判断中用</td></tr><tr><td>数组</td><td><code>1.5em 1em 0 2em, Helvetica, Arial, sans-serif</code></td><td>用空格</td></tr><tr><td>映射</td><td><code>(key1:value1,key2:value2)</code></td><td>对象（maps）</td></tr></tbody></table><p>判断数据类型：type-of($value)</p><h5 id="1）数字（Number）"><a href="#1）数字（Number）" class="headerlink" title="1）数字（Number）"></a>1）数字（Number）</h5><p>带单位（开头数字后跟字母）|不带单位</p><pre><code class="hljs scss"><span class="hljs-variable">$my-age</span>: <span class="hljs-number">19</span>;<span class="hljs-variable">$your-age</span>: <span class="hljs-number">19.5</span>;<span class="hljs-variable">$height</span>: <span class="hljs-number">120px</span>;<span class="hljs-comment">// 注：单位会和数字当做一个整体，进行算数运算</span></code></pre><h5 id="2）字符串-String"><a href="#2）字符串-String" class="headerlink" title="2）字符串(String)"></a>2）字符串(String)</h5><p>带引号|不带引号</p><pre><code class="hljs scss"><span class="hljs-variable">$name</span>: <span class="hljs-string">&#x27;Tom Bob&#x27;</span>;<span class="hljs-variable">$container</span>: <span class="hljs-string">&quot;top bottom&quot;</span>;<span class="hljs-variable">$what</span>: heart;<span class="hljs-comment">// 注：在编译 CSS 文件时不会改变其类型。只有一种情况例外，使用 `#&#123;&#125;` (interpolation) 时，有引号字符串将被编译为无引号字符串，这样便于在 mixin 中引用选择器名</span></code></pre><h5 id="3）颜色-Color"><a href="#3）颜色-Color" class="headerlink" title="3）颜色(Color)"></a>3）颜色(Color)</h5><p>css只有十六进制|RGBA|RGB|HSL|<br>HSLA</p><p>scss有颜色函数</p><pre><code class="hljs scss"><span class="hljs-variable">$color0</span>:green;<span class="hljs-variable">$color1</span>:lighten(<span class="hljs-variable">$color</span>,<span class="hljs-number">15%</span>);<span class="hljs-variable">$color2</span>:(green+red);</code></pre><h5 id="4）布尔-Booleans"><a href="#4）布尔-Booleans" class="headerlink" title="4）布尔(Booleans)"></a>4）布尔(Booleans)</h5><pre><code class="hljs scss"><span class="hljs-variable">$a</span>:true;<span class="hljs-variable">$b</span>:false;<span class="hljs-comment">// 注：自身是false|null返回false，否则返回true</span></code></pre><h5 id="5）空值-Null"><a href="#5）空值-Null" class="headerlink" title="5）空值(Null)"></a>5）空值(Null)</h5><pre><code class="hljs scss"><span class="hljs-variable">$value</span>:null;<span class="hljs-comment">// 注：空值不能参与算数运算</span><span class="hljs-comment">// 空值编译后，编译位置为空</span></code></pre><h5 id="6）数组-List"><a href="#6）数组-List" class="headerlink" title="6）数组(List)"></a>6）数组(List)</h5><p>数组用空格|逗号分隔，索引从1开始，独立的数看作包含一个值的数组</p><pre><code class="hljs scss"><span class="hljs-comment">/*</span><span class="hljs-comment">list=[1,2,3,4]</span><span class="hljs-comment">list2=[[1,2],[3,4]]</span><span class="hljs-comment">*/</span><span class="hljs-variable">$list</span>:<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span>;<span class="hljs-comment">// 二维数组逗号和空格交替使用，或者二维数组中的数组用小括号隔开</span><span class="hljs-variable">$list2</span>:<span class="hljs-number">1</span> <span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-number">4</span>;<span class="hljs-variable">$list2</span>:(<span class="hljs-number">1</span> <span class="hljs-number">2</span>) (<span class="hljs-number">3</span> <span class="hljs-number">4</span>);</code></pre><h5 id="7）映射-Maps"><a href="#7）映射-Maps" class="headerlink" title="7）映射(Maps)"></a>7）映射(Maps)</h5><p>Maps必须被圆括号包围，可以映射任何类型键值对（任何类型，包括内嵌maps，不过不推荐这种内嵌方式）</p><pre><code class="hljs scss"><span class="hljs-comment">/*</span><span class="hljs-comment">map=&#123;</span><span class="hljs-comment">key:1</span><span class="hljs-comment">&#125;</span><span class="hljs-comment">*/</span><span class="hljs-comment">// 对象用小括号包裹</span><span class="hljs-variable">$map</span>:(key:<span class="hljs-number">1</span>);</code></pre><h4 id="5-运算"><a href="#5-运算" class="headerlink" title="5.运算"></a>5.运算</h4><p>所有数据类型进行运算要用空格把元素隔开，否则会被看作str</p><h5 id="1）数字运算符"><a href="#1）数字运算符" class="headerlink" title="1）数字运算符"></a>1）数字运算符</h5><p><code>+</code></p><pre><code class="hljs scss"><span class="hljs-comment">// num+num</span><span class="hljs-comment">// a.带不带单位都把数字拼起来</span><span class="hljs-variable">$add1</span>: <span class="hljs-number">1</span> + <span class="hljs-number">2</span>;<span class="hljs-comment">// 3</span><span class="hljs-variable">$add2</span>: <span class="hljs-number">1</span> + <span class="hljs-number">2px</span>; <span class="hljs-comment">// 3px</span><span class="hljs-variable">$add3</span>: <span class="hljs-number">1px</span> + <span class="hljs-number">2</span>; <span class="hljs-comment">// 3px</span><span class="hljs-variable">$add4</span>: <span class="hljs-number">1px</span> + <span class="hljs-number">2px</span>;<span class="hljs-comment">//3px</span><span class="hljs-comment">// str+str</span><span class="hljs-comment">// b.第一个str带“”，结果带“”</span><span class="hljs-variable">$add5</span>: <span class="hljs-string">&quot;a&quot;</span> + <span class="hljs-string">&quot;b&quot;</span>; <span class="hljs-comment">// &quot;ab&quot;</span><span class="hljs-variable">$add6</span>: <span class="hljs-string">&quot;a&quot;</span> + b;  <span class="hljs-comment">// &quot;ab&quot;</span><span class="hljs-variable">$add7</span>: a + <span class="hljs-string">&quot;b&quot;</span>;  <span class="hljs-comment">// ab</span><span class="hljs-variable">$add8</span>: a + b;  <span class="hljs-comment">// ab</span><span class="hljs-comment">// num和str</span><span class="hljs-comment">// c.第一个带“”，结果带“”</span><span class="hljs-comment">// 最后一个带“”，且第一个是数字，结果带“”。否则不带</span><span class="hljs-variable">$add9</span>: <span class="hljs-number">1</span> + a;<span class="hljs-comment">// 1a</span><span class="hljs-variable">$adda</span>: a + <span class="hljs-number">1</span>;<span class="hljs-comment">// a1</span><span class="hljs-variable">$addb</span>: <span class="hljs-string">&quot;1&quot;</span> + a; <span class="hljs-comment">// &quot;1a&quot;</span><span class="hljs-variable">$addc</span>: <span class="hljs-number">1</span> + <span class="hljs-string">&quot;a&quot;</span>; <span class="hljs-comment">// &quot;1a&quot;</span><span class="hljs-variable">$addd</span>: <span class="hljs-string">&quot;a&quot;</span> + <span class="hljs-number">1</span>; <span class="hljs-comment">// &quot;a1&quot;</span><span class="hljs-variable">$adde</span>: a + <span class="hljs-string">&quot;1&quot;</span>; <span class="hljs-comment">// a1</span><span class="hljs-variable">$addf</span>: <span class="hljs-number">1</span> + <span class="hljs-string">&quot;1&quot;</span>; <span class="hljs-comment">// &quot;11&quot;</span></code></pre><p><code>-</code></p><p>原样拼在一起</p><pre><code class="hljs scss"><span class="hljs-comment">// num+num</span><span class="hljs-comment">// a.带不带单位都把数字拼起来</span><span class="hljs-variable">$add1</span>: <span class="hljs-number">1</span> - <span class="hljs-number">2</span>;<span class="hljs-comment">// -1</span><span class="hljs-variable">$add2</span>: <span class="hljs-number">1</span> - <span class="hljs-number">2px</span>; <span class="hljs-comment">// -1px</span><span class="hljs-variable">$add3</span>: <span class="hljs-number">1px</span> - <span class="hljs-number">2</span>; <span class="hljs-comment">// -1px</span><span class="hljs-variable">$add4</span>: <span class="hljs-number">1px</span> - <span class="hljs-number">2px</span>;<span class="hljs-comment">//-1px</span><span class="hljs-variable">$sub1</span>: a - <span class="hljs-number">1</span>;  <span class="hljs-comment">// a-1</span><span class="hljs-variable">$sub2</span>: <span class="hljs-number">1</span> - a;  <span class="hljs-comment">// 1-a</span><span class="hljs-variable">$sub3</span>: <span class="hljs-string">&quot;a&quot;</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">// &quot;a&quot;-1</span><span class="hljs-variable">$sub4</span>: a - <span class="hljs-string">&quot;1&quot;</span>;<span class="hljs-comment">// a-&quot;1&quot;</span></code></pre><ul><li><p><code>*</code></p><p>a.num*num，不能同时为带单位num</p></li><li><p><code>/</code></p><p>a.不会四舍五入，精确到小数点后5位</p></li><li><p><code>%</code></p></li></ul><h5 id="2）关系运算符"><a href="#2）关系运算符" class="headerlink" title="2）关系运算符"></a>2）关系运算符</h5><p>符号左右是数字|有单位数字</p><p>返回：true|false</p><p><code>&gt;</code>   <code>&lt;</code>   <code>&lt;=</code>   <code>&gt;=</code>  </p><h5 id="3）相等运算符"><a href="#3）相等运算符" class="headerlink" title="3）相等运算符"></a>3）相等运算符</h5><p>用于所有数据类型</p><p>返回：true|false</p><p><code>==</code>   <code>!=</code></p><p>  num之间比较，只比较数字，str比较不看引号要一一对应去比较；</p><pre><code class="hljs scss"><span class="hljs-variable">$a</span>: <span class="hljs-number">1</span> == <span class="hljs-number">1px</span>; <span class="hljs-comment">// true</span><span class="hljs-variable">$b</span>: <span class="hljs-string">&quot;a&quot;</span> == a; <span class="hljs-comment">// true</span></code></pre><h5 id="4）布尔运算符"><a href="#4）布尔运算符" class="headerlink" title="4）布尔运算符"></a>4）布尔运算符</h5><p><code>and</code>   <code>or</code>   <code>not</code></p><pre><code class="hljs scss"><span class="hljs-variable">$a</span>: <span class="hljs-number">1</span>&gt;<span class="hljs-number">0</span> and <span class="hljs-number">0</span>&gt;=<span class="hljs-number">5</span>; <span class="hljs-comment">// fasle</span></code></pre><h5 id="5）颜色运算符"><a href="#5）颜色运算符" class="headerlink" title="5）颜色运算符"></a>5）颜色运算符</h5><p>颜色运算是分段，分别计算r、g、b三种颜色，两个两个隔开；</p><ul><li><p><code>颜色值与颜色值</code></p><pre><code class="hljs scss"><span class="hljs-selector-tag">p</span> &#123;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#010203</span> + <span class="hljs-number">#040506</span>;&#125;<span class="hljs-comment">// 计算 01 + 04 = 05 02 + 05 = 07 03 + 06 = 09，然后编译为</span><span class="hljs-comment">// p &#123;</span>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#050709</span>; &#125;</code></pre></li><li><p><code>颜色值与数字</code></p><pre><code class="hljs scss"><span class="hljs-selector-tag">p</span> &#123;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#010203</span> * <span class="hljs-number">2</span>;&#125;<span class="hljs-comment">// 计算 01 * 2 = 02 02 * 2 = 04 03 * 2 = 06，然后编译为</span><span class="hljs-comment">// p &#123;</span>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#020406</span>; &#125;</code></pre></li><li><p><code>RGB和HSL</code></p><pre><code class="hljs scss"><span class="hljs-comment">// 如果颜色值包含 alpha channel（rgba 或 hsla 两种颜色值），必须拥有相等的 alpha 值才能进行运算，因为算术运算不会作用于 alpha 值。</span><span class="hljs-selector-tag">p</span> &#123;  <span class="hljs-attribute">color</span>: rgba(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.75</span>) + rgba(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.75</span>);&#125;<span class="hljs-comment">// p &#123;</span>  <span class="hljs-attribute">color</span>: rgba(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.75</span>); &#125;</code></pre></li></ul><h5 id="6）运算优先级"><a href="#6）运算优先级" class="headerlink" title="6）运算优先级"></a>6）运算优先级</h5><p>由高到低</p><p><code>()</code></p><p><code>*</code> <code>/</code> <code>%</code></p><p><code>+</code> <code>-</code></p><p><code>&gt;</code> <code>&gt;=</code> <code>&lt;</code> <code>&lt;=</code></p><h4 id="6-嵌套语句"><a href="#6-嵌套语句" class="headerlink" title="6.嵌套语句"></a>6.嵌套语句</h4><p>scss文件一层套一层的定义标签</p><h4 id="7-杂货语法"><a href="#7-杂货语法" class="headerlink" title="7.杂货语法"></a>7.杂货语法</h4><h5 id="1）插值"><a href="#1）插值" class="headerlink" title="1）插值"></a>1）插值</h5><p>定义变量：$变量名：变量值；</p><p><code>#&#123;变量名&#125;</code>用在选择器、属性名、属性值，直接塞进去赋值</p><pre><code class="hljs scss"><span class="hljs-variable">$name</span>: foo;<span class="hljs-variable">$attr</span>: border;<span class="hljs-selector-tag">p</span>.#&#123;<span class="hljs-variable">$name</span>&#125; &#123;  #&#123;<span class="hljs-variable">$attr</span>&#125;-<span class="hljs-attribute">color</span>: <span class="hljs-variable">$name</span>;&#125;<span class="hljs-comment">// 编译后：</span><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.foo</span> &#123;  <span class="hljs-attribute">border-color</span>: foo;&#125;</code></pre><h5 id="2）-amp"><a href="#2）-amp" class="headerlink" title="2）&amp;"></a>2）&amp;</h5><p>父选择器，&amp;父的名字</p><pre><code class="hljs scss"><span class="hljs-selector-tag">a</span> &#123;    <span class="hljs-attribute">color</span>: yellow;    <span class="hljs-comment">// &amp;:hover &lt;=&gt; a:hover</span>    &amp;<span class="hljs-selector-pseudo">:hover</span>&#123;        <span class="hljs-attribute">color</span>: green;    &#125;    &amp;<span class="hljs-selector-pseudo">:active</span>&#123;        <span class="hljs-attribute">color</span>: blank;    &#125;&#125;</code></pre><h5 id="3）-default"><a href="#3）-default" class="headerlink" title="3）!default"></a>3）!default</h5><p>$变量:变量值 !default;</p><p>a.之前没定义变量，<code>$变量:变量值 !default;</code>调用变量时，值为当前定义的变量值；</p><p>b.之前定义了一个变量，再调用变量时值为之前定义的变量；</p><p>c.定义了一个变量为null，编译后值不存在；</p><pre><code class="hljs scss"><span class="hljs-variable">$isNull</span>: null;<span class="hljs-variable">$content</span>: <span class="hljs-string">&quot;First content&quot;</span>;<span class="hljs-variable">$content</span>: <span class="hljs-string">&quot;Second content?&quot;</span> !default;<span class="hljs-variable">$new_content</span>: <span class="hljs-string">&quot;First time reference&quot;</span> !default;<span class="hljs-selector-id">#main</span> &#123;  isNull: <span class="hljs-variable">$isNull</span>;  <span class="hljs-attribute">content</span>: <span class="hljs-variable">$content</span>;  new-<span class="hljs-attribute">content</span>: <span class="hljs-variable">$new_content</span>;&#125;<span class="hljs-comment">// 编译为：</span><span class="hljs-selector-id">#main</span> &#123;  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;First content&quot;</span>;  new-<span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;First time reference&quot;</span>; &#125;</code></pre><h5 id="4）-global"><a href="#4）-global" class="headerlink" title="4）!global"></a>4）!global</h5><p>局部变量提升为全局变量</p><pre><code class="hljs scss"><span class="hljs-variable">$w</span>:<span class="hljs-number">10px</span>;<span class="hljs-selector-tag">body</span>&#123; <span class="hljs-comment">// 局部变量 !global;提升成全局变量</span>  <span class="hljs-variable">$w1</span>: <span class="hljs-number">5px</span> !global;  <span class="hljs-attribute">width</span>: <span class="hljs-variable">$w</span>;&#125;<span class="hljs-selector-tag">p</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-variable">$w1</span>;&#125;<span class="hljs-comment">// 编译为：</span><span class="hljs-selector-tag">body</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;&#125;<span class="hljs-selector-tag">p</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">5px</span>;&#125;</code></pre><h5 id="5）-optional"><a href="#5）-optional" class="headerlink" title="5）!optional"></a>5）!optional</h5><p>没有定义选择器，@extend .select 会报错，使用!optional 可以不生成新选择器，不报错</p><pre><code class="hljs scss"><span class="hljs-selector-tag">a</span>&#123;  <span class="hljs-keyword">@extend</span> .select !optional;&#125;<span class="hljs-comment">// 编译后不报错，不执行这一行</span></code></pre><h4 id="8-Rules"><a href="#8-Rules" class="headerlink" title="8.@-Rules"></a>8.@-Rules</h4><h5 id="1）-import"><a href="#1）-import" class="headerlink" title="1）@import"></a>1）@import</h5><p>可以嵌套@import，不能在混合指令（minix）中嵌套；</p><p>引入scss文件，不希望被编译成css，<code>@import  _file.scss</code>引入带下划线的scss文件；</p><pre><code class="hljs scss"><span class="hljs-comment">// 导入scss，不加后缀会自动找符合名字的scss或sass文件</span><span class="hljs-keyword">@import</span> file.scss;<span class="hljs-keyword">@import</span> file;<span class="hljs-comment">// css 语法，不导入scss文件</span><span class="hljs-keyword">@import</span> file.css;<span class="hljs-keyword">@import</span> url(<span class="hljs-string">&#x27;xxx&#x27;</span>);<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;http://xxx&#x27;</span>;<span class="hljs-keyword">@import</span> file screen;<span class="hljs-comment">// scss导入多个文件</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;file1&#x27;</span>,<span class="hljs-string">&#x27;file2&#x27;</span>;<span class="hljs-comment">// 导入插值语句</span><span class="hljs-variable">$family</span>: unquote(<span class="hljs-string">&quot;Droid+Sans&quot;</span>);<span class="hljs-keyword">@import</span> url(<span class="hljs-string">&quot;http://fonts.googleapis.com/css?family=#&#123;$family&#125;&quot;</span>);<span class="hljs-comment">// 编译为：</span><span class="hljs-keyword">@import</span> url(<span class="hljs-string">&quot;http://fonts.googleapis.com/css?family=Droid+Sans&quot;</span>);</code></pre><h5 id="2）-media"><a href="#2）-media" class="headerlink" title="2）@media"></a>2）@media</h5><p>css规则中嵌套</p><pre><code class="hljs scss"><span class="hljs-selector-class">.sidebar</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (orientation: landscape) &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  &#125;&#125;<span class="hljs-selector-class">.sidebar</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;&#125;<span class="hljs-comment">// 编译为</span><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (orientation: landscape) &#123;  <span class="hljs-selector-class">.sidebar</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  &#125;&#125;<span class="hljs-comment">/*# sourceMappingURL=table-1.css.map */</span></code></pre><p>媒体查询允许互相嵌套，编译添加and</p><pre><code class="hljs scss"><span class="hljs-keyword">@media</span> screen &#123;  <span class="hljs-selector-class">.sidebar</span> &#123;    <span class="hljs-keyword">@media</span> (orientation: landscape) &#123;      <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;    &#125;  &#125;&#125;<span class="hljs-comment">// 编译为：</span><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (orientation: landscape) &#123;  <span class="hljs-selector-class">.sidebar</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>; &#125; &#125;</code></pre><p>插值</p><pre><code class="hljs scss"><span class="hljs-variable">$media</span>: screen;<span class="hljs-variable">$feature</span>: -webkit-min-device-pixel-ratio;<span class="hljs-variable">$value</span>: <span class="hljs-number">1.5</span>;<span class="hljs-keyword">@media</span> #&#123;<span class="hljs-variable">$media</span>&#125; and (<span class="hljs-variable">$feature</span>: <span class="hljs-variable">$value</span>) &#123;  .sidebar &#123;    width: <span class="hljs-number">500px</span>;  &#125;&#125;<span class="hljs-comment">// 编译为：</span><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (-webkit-min-device-pixel-ratio: <span class="hljs-number">1.5</span>) &#123;  <span class="hljs-selector-class">.sidebar</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>; &#125; &#125;</code></pre><h5 id="3）-extend"><a href="#3）-extend" class="headerlink" title="3）@extend"></a>3）@extend</h5><p>extend会合并相同选择器</p><pre><code class="hljs scss"><span class="hljs-comment">// a.基本延伸</span><span class="hljs-selector-class">.a</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-selector-class">.b</span> &#123;  <span class="hljs-keyword">@extend</span> .a;  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">3px</span>;&#125;<span class="hljs-comment">// 编译为</span><span class="hljs-selector-class">.a</span>,<span class="hljs-selector-class">.b</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-selector-class">.b</span>&#123;  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">3px</span>;&#125;</code></pre><pre><code class="hljs scss"><span class="hljs-comment">// b.多重延伸</span><span class="hljs-selector-class">.a</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-selector-class">.b</span> &#123;  <span class="hljs-keyword">@extend</span> .a;  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">3px</span>;&#125;<span class="hljs-selector-class">.c</span>&#123;   <span class="hljs-keyword">@extend</span> .a;&#125;<span class="hljs-comment">// 编译为</span><span class="hljs-selector-class">.a</span>,<span class="hljs-selector-class">.b</span>,<span class="hljs-selector-class">.c</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-selector-class">.b</span>&#123;  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">3px</span>;&#125;</code></pre><pre><code class="hljs scss"><span class="hljs-comment">// c.继续延伸</span><span class="hljs-selector-class">.a</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-selector-class">.b</span> &#123;  <span class="hljs-keyword">@extend</span> .a;  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">3px</span>;&#125;<span class="hljs-selector-class">.c</span>&#123;   <span class="hljs-keyword">@extend</span> .b;&#125;<span class="hljs-comment">// 编译为</span><span class="hljs-selector-class">.a</span>,<span class="hljs-selector-class">.b</span>,<span class="hljs-selector-class">.c</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-selector-class">.b</span>,<span class="hljs-selector-class">.c</span>&#123;  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">3px</span>;&#125;</code></pre><pre><code class="hljs scss"><span class="hljs-comment">// d.%</span><span class="hljs-comment">// path继承img，编译后不会将%img也编译进去</span><span class="hljs-comment">// example1:</span>%<span class="hljs-selector-tag">b</span> &#123;    <span class="hljs-attribute">color</span>: red;&#125;<span class="hljs-selector-class">.a</span>&#123;    <span class="hljs-keyword">@extend</span> %b;&#125;<span class="hljs-comment">// 编译后：</span><span class="hljs-selector-class">.a</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;<span class="hljs-comment">// example2:</span><span class="hljs-selector-id">#app</span> <span class="hljs-selector-class">.a</span>%c &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-selector-class">.b</span> &#123;  <span class="hljs-keyword">@extend</span> %c;&#125;<span class="hljs-comment">// 编译后：</span><span class="hljs-selector-id">#app</span> <span class="hljs-selector-class">.a</span><span class="hljs-selector-class">.b</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-comment">// example3:</span><span class="hljs-selector-id">#app</span> <span class="hljs-selector-class">.a</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-selector-class">.b</span> &#123;  <span class="hljs-keyword">@extend</span> .a;&#125;<span class="hljs-comment">// 编译后：</span><span class="hljs-selector-id">#app</span> <span class="hljs-selector-class">.a</span>,<span class="hljs-selector-id">#app</span> <span class="hljs-selector-class">.b</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;&#125;<span class="hljs-comment">// 注：必须是&quot;.&quot;和&quot;#&quot;选择器</span></code></pre><h5 id="4）-at-root"><a href="#4）-at-root" class="headerlink" title="4）@at-root"></a>4）@at-root</h5><p>让选择器跳出嵌套</p><pre><code class="hljs scss"><span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;  <span class="hljs-keyword">@at-root</span>&#123;    <span class="hljs-selector-tag">p</span>&#123;      <span class="hljs-attribute">color</span>: red;    &#125;  &#125;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-tag">div</span> &#123;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;&#125;<span class="hljs-selector-tag">p</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><h5 id="5）-debug"><a href="#5）-debug" class="headerlink" title="5）@debug"></a>5）@debug</h5><p>调试</p><pre><code class="hljs scss"><span class="hljs-variable">$size</span>: <span class="hljs-number">9px</span>;<span class="hljs-selector-class">.file</span>&#123;  <span class="hljs-keyword">@debug</span> <span class="hljs-variable">$size</span>;&#125;</code></pre><h5 id="6）-error"><a href="#6）-error" class="headerlink" title="6）@error"></a>6）@error</h5><p>错误</p><h5 id="7）-warn"><a href="#7）-warn" class="headerlink" title="7）@warn"></a>7）@warn</h5><p>警告</p><h4 id="9-控制指令"><a href="#9-控制指令" class="headerlink" title="9.控制指令"></a>9.控制指令</h4><h5 id="1）if"><a href="#1）if" class="headerlink" title="1）if()"></a>1）if()</h5><p><code>if(表达式,value1,value2)</code></p><p>表达式用<code>!=,==,&lt;=,&lt;,&gt;,&gt;=</code></p><pre><code class="hljs scss"><span class="hljs-selector-tag">p</span>&#123;    <span class="hljs-attribute">color</span>: if(<span class="hljs-number">1</span>+<span class="hljs-number">1</span>==<span class="hljs-number">2</span>,red,blue);&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-tag">p</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><h5 id="2）-if"><a href="#2）-if" class="headerlink" title="2）@if"></a>2）@if</h5><p>@if 表达式1-@else if 表达式2-@else 表达式3</p><pre><code class="hljs scss"><span class="hljs-selector-tag">p</span>&#123;    <span class="hljs-keyword">@if</span> <span class="hljs-number">1</span>+<span class="hljs-number">1</span>==<span class="hljs-number">2</span> &#123;        <span class="hljs-attribute">color</span>:red;    &#125;<span class="hljs-keyword">@else</span> if <span class="hljs-number">1</span>+<span class="hljs-number">1</span>&gt;<span class="hljs-number">2</span>&#123;        <span class="hljs-attribute">color</span>:blue;    &#125;<span class="hljs-keyword">@else</span>&#123;        <span class="hljs-attribute">color</span>:green;    &#125;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-tag">p</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><h5 id="3）-for"><a href="#3）-for" class="headerlink" title="3）@for"></a>3）@for</h5><p><code>for $var from &lt;start&gt; through &lt;end&gt;&#123;&#125;</code></p><p><code>for $var from &lt;start&gt; to &lt;end&gt;&#123;&#125;</code></p><p>through和end区别是否包括end</p><p>through：[start,end]</p><p>end：[start,end)</p><pre><code class="hljs scss"><span class="hljs-keyword">@for</span> <span class="hljs-variable">$i</span> from <span class="hljs-number">1</span> through <span class="hljs-number">3</span>&#123;    <span class="hljs-selector-class">.item-</span>#&#123;<span class="hljs-variable">$i</span>&#125;&#123;        <span class="hljs-attribute">width</span>:<span class="hljs-number">1px</span> * <span class="hljs-variable">$i</span>    &#125;&#125;// 编译后.item-<span class="hljs-number">1</span> &#123;  width: <span class="hljs-number">1px</span>;&#125;<span class="hljs-selector-class">.item-2</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">2px</span>;&#125;<span class="hljs-selector-class">.item-3</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">3px</span>;&#125;</code></pre><h5 id="4）-while"><a href="#4）-while" class="headerlink" title="4）@while"></a>4）@while</h5><p><code>$var:变量</code></p><p><code>@while 表达式&#123;</code></p><pre><code>   `...`</code></pre><p><code>表达式不执行条件</code></p><p><code>&#125;</code></p><pre><code class="hljs scss"><span class="hljs-variable">$var</span>:<span class="hljs-number">6</span>;<span class="hljs-keyword">@while</span> <span class="hljs-variable">$var</span>&gt;<span class="hljs-number">0</span> &#123;    <span class="hljs-selector-class">.item-</span>#&#123;<span class="hljs-variable">$var</span>&#125;&#123;        <span class="hljs-attribute">width</span>:<span class="hljs-number">1px</span> * <span class="hljs-variable">$var</span>;    &#125;    <span class="hljs-variable">$var</span>:<span class="hljs-variable">$var</span> - <span class="hljs-number">2</span>;&#125; <span class="hljs-comment">// 编译后</span><span class="hljs-selector-class">.item-6</span>&#123;    <span class="hljs-attribute">width</span>:<span class="hljs-number">6px</span>;&#125;<span class="hljs-selector-class">.item-4</span>&#123;    <span class="hljs-attribute">width</span>:<span class="hljs-number">4px</span>;&#125;<span class="hljs-selector-class">.item-2</span>&#123;    <span class="hljs-attribute">width</span>:<span class="hljs-number">2px</span>;&#125;</code></pre><h5 id="5）-each"><a href="#5）-each" class="headerlink" title="5）@each"></a>5）@each</h5><p><code>@each $var in $vars</code></p><p>$var: 任何类型</p><p>$vars:list|map</p><p>list</p><p>一维数组</p><pre><code class="hljs scss"><span class="hljs-keyword">@each</span> <span class="hljs-variable">$i</span> in a,b,c&#123;    <span class="hljs-selector-class">.item-</span>#&#123;<span class="hljs-variable">$i</span>&#125;&#123;        <span class="hljs-attribute">background</span>:url(<span class="hljs-string">&#x27;#&#123;$i&#125;&#x27;</span>);    &#125;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-class">.item-a</span> &#123;  <span class="hljs-attribute">background</span>: url(<span class="hljs-string">&quot;a&quot;</span>);&#125;<span class="hljs-selector-class">.item-b</span> &#123;  <span class="hljs-attribute">background</span>: url(<span class="hljs-string">&quot;b&quot;</span>);&#125;<span class="hljs-selector-class">.item-c</span> &#123;  <span class="hljs-attribute">background</span>: url(<span class="hljs-string">&quot;c&quot;</span>);&#125;</code></pre><p>二维数组</p><pre><code class="hljs scss"><span class="hljs-keyword">@each</span> <span class="hljs-variable">$a</span>,<span class="hljs-variable">$b</span> in (icon1,<span class="hljs-number">1</span>),(icon2,<span class="hljs-number">2</span>)&#123;  <span class="hljs-selector-class">.item-</span>#&#123;<span class="hljs-variable">$b</span>&#125;&#123;      <span class="hljs-attribute">background</span>:url(<span class="hljs-string">&#x27;#&#123;$a&#125;&#x27;</span>);      <span class="hljs-attribute">width</span>:#&#123;<span class="hljs-variable">$b</span>&#125;;  &#125;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-class">.item-1</span> &#123;  <span class="hljs-attribute">background</span>: url(<span class="hljs-string">&quot;icon1&quot;</span>);  <span class="hljs-attribute">width</span>: <span class="hljs-number">1</span>;&#125;<span class="hljs-selector-class">.item-2</span> &#123;  <span class="hljs-attribute">background</span>: url(<span class="hljs-string">&quot;icon2&quot;</span>);  <span class="hljs-attribute">width</span>: <span class="hljs-number">2</span>;&#125;</code></pre><p>map</p><pre><code class="hljs scss"><span class="hljs-keyword">@each</span> <span class="hljs-variable">$k</span>,<span class="hljs-variable">$v</span> in (key1:<span class="hljs-number">2</span>,key2:<span class="hljs-number">2</span>)&#123;    <span class="hljs-selector-class">.item-</span>#&#123;<span class="hljs-variable">$v</span>&#125;&#123;        <span class="hljs-attribute">background</span>:url(<span class="hljs-string">&#x27;#&#123;$k&#125;&#x27;</span>);     <span class="hljs-attribute">width</span>:#&#123;<span class="hljs-variable">$v</span>&#125;;    &#125;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-class">.item-2</span> &#123;  <span class="hljs-attribute">background</span>: url(<span class="hljs-string">&quot;key1&quot;</span>);  <span class="hljs-attribute">width</span>: <span class="hljs-number">2</span>;&#125;<span class="hljs-selector-class">.item-2</span> &#123;  <span class="hljs-attribute">background</span>: url(<span class="hljs-string">&quot;key2&quot;</span>);  <span class="hljs-attribute">width</span>: <span class="hljs-number">2</span>;&#125;</code></pre><h4 id="10-混合指令（mixin）"><a href="#10-混合指令（mixin）" class="headerlink" title="10.混合指令（mixin）"></a>10.混合指令（mixin）</h4><h5 id="1）定义：-mixin-混合名称"><a href="#1）定义：-mixin-混合名称" class="headerlink" title="1）定义：@mixin 混合名称"></a>1）定义：<code>@mixin 混合名称</code></h5><h5 id="2）引用：-include-混合名称"><a href="#2）引用：-include-混合名称" class="headerlink" title="2）引用：@include 混合名称"></a>2）引用：<code>@include 混合名称</code></h5><pre><code class="hljs scss"><span class="hljs-keyword">@mixin</span> large-text&#123;  <span class="hljs-attribute">font</span>: &#123;    family: Arial;    size: <span class="hljs-number">20px</span>;    weight: bold;  &#125;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff0000</span>;&#125;<span class="hljs-selector-tag">p</span>&#123;  <span class="hljs-keyword">@include</span> large-text;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-tag">p</span> &#123;  <span class="hljs-attribute">font-family</span>: Arial;  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;  <span class="hljs-attribute">font-weight</span>: bold;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff0000</span>;&#125;</code></pre><h5 id="3）参数"><a href="#3）参数" class="headerlink" title="3）参数"></a>3）参数</h5><p><code>@mixin(参数)</code></p><p>位置传参</p><pre><code class="hljs scss"><span class="hljs-keyword">@mixin</span> mp(<span class="hljs-variable">$width</span>)&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-variable">$width</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-keyword">@include</span> mp(<span class="hljs-number">10px</span>);&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-tag">body</span> &#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;&#125;</code></pre><p>默认参数</p><pre><code class="hljs scss"><span class="hljs-keyword">@mixin</span> mp(<span class="hljs-variable">$width</span>:<span class="hljs-number">20px</span>)&#123;  <span class="hljs-attribute">width</span>:<span class="hljs-variable">$width</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-comment">// @include mp(30px);</span>  <span class="hljs-keyword">@include</span> mp(<span class="hljs-variable">$width</span>:<span class="hljs-number">30px</span>);&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-tag">body</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;&#125;</code></pre><p>不确定个数的参数</p><p>不确定调用时传入了多少参数，在定义的时候可以用<code>...</code>表示多个参数。所有参数都放在引用的位置。</p><p><code>@mixin 混合名称($params...)</code></p><pre><code class="hljs scss"><span class="hljs-keyword">@mixin</span> mp(<span class="hljs-variable">$color</span>...)&#123;  <span class="hljs-attribute">color</span>:<span class="hljs-variable">$color</span>;  <span class="hljs-attribute">border-color</span>:<span class="hljs-variable">$color</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-keyword">@include</span> mp(red,blue,green);&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-tag">body</span> &#123;  <span class="hljs-attribute">color</span>: red, blue, green;  <span class="hljs-attribute">border-color</span>: red, blue, green;&#125;</code></pre><h5 id="4）混合样式中导入内容"><a href="#4）混合样式中导入内容" class="headerlink" title="4）混合样式中导入内容"></a>4）混合样式中导入内容</h5><p>定义和引用的混合指令名相同，把@include的混合指令名在@content的位置展开。</p><pre><code class="hljs scss"><span class="hljs-keyword">@mixin</span> mp&#123;  <span class="hljs-selector-tag">body</span>&#123;    <span class="hljs-keyword">@content</span>;  &#125;&#125;<span class="hljs-keyword">@include</span> mp&#123;  <span class="hljs-attribute">color</span>: red;  <span class="hljs-selector-class">.a</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  &#125;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-tag">body</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;<span class="hljs-selector-tag">body</span> <span class="hljs-selector-class">.a</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;&#125;</code></pre><h5 id="11-函数指令"><a href="#11-函数指令" class="headerlink" title="11.函数指令"></a>11.函数指令</h5><h6 id="a-字符串函数"><a href="#a-字符串函数" class="headerlink" title="a. 字符串函数"></a>a. 字符串函数</h6><blockquote><p>索引第一个为1，最后一个为-1；切片两边均为闭区间</p></blockquote><table><thead><tr><th align="left">函数名和参数类型</th><th align="center">函数作用</th></tr></thead><tbody><tr><td align="left">quote($string)</td><td align="center">添加引号</td></tr><tr><td align="left">unquote($string)</td><td align="center">除去引号</td></tr><tr><td align="left">to-lower-case($string)</td><td align="center">变为小写</td></tr><tr><td align="left">to-upper-case($string)</td><td align="center">变为大写</td></tr><tr><td align="left">str-length($string)</td><td align="center">返回$string的长度(汉字算一个)</td></tr><tr><td align="left">str-index($string，$substring)</td><td align="center">返回$substring在$string的位置</td></tr><tr><td align="left">str-insert($string, $insert, $index)</td><td align="center">在$string的$index处插入$insert</td></tr><tr><td align="left">str-slice($string, $start-at, $end-at）</td><td align="center">截取$string的$start-at和$end-at之间的字符串</td></tr></tbody></table><h6 id="b-数字函数"><a href="#b-数字函数" class="headerlink" title="b. 数字函数"></a>b. 数字函数</h6><table><thead><tr><th>函数名和参数类型</th><th align="center">函数作用</th></tr></thead><tbody><tr><td>percentage($number)</td><td align="center">转换为百分比形式</td></tr><tr><td>round($number)</td><td align="center">四舍五入为整数</td></tr><tr><td>ceil($number)</td><td align="center">数值向上取整</td></tr><tr><td>floor($number)</td><td align="center">数值向下取整</td></tr><tr><td>abs($number)</td><td align="center">获取绝对值</td></tr><tr><td>min($number…)</td><td align="center">获取最小值</td></tr><tr><td>max($number…)</td><td align="center">获取最大值</td></tr><tr><td>random($number?:number)</td><td align="center">不传入值：获得0-1的随机数；传入正整数n：获得0-n的随机整数（左开右闭）</td></tr></tbody></table><h6 id="c-数组函数"><a href="#c-数组函数" class="headerlink" title="c. 数组函数"></a>c. 数组函数</h6><table><thead><tr><th>函数名和参数类型</th><th align="center">函数作用</th></tr></thead><tbody><tr><td>length($list)</td><td align="center">获取数组长度</td></tr><tr><td>nth($list, n)</td><td align="center">获取指定下标的元素</td></tr><tr><td>set-nth($list, $n, $value)</td><td align="center">向$list的$n处插入$value</td></tr><tr><td>join($list1, $list2, $separator)</td><td align="center">拼接$list1和list2；$separator为新list的分隔符，默认为auto，可选择comma、space</td></tr><tr><td>append($list, $val, $separator)</td><td align="center">向$list的末尾添加$val；$separator为新list的分隔符，默认为auto，可选择comma、space</td></tr><tr><td>index($list, $value)</td><td align="center">返回$value值在$list中的索引值</td></tr><tr><td>zip($lists…)</td><td align="center">将几个列表结合成一个多维的列表；要求每个的列表个数值必须是相同的</td></tr></tbody></table><h6 id="d-映射函数"><a href="#d-映射函数" class="headerlink" title="d. 映射函数"></a>d. 映射函数</h6><table><thead><tr><th>函数名和参数类型</th><th align="center">函数作用</th></tr></thead><tbody><tr><td>map-get($map, $key)</td><td align="center">获取$map中$key对应的$value</td></tr><tr><td>map-merge($map1, $map2)</td><td align="center">合并$map1和$map2，返回一个新$map</td></tr><tr><td>map-remove($map, $key)</td><td align="center">从$map中删除$key，返回一个新$map</td></tr><tr><td>map-keys($map)</td><td align="center">返回$map所有的$key</td></tr><tr><td>map-values($map)</td><td align="center">返回$map所有的$value</td></tr><tr><td>map-has-key($map, $key)</td><td align="center">判断$map中是否存在$key，返回对应的布尔值</td></tr><tr><td>keywords($args)</td><td align="center">返回一个函数的参数，并可以动态修改其值</td></tr></tbody></table><h6 id="e-颜色函数"><a href="#e-颜色函数" class="headerlink" title="e. 颜色函数"></a>e. 颜色函数</h6><ul><li><p><strong>RGB函数</strong></p><table><thead><tr><th>函数名和参数类型</th><th align="center">函数作用</th></tr></thead><tbody><tr><td>rgb($red, $green, $blue)</td><td align="center">返回一个16进制颜色值</td></tr><tr><td>rgba($red,$green,$blue,$alpha)</td><td align="center">返回一个rgba；$red,$green和$blue可被当作一个整体以颜色单词、hsl、rgb或16进制形式传入</td></tr><tr><td>red($color)</td><td align="center">从$color中获取其中红色值</td></tr><tr><td>green($color)</td><td align="center">从$color中获取其中绿色值</td></tr><tr><td>blue($color)</td><td align="center">从$color中获取其中蓝色值</td></tr><tr><td>mix($color1,$color2,$weight?)</td><td align="center">按照$weight比例，将$color1和$color2混合为一个新颜色</td></tr></tbody></table></li><li><p><strong>HSL函数</strong></p><table><thead><tr><th>函数名和参数类型</th><th>函数作用</th></tr></thead><tbody><tr><td>hsl($hue,$saturation,$lightness)</td><td>通过色相（hue）、饱和度(saturation)和亮度（lightness）的值创建一个颜色</td></tr><tr><td>hsla($hue,$saturation,$lightness,$alpha)</td><td>通过色相（hue）、饱和度(saturation)、亮度（lightness）和透明（alpha）的值创建一个颜色</td></tr><tr><td>saturation($color)</td><td>从一个颜色中获取饱和度（saturation）值</td></tr><tr><td>lightness($color)</td><td>从一个颜色中获取亮度（lightness）值</td></tr><tr><td>adjust-hue($color,$degrees)</td><td>通过改变一个颜色的色相值，创建一个新的颜色</td></tr><tr><td>lighten($color,$amount)</td><td>通过改变颜色的亮度值，让颜色变亮，创建一个新的颜色</td></tr><tr><td>darken($color,$amount)</td><td>通过改变颜色的亮度值，让颜色变暗，创建一个新的颜色</td></tr><tr><td>hue($color)</td><td>从一个颜色中获取亮度色相（hue）值</td></tr></tbody></table></li><li><p><strong>Opacity函数</strong></p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>alpha($color)/opacity($color)</td><td>获取颜色透明度值</td></tr><tr><td>rgba($color,$alpha)</td><td>改变颜色的透明度</td></tr><tr><td>opacify($color, $amount) / fade-in($color, $amount)</td><td>使颜色更不透明</td></tr><tr><td>transparentize($color, $amount) / fade-out($color, $amount)</td><td>使颜色更加透明</td></tr></tbody></table></li></ul><h6 id="f-Introspection函数"><a href="#f-Introspection函数" class="headerlink" title="f. Introspection函数"></a>f. Introspection函数</h6><table><thead><tr><th>函数名和参数类型</th><th align="center">函数作用</th></tr></thead><tbody><tr><td>type-of($value)</td><td align="center">返回$value的类型</td></tr><tr><td>unit($number)</td><td align="center">返回$number的单位</td></tr><tr><td>unitless($number)</td><td align="center">判断$number是否带单位，返回对应的布尔值</td></tr><tr><td>comparable($number1, $number2)</td><td align="center">判断$number1和$number2是否可以做加、减和合并，返回对应的布尔值</td></tr></tbody></table><h5 id="12-extend-mixin-function"><a href="#12-extend-mixin-function" class="headerlink" title="12.@extend|@mixin|@function"></a>12.@extend|@mixin|@function</h5><h6 id="mixin-extend"><a href="#mixin-extend" class="headerlink" title="@mixin|@extend"></a>@mixin|@extend</h6><p>@mixin和@extend如何选择：<a href="https://www.sass.hk/skill/sass141.html">https://www.sass.hk/skill/sass141.html</a></p><p>@mixin</p><pre><code class="hljs scss"><span class="hljs-keyword">@mixin</span> foo &#123;  <span class="hljs-attribute">color</span>: red;  <span class="hljs-attribute">font-weight</span>: bold;  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">2</span>;&#125;<span class="hljs-keyword">@for</span> <span class="hljs-variable">$i</span> from <span class="hljs-number">1</span> through <span class="hljs-number">3</span> &#123;  .#&#123;unique-id()&#125;-#&#123;<span class="hljs-variable">$i</span>&#125; &#123;    <span class="hljs-keyword">@include</span> foo;    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ibf#&#123;&amp;&#125;jaslbw&quot;</span>;  &#125;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-class">.u498449cd-1</span> &#123;  <span class="hljs-attribute">color</span>: red;  <span class="hljs-attribute">font-weight</span>: bold;  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">2</span>;  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ibf.u498449cd-1jaslbw&quot;</span>;&#125;<span class="hljs-selector-class">.u3a139284-2</span> &#123;  <span class="hljs-attribute">color</span>: red;  <span class="hljs-attribute">font-weight</span>: bold;  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">2</span>;  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ibf.u3a139284-2jaslbw&quot;</span>;&#125;<span class="hljs-selector-class">.ube41013e-3</span> &#123;  <span class="hljs-attribute">color</span>: red;  <span class="hljs-attribute">font-weight</span>: bold;  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">2</span>;  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ibf.ube41013e-3jaslbw&quot;</span>;&#125;</code></pre><p>@extend</p><pre><code class="hljs scss">%foo &#123;  <span class="hljs-attribute">color</span>: red;  <span class="hljs-attribute">font-weight</span>: bold;  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">2</span>;&#125;<span class="hljs-keyword">@for</span> <span class="hljs-variable">$i</span> from <span class="hljs-number">1</span> through <span class="hljs-number">3</span> &#123;  .#&#123;unique-id()&#125;-#&#123;<span class="hljs-variable">$i</span>&#125; &#123;    <span class="hljs-keyword">@extend</span> %foo;    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ibf#&#123;&amp;&#125;jaslbw&quot;</span>;  &#125;&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-class">.ue6069666-1</span>, <span class="hljs-selector-class">.ua5b4178c-2</span>, <span class="hljs-selector-class">.u24e8893c-3</span> &#123;  <span class="hljs-attribute">color</span>: red;  <span class="hljs-attribute">font-weight</span>: bold;  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">2</span>;&#125;<span class="hljs-selector-class">.ue6069666-1</span> &#123;  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ibf.ue6069666-1jaslbw&quot;</span>;&#125;<span class="hljs-selector-class">.ua5b4178c-2</span> &#123;  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ibf.ua5b4178c-2jaslbw&quot;</span>;&#125;<span class="hljs-selector-class">.u24e8893c-3</span> &#123;  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ibf.u24e8893c-3jaslbw&quot;</span>;&#125;</code></pre><p>@mixin：</p><p>1）可以传参；</p><p>2）编译完成的代码重复片段高，gzip压缩后可以很好优化重复代码，编译后不会肿胀，压缩后文件小；</p><p>@extend：</p><p>1）编译后创造DRY，gzip压缩后会破坏DRY</p><p>尽量使用@mixin！！</p><h6 id="mixin-function"><a href="#mixin-function" class="headerlink" title="@mixin|%|@function"></a>@mixin|%|@function</h6><p>@mixin：@mixin-@include；</p><p>%：%-@extend</p><p>@function：@return一个结果，用小括号执行</p><pre><code class="hljs scss"><span class="hljs-keyword">@function</span> px(<span class="hljs-variable">$value</span>) &#123;  <span class="hljs-keyword">@return</span> <span class="hljs-variable">$value</span> * <span class="hljs-number">2</span> + px&#125;.smallBox &#123;  <span class="hljs-attribute">width</span>: px(<span class="hljs-number">50</span>);  <span class="hljs-attribute">height</span>: px(<span class="hljs-number">50</span>);&#125;<span class="hljs-selector-class">.bigBox</span> &#123;  <span class="hljs-attribute">width</span>: px(<span class="hljs-number">150</span>);  <span class="hljs-attribute">height</span>: px(<span class="hljs-number">150</span>);&#125;<span class="hljs-comment">// 编译后</span><span class="hljs-selector-class">.smallBox</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;&#125;<span class="hljs-selector-class">.bigBox</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;&#125;</code></pre><p>323</p>]]></content>
    
    
    <categories>
      
      <category>scss</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scss</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js黑洞</title>
    <link href="/2021/04/13/js/index/"/>
    <url>/2021/04/13/js/index/</url>
    
    <content type="html"><![CDATA[<h2 id="js黑洞"><a href="#js黑洞" class="headerlink" title="js黑洞"></a>js黑洞</h2>]]></content>
    
    
    <categories>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>media</title>
    <link href="/2021/01/11/media/"/>
    <url>/2021/01/11/media/</url>
    
    <content type="html"><![CDATA[<h1 id="media"><a href="#media" class="headerlink" title="media"></a>media</h1><h4 id="1-媒体设备类型"><a href="#1-媒体设备类型" class="headerlink" title="1.媒体设备类型"></a>1.媒体设备类型</h4><p>media=”screen” // 屏幕适用</p><p>media=”print”   //  打印适用</p><p>media=”screen,print”  //  屏幕&amp;打印适用</p><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- screen设备 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;screen&quot;</span>&gt;</span>    h1&#123;        color: red;    &#125;<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-comment">&lt;!-- print设备 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;print&quot;</span>&gt;</span>    h2&#123;        color: green;    &#125;<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>media screen<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>media print<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre><h4 id="2-link标签中使用media"><a href="#2-link标签中使用media" class="headerlink" title="2.link标签中使用media"></a>2.link标签中使用media</h4><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- screen适用样式 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./screen.less&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/less&quot;</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;screen&quot;</span>/&gt;</span><span class="hljs-comment">&lt;!-- print适用样式 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./print.less&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/less&quot;</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;print&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/less.js/3.12.2/less.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="3-import引入样式"><a href="#3-import引入样式" class="headerlink" title="3.@import引入样式"></a>3.@import引入样式</h4><p>a.标签中引入link标签作为样式文件的入口；</p><p>b.样式文件中@import不同设备适用的样式文件；</p><p>c.引入后的文件后面分别加上适用的设备；all|screen|print</p><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./base.less&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/less&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/less.js/3.12.2/less.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>media<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;./common.less&#x27;</span> all;<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;./screen.less&#x27;</span> screen;<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;./print.less&#x27;</span> print;</code></pre><h4 id="4-import局部定义响应式布局"><a href="#4-import局部定义响应式布局" class="headerlink" title="4.@import局部定义响应式布局"></a>4.@import局部定义响应式布局</h4><p>屏幕&lt;768px ul隐藏</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span>Icon<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>home<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>shop<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>user<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;./navbar.less&#x27;</span> screen;<span class="hljs-selector-class">.navbar</span>&#123;    <span class="hljs-attribute">display</span>: flex;    <span class="hljs-attribute">align-items</span>: center;    <span class="hljs-selector-tag">a</span>&#123;        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;    &#125;    <span class="hljs-selector-tag">ul</span>&#123;        <span class="hljs-attribute">list-style</span>: none;        <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;        <span class="hljs-attribute">display</span>: flex;        <span class="hljs-attribute">justify-content</span>: space-evenly;    &#125;&#125;<span class="hljs-keyword">@media</span> screen and (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">768px</span>)&#123;    <span class="hljs-selector-class">.navbar</span>&#123;        <span class="hljs-selector-tag">ul</span>&#123;            <span class="hljs-attribute">display</span>: none;        &#125;    &#125;&#125;</code></pre><h4 id="5-and-not-only"><a href="#5-and-not-only" class="headerlink" title="5.and|,|not|only"></a>5.and|,|not|only</h4><table><thead><tr><th>and（与）</th><th>screen and ()</th><th>orientation:landscade(横屏)</th></tr></thead><tbody><tr><td>or（或）</td><td>screen and(),screen and()</td><td></td></tr><tr><td>not（非）</td><td>not screen</td><td></td></tr><tr><td>only（支持媒体查询的语法，就执行后面的语句）</td><td>only screen</td><td>排除掉低端浏览器</td></tr></tbody></table><p>两个尺寸范围重叠交集属于后写的语句</p><p>screen and (min-width:768px)  // width&gt;768</p><p>screen and (max-width:768px)  // width&lt;=768</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;and&quot;</span>&gt;</span>and<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;or&quot;</span>&gt;</span>or<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;not&quot;</span>&gt;</span>not<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-comment">// 769&lt;width&lt;1024</span><span class="hljs-keyword">@media</span> screen and (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">768px</span>) and (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">1024px</span>)&#123;    <span class="hljs-selector-class">.and</span>&#123;        <span class="hljs-attribute">color</span>: red;    &#125;&#125;<span class="hljs-comment">// 横屏|宽度&gt;768px</span><span class="hljs-keyword">@media</span> screen and (<span class="hljs-attribute">orientation</span>:landscade),screen and (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">768px</span>)&#123;    <span class="hljs-selector-class">.or</span>&#123;        <span class="hljs-attribute">color</span>:green;    &#125;&#125;<span class="hljs-comment">// width!&gt;768</span><span class="hljs-keyword">@media</span> not screen and (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">768px</span>)&#123;    <span class="hljs-selector-class">.not</span>&#123;        <span class="hljs-attribute">color</span>: blue;    &#125;&#125;</code></pre><h4 id="6-文件结构"><a href="#6-文件结构" class="headerlink" title="6.文件结构"></a>6.文件结构</h4><p>文件中引入不同设备适用的less文件</p><p>a.@import url(路径可不带双引号) only screen ***;</p><p>b.引用的路径写入适用样式</p><p>width&gt;800 //blue</p><p>width&gt;1000 //red</p><p>c.引入的媒体查询样式按尺寸顺序从上到下执行</p><pre><code class="hljs less"><span class="hljs-keyword">@import</span> url(<span class="hljs-string">small.less</span>) only screen and (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">800px</span>);<span class="hljs-keyword">@import</span> url(<span class="hljs-string">middle.less</span>) only screen and (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">1000px</span>);</code></pre><pre><code class="hljs less"><span class="hljs-comment">// small.less</span><span class="hljs-selector-tag">body</span>&#123;    <span class="hljs-attribute">background</span>:blue;&#125;<span class="hljs-comment">//middle.less</span><span class="hljs-selector-tag">body</span>&#123;    <span class="hljs-attribute">background</span>:red;&#125;</code></pre><hr><p>或:</p><pre><code class="hljs less"><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;small.less&#x27;</span>;<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;middle.less&#x27;</span>;</code></pre><pre><code class="hljs less"><span class="hljs-comment">// small.less</span><span class="hljs-keyword">@media</span> only screen and (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">800px</span>)&#123;    <span class="hljs-selector-tag">body</span>&#123;        <span class="hljs-attribute">background</span>: blue;    &#125;&#125;<span class="hljs-comment">// middle.less</span><span class="hljs-keyword">@media</span> only screen and (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">1000px</span>)&#123;    <span class="hljs-selector-tag">body</span>&#123;        <span class="hljs-attribute">background</span>: red;    &#125;&#125;</code></pre><h4 id="7-navbar例子"><a href="#7-navbar例子" class="headerlink" title="7.navbar例子"></a>7.navbar例子</h4><p>width&gt;1200和width&lt;1200的响应式布局</p><p>a.link引入main.less作为less入口文件，iconfont作为图标文件</p><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./main.less&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/less&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//at.alicdn.com/t/font_586267_8w74kdqsnsi.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/less.js/3.12.2/less.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar&quot;</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;logo&quot;</span>&gt;</span>ICON<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;list-icon&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;list-icon&quot;</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-xialaliebiaokuang&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;list-icon&quot;</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;collapse&quot;</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>home<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>shop<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>buy<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>user<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form&quot;</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span>login<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;register&quot;</span>&gt;</span>register<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>main.less</p><pre><code class="hljs less"><span class="hljs-comment">// 公共样式</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;base.less&#x27;</span>;<span class="hljs-comment">// navbar样式</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;navbar.less&#x27;</span>;<span class="hljs-comment">// width&gt;800显示list-icon</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;large.less&#x27;</span> only screen and(<span class="hljs-attribute">min-width</span>:<span class="hljs-number">800px</span>);<span class="hljs-comment">// width&lt;800隐藏collsapse和form</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;small.less&#x27;</span> only screen and(<span class="hljs-attribute">max-width</span>:<span class="hljs-number">800px</span>);</code></pre><p>base.less</p><pre><code class="hljs less"><span class="hljs-selector-pseudo">:root</span>&#123;    <span class="hljs-comment">// 规定根元素的字体大小，后面适用的xrem都是相对与15px</span>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;    <span class="hljs-comment">// 最小宽度850px</span>    <span class="hljs-attribute">min-width</span>: <span class="hljs-number">850px</span>;&#125;*&#123;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span>;    <span class="hljs-attribute">padding</span>:<span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">a</span>&#123;    <span class="hljs-attribute">text-decoration</span>:none;&#125;<span class="hljs-selector-tag">li</span>&#123;    <span class="hljs-attribute">list-style</span>:none;&#125;</code></pre><p>navbar.less</p><pre><code class="hljs less"><span class="hljs-selector-tag">header</span>&#123;    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#16a085</span>;    <span class="hljs-attribute">box-shadow</span>:<span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#ddd</span>;    <span class="hljs-selector-class">.navbar</span>&#123;        <span class="hljs-attribute">padding</span>: .<span class="hljs-number">5rem</span>;        <span class="hljs-attribute">display</span>: flex;        <span class="hljs-attribute">align-items</span>: center;        <span class="hljs-selector-class">.logo</span>&#123;            <span class="hljs-attribute">color</span>: <span class="hljs-number">#16a084</span>;            <span class="hljs-attribute">width</span>: <span class="hljs-number">80px</span>;            <span class="hljs-attribute">margin-right</span>: auto;        &#125;        <span class="hljs-selector-class">.collapse</span>&#123;            <span class="hljs-comment">// 只扩张，默认flex:1 1 auto</span>            <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span> <span class="hljs-number">1</span> auto;            <span class="hljs-attribute">display</span>: flex;            <span class="hljs-attribute">align-items</span>: center;            &gt;<span class="hljs-selector-tag">ul</span>&#123;                <span class="hljs-attribute">display</span>: flex;                <span class="hljs-attribute">margin-right</span>: auto;                &gt;<span class="hljs-selector-tag">li</span>&#123;                    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">10px</span>;                &#125;            &#125;            <span class="hljs-selector-class">.form</span>&#123;                <span class="hljs-attribute">display</span>: flex;                &gt;<span class="hljs-selector-tag">div</span>&#123;                    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#16a084</span>;                    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;                    <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;                    <span class="hljs-attribute">padding</span>: .<span class="hljs-number">3rem</span>;                    <span class="hljs-comment">// div-&gt;register  === &amp;.register</span>                    <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-class">.register</span>&#123;                        <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;                        <span class="hljs-attribute">background</span>: <span class="hljs-number">#16a084</span>;                    &#125;                &#125;            &#125;        &#125;    &#125;&#125;</code></pre><p>b.screen&gt;1200 container固定宽度1200px；screen&lt;1200 container宽度800px。文字居中，margin:0 auto;撑开空余位置</p><p>large.less</p><pre><code class="hljs less"><span class="hljs-selector-tag">header</span> &#123;    <span class="hljs-selector-class">.container</span> &#123;      <span class="hljs-comment">// 适用large时最外层container宽度</span>      <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;      <span class="hljs-attribute">text-align</span>: center;      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;      <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;      <span class="hljs-selector-class">.navbar</span> &#123;        <span class="hljs-comment">// 隐藏list-icon和list-icon后面紧跟着的input元素</span>        <span class="hljs-selector-class">.list-icon</span>,<span class="hljs-selector-class">.list-icon</span>+<span class="hljs-selector-tag">input</span>&#123;          <span class="hljs-attribute">display</span>: none;        &#125;      &#125;    &#125;  &#125;</code></pre><p>small.less</p><pre><code class="hljs less"><span class="hljs-selector-tag">header</span> &#123;  <span class="hljs-selector-class">.container</span> &#123;    <span class="hljs-comment">// 适用small时最外层container宽度</span>    <span class="hljs-attribute">width</span>: <span class="hljs-number">800px</span>;    <span class="hljs-attribute">text-align</span>: center;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;    <span class="hljs-attribute">padding</span>: .<span class="hljs-number">5rem</span>;    <span class="hljs-selector-class">.navbar</span> &#123;      <span class="hljs-selector-class">.list-icon</span>&#123;        <span class="hljs-attribute">cursor</span>:pointer;      &#125;      <span class="hljs-comment">// .list-icon后面的check按钮默认隐藏</span>      <span class="hljs-selector-class">.list-icon</span>+<span class="hljs-selector-tag">input</span>&#123;        <span class="hljs-attribute">display</span>: none;      &#125;      <span class="hljs-comment">// check按钮选中，collapse显示</span>      <span class="hljs-selector-class">.list-icon</span>+<span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:checked</span>&#123;        <span class="hljs-selector-tag">&amp;</span>+<span class="hljs-selector-class">.collapse</span>&#123;          <span class="hljs-attribute">display</span>: block;        &#125;      &#125;      <span class="hljs-comment">// flex-flow: flex-direction flex-wrap</span>      <span class="hljs-comment">// navbar是flex布局，布局横排，超出自动换行</span>      <span class="hljs-comment">// collapse的width：100%，超出会换行</span>      <span class="hljs-attribute">flex-flow</span>: row wrap;      <span class="hljs-selector-class">.collapse</span>&#123;        <span class="hljs-comment">// collapse默认隐藏</span>        <span class="hljs-attribute">display</span>: none;        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;        <span class="hljs-selector-tag">ul</span>&#123;          <span class="hljs-comment">// collapse纵向排列，navbar不能设置固定高度，改成padding撑开</span>          <span class="hljs-attribute">flex-direction</span>: column;          <span class="hljs-attribute">align-items</span>: flex-start;          <span class="hljs-selector-tag">li</span>&#123;            <span class="hljs-attribute">padding</span>: .<span class="hljs-number">3rem</span> .<span class="hljs-number">6rem</span>;          &#125;        &#125;        <span class="hljs-selector-class">.form</span>&#123;          <span class="hljs-attribute">padding</span>: .<span class="hljs-number">3rem</span> <span class="hljs-number">1rem</span>;        &#125;      &#125;    &#125;  &#125;&#125;</code></pre><h4 id="8-栅格布局"><a href="#8-栅格布局" class="headerlink" title="8.栅格布局"></a>8.栅格布局</h4><p>width&gt;1200和width&lt;1200的响应式栅格布局</p><p>width&gt;1200 lager布局 1row=3column=col-lg-4</p><p>width&lt;1200 small布局 1row=1column=col-lg-12</p><p>width&gt;1200 lager布局 1row=2column=col-lg-6</p><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./main.less&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/less&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//at.alicdn.com/t/font_586267_8w74kdqsnsi.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/less.js/3.12.2/less.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-6 col-sm-12 col-lg-4&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-6 col-sm-12 col-lg-4&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-6 col-sm-12 col-lg-4&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>main.less</p><pre><code class="hljs less"><span class="hljs-comment">// 公共样式</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;base.less&#x27;</span>;<span class="hljs-comment">// navbar样式</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;navbar.less&#x27;</span>;<span class="hljs-comment">// width&gt;1200显示list-icon</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;large.less&#x27;</span> only screen and(<span class="hljs-attribute">min-width</span>:<span class="hljs-number">1200px</span>);<span class="hljs-comment">// width&lt;1200隐藏collsapse和form</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;small.less&#x27;</span> only screen and(<span class="hljs-attribute">max-width</span>:<span class="hljs-number">1200px</span>);</code></pre><p>base.less</p><pre><code class="hljs less"><span class="hljs-selector-pseudo">:root</span>&#123;    <span class="hljs-comment">// 规定根元素的字体大小，后面适用的xrem都是相对与15px</span>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;    <span class="hljs-attribute">min-width</span>: <span class="hljs-number">850px</span>;&#125;*&#123;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span>;    <span class="hljs-attribute">padding</span>:<span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">a</span>&#123;    <span class="hljs-attribute">text-decoration</span>:none;&#125;<span class="hljs-selector-tag">li</span>&#123;    <span class="hljs-attribute">list-style</span>:none;&#125;<span class="hljs-comment">// 定义公共样式中的栅格span,1row=12column</span><span class="hljs-selector-class">.container</span>&#123;    <span class="hljs-selector-class">.row</span>&#123;        <span class="hljs-attribute">display</span>: grid;        <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">12</span>,<span class="hljs-number">1</span>fr);        <span class="hljs-attribute">grid-gap</span>: <span class="hljs-number">10px</span>;        <span class="hljs-selector-tag">div</span>&#123;            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> dashed;        &#125;        <span class="hljs-selector-class">.col-1</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">1</span>;        &#125;        <span class="hljs-selector-class">.col-2</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">2</span>;        &#125;        <span class="hljs-selector-class">.col-3</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">3</span>;        &#125;        <span class="hljs-selector-class">.col-4</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">4</span>;        &#125;        <span class="hljs-selector-class">.col-5</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">5</span>;        &#125;        <span class="hljs-selector-class">.col-6</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">6</span>;        &#125;        <span class="hljs-selector-class">.col-7</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">7</span>;        &#125;        <span class="hljs-selector-class">.col-8</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">8</span>;        &#125;        <span class="hljs-selector-class">.col-9</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">9</span>;        &#125;        <span class="hljs-selector-class">.col-10</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">10</span>;        &#125;        <span class="hljs-selector-class">.col-11</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">11</span>;        &#125;        <span class="hljs-selector-class">.col-12</span>&#123;            <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">12</span>;        &#125;    &#125;&#125;</code></pre><p>small.less</p><pre><code class="hljs less"><span class="hljs-comment">// 定义small样式中的栅格span,1row=12column</span><span class="hljs-selector-class">.container</span>&#123;  <span class="hljs-selector-class">.row</span>&#123;      <span class="hljs-attribute">display</span>: grid;      <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">12</span>,<span class="hljs-number">1</span>fr);      <span class="hljs-selector-class">.col-sm-1</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">1</span>;      &#125;      <span class="hljs-selector-class">.col-sm-2</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">2</span>;      &#125;      <span class="hljs-selector-class">.col-sm-3</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">3</span>;      &#125;      <span class="hljs-selector-class">.col-sm-4</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">4</span>;      &#125;      <span class="hljs-selector-class">.col-sm-5</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">5</span>;      &#125;      <span class="hljs-selector-class">.col-sm-6</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">6</span>;      &#125;      <span class="hljs-selector-class">.col-sm-7</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">7</span>;      &#125;      <span class="hljs-selector-class">.col-sm-8</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">8</span>;      &#125;      <span class="hljs-selector-class">.col-sm-9</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">9</span>;      &#125;      <span class="hljs-selector-class">.col-sm-10</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">10</span>;      &#125;      <span class="hljs-selector-class">.col-sm-11</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">11</span>;      &#125;      <span class="hljs-selector-class">.col-sm-12</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">12</span>;      &#125;  &#125;&#125;</code></pre><p>large.less</p><pre><code class="hljs less"><span class="hljs-comment">// 定义large样式中的栅格span,1row=12column</span><span class="hljs-selector-class">.container</span>&#123;  <span class="hljs-selector-class">.row</span>&#123;      <span class="hljs-attribute">display</span>: grid;      <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">12</span>,<span class="hljs-number">1</span>fr);      <span class="hljs-selector-class">.col-lg-1</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">1</span>;      &#125;      <span class="hljs-selector-class">.col-lg-2</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">2</span>;      &#125;      <span class="hljs-selector-class">.col-lg-3</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">3</span>;      &#125;      <span class="hljs-selector-class">.col-lg-4</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">4</span>;      &#125;      <span class="hljs-selector-class">.col-lg-5</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">5</span>;      &#125;      <span class="hljs-selector-class">.col-lg-6</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">6</span>;      &#125;      <span class="hljs-selector-class">.col-lg-7</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">7</span>;      &#125;      <span class="hljs-selector-class">.col-lg-8</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">8</span>;      &#125;      <span class="hljs-selector-class">.col-lg-9</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">9</span>;      &#125;      <span class="hljs-selector-class">.col-lg-10</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">10</span>;      &#125;      <span class="hljs-selector-class">.col-lg-11</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">11</span>;      &#125;      <span class="hljs-selector-class">.col-lg-12</span>&#123;          <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">12</span>;      &#125;  &#125;&#125;</code></pre><h4 id="9-card"><a href="#9-card" class="headerlink" title="9.card"></a>9.card</h4><p>在栅格布局基础上的卡片列表</p><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./main.less&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/less&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//at.alicdn.com/t/font_586267_8w74kdqsnsi.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/less.js/3.12.2/less.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-lg-6 col-sm-12&quot;</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-header&quot;</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-header-icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>card-header-title<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-body&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-footer&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-lg-6 col-sm-12&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>main.less</p><pre><code class="hljs less"><span class="hljs-comment">// 公共样式</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;base.less&#x27;</span>;<span class="hljs-comment">// width&gt;1200显示list-icon</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;large.less&#x27;</span> only screen and(<span class="hljs-attribute">min-width</span>:<span class="hljs-number">1200px</span>);<span class="hljs-comment">// width&lt;1200隐藏collsapse和form</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;small.less&#x27;</span> only screen and(<span class="hljs-attribute">max-width</span>:<span class="hljs-number">1200px</span>);</code></pre><p>bass.less</p><pre><code class="hljs less">*&#123;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">a</span>&#123;    <span class="hljs-attribute">text-decoration</span>: none;&#125;<span class="hljs-selector-tag">li</span>&#123;    <span class="hljs-attribute">list-style</span>: none;&#125;<span class="hljs-selector-pseudo">:root</span>&#123;    <span class="hljs-attribute">min-width</span>: <span class="hljs-number">800px</span>;    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;&#125;<span class="hljs-selector-tag">h3</span>&#123;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;    <span class="hljs-attribute">font-size</span>: .<span class="hljs-number">5rem</span>;&#125;<span class="hljs-selector-class">.container</span>&#123;    <span class="hljs-selector-class">.row</span>&#123;        <span class="hljs-attribute">display</span>: grid;        <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">12</span>,<span class="hljs-number">1</span>fr);        <span class="hljs-attribute">grid-gap</span>: <span class="hljs-number">1rem</span>;        &gt;<span class="hljs-selector-tag">div</span>&#123;            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> dashed;        &#125;        <span class="hljs-selector-class">.card</span>&#123;            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;            <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;            <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> rgba(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">1</span>);            <span class="hljs-selector-class">.card-header</span>&#123;                <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;                <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;                <span class="hljs-attribute">display</span>: flex;                <span class="hljs-selector-class">.card-header-icon</span>&#123;                    <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">5px</span>;                    <span class="hljs-attribute">width</span>: <span class="hljs-number">6px</span>;                    <span class="hljs-attribute">height</span>: <span class="hljs-number">16px</span>;                    <span class="hljs-attribute">background</span>: <span class="hljs-number">#555</span>;                &#125;            &#125;            <span class="hljs-selector-class">.card-body</span>&#123;                <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;            &#125;            <span class="hljs-selector-class">.card-footer</span>&#123;                <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;                <span class="hljs-attribute">border-top</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;            &#125;        &#125;    &#125;&#125;</code></pre><p>small.less</p><pre><code class="hljs less"><span class="hljs-selector-class">.col-sm-1</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">1</span>;&#125;<span class="hljs-selector-class">.col-sm-2</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">2</span>;&#125;<span class="hljs-selector-class">.col-sm-3</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">3</span>;&#125;<span class="hljs-selector-class">.col-sm-4</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">4</span>;&#125;<span class="hljs-selector-class">.col-sm-5</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">5</span>;&#125;<span class="hljs-selector-class">.col-sm-6</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">6</span>;&#125;<span class="hljs-selector-class">.col-sm-7</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">7</span>;&#125;<span class="hljs-selector-class">.col-sm-8</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">8</span>;&#125;<span class="hljs-selector-class">.col-sm-9</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">9</span>;&#125;<span class="hljs-selector-class">.col-sm-10</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">10</span>;&#125;<span class="hljs-selector-class">.col-sm-11</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">11</span>;&#125;<span class="hljs-selector-class">.col-sm-12</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">12</span>;&#125;</code></pre><p>large.less</p><pre><code class="hljs less"><span class="hljs-selector-class">.col-lg-1</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">1</span>;&#125;<span class="hljs-selector-class">.col-lg-2</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">2</span>;&#125;<span class="hljs-selector-class">.col-lg-3</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">3</span>;&#125;<span class="hljs-selector-class">.col-lg-4</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">4</span>;&#125;<span class="hljs-selector-class">.col-lg-5</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">5</span>;&#125;<span class="hljs-selector-class">.col-lg-6</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">6</span>;&#125;<span class="hljs-selector-class">.col-lg-7</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">7</span>;&#125;<span class="hljs-selector-class">.col-lg-8</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">8</span>;&#125;<span class="hljs-selector-class">.col-lg-9</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">9</span>;&#125;<span class="hljs-selector-class">.col-lg-10</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">10</span>;&#125;<span class="hljs-selector-class">.col-lg-11</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">11</span>;&#125;<span class="hljs-selector-class">.col-lg-12</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">12</span>;&#125;</code></pre><h4 id="10-list-group-amp-页码组件"><a href="#10-list-group-amp-页码组件" class="headerlink" title="10.list-group&amp;页码组件"></a>10.list-group&amp;页码组件</h4><p>列表组件大尺寸左侧占8，右侧占4;小尺寸左侧、右侧占12</p><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./main.less&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/less&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//at.alicdn.com/t/font_586267_8w74kdqsnsi.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/less.js/3.12.2/less.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-lg-8 col-sm-12&quot;</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-header&quot;</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-header-icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>card-header-title<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-body&quot;</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>                            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>                                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>list1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>2020-04-22<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>                            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>                                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>list1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>2020-04-22<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>                            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>                                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>list1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>2020-04-22<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>                            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-footer&quot;</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page&quot;</span>&gt;</span>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>&lt;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;current&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                                            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-lg-4 col-sm-12&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>main.less</p><pre><code class="hljs less"><span class="hljs-comment">// 公共样式</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;base.less&#x27;</span>;<span class="hljs-comment">// list样式</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;list.less&#x27;</span>;<span class="hljs-comment">// width&gt;1200显示list-icon</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;large.less&#x27;</span> only screen and(<span class="hljs-attribute">min-width</span>:<span class="hljs-number">1200px</span>);<span class="hljs-comment">// width&lt;1200隐藏collsapse和form</span><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;small.less&#x27;</span> only screen and(<span class="hljs-attribute">max-width</span>:<span class="hljs-number">1200px</span>);</code></pre><p>bass.less</p><pre><code class="hljs less">*&#123;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">a</span>&#123;    <span class="hljs-attribute">text-decoration</span>: none;&#125;<span class="hljs-selector-tag">li</span>&#123;    <span class="hljs-attribute">list-style</span>: none;&#125;<span class="hljs-selector-pseudo">:root</span>&#123;    <span class="hljs-attribute">min-width</span>: <span class="hljs-number">800px</span>;    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;&#125;<span class="hljs-selector-tag">h3</span>&#123;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;    <span class="hljs-attribute">font-size</span>: .<span class="hljs-number">5rem</span>;&#125;<span class="hljs-selector-class">.container</span>&#123;    <span class="hljs-selector-class">.row</span>&#123;        <span class="hljs-attribute">display</span>: grid;        <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">12</span>,<span class="hljs-number">1</span>fr);        <span class="hljs-attribute">grid-gap</span>: <span class="hljs-number">1rem</span>;        &gt;<span class="hljs-selector-tag">div</span>&#123;            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> dashed;        &#125;    &#125;&#125;</code></pre><p>small.less</p><pre><code class="hljs less"><span class="hljs-selector-class">.col-sm-1</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">1</span>;&#125;<span class="hljs-selector-class">.col-sm-2</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">2</span>;&#125;<span class="hljs-selector-class">.col-sm-3</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">3</span>;&#125;<span class="hljs-selector-class">.col-sm-4</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">4</span>;&#125;<span class="hljs-selector-class">.col-sm-5</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">5</span>;&#125;<span class="hljs-selector-class">.col-sm-6</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">6</span>;&#125;<span class="hljs-selector-class">.col-sm-7</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">7</span>;&#125;<span class="hljs-selector-class">.col-sm-8</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">8</span>;&#125;<span class="hljs-selector-class">.col-sm-9</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">9</span>;&#125;<span class="hljs-selector-class">.col-sm-10</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">10</span>;&#125;<span class="hljs-selector-class">.col-sm-11</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">11</span>;&#125;<span class="hljs-selector-class">.col-sm-12</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">12</span>;&#125;</code></pre><p>large.less</p><pre><code class="hljs less"><span class="hljs-selector-class">.col-lg-1</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">1</span>;&#125;<span class="hljs-selector-class">.col-lg-2</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">2</span>;&#125;<span class="hljs-selector-class">.col-lg-3</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">3</span>;&#125;<span class="hljs-selector-class">.col-lg-4</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">4</span>;&#125;<span class="hljs-selector-class">.col-lg-5</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">5</span>;&#125;<span class="hljs-selector-class">.col-lg-6</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">6</span>;&#125;<span class="hljs-selector-class">.col-lg-7</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">7</span>;&#125;<span class="hljs-selector-class">.col-lg-8</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">8</span>;&#125;<span class="hljs-selector-class">.col-lg-9</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">9</span>;&#125;<span class="hljs-selector-class">.col-lg-10</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">10</span>;&#125;<span class="hljs-selector-class">.col-lg-11</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">11</span>;&#125;<span class="hljs-selector-class">.col-lg-12</span> &#123;  <span class="hljs-attribute">grid-column</span>: span <span class="hljs-number">12</span>;&#125;</code></pre><p>list.less</p><pre><code class="hljs less"><span class="hljs-selector-class">.card</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> rgba(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">1</span>);    <span class="hljs-selector-class">.card-header</span>&#123;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;        <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;        <span class="hljs-attribute">display</span>: flex;        <span class="hljs-selector-class">.card-header-icon</span>&#123;            <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">5px</span>;            <span class="hljs-attribute">width</span>: <span class="hljs-number">6px</span>;            <span class="hljs-attribute">height</span>: <span class="hljs-number">16px</span>;            <span class="hljs-attribute">background</span>: <span class="hljs-number">#555</span>;        &#125;    &#125;    <span class="hljs-selector-class">.card-body</span>&#123;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;        <span class="hljs-selector-tag">li</span>&#123;            <span class="hljs-attribute">display</span>: flex;            <span class="hljs-attribute">justify-content</span>: space-between;            <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;            <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;            <span class="hljs-comment">// li最后一个元素border-bottom不生效</span>            <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-pseudo">:last-child</span>&#123;                <span class="hljs-attribute">border-bottom</span>: none;            &#125;        &#125;            &#125;    <span class="hljs-selector-class">.card-footer</span>&#123;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;        <span class="hljs-attribute">border-top</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;        <span class="hljs-selector-class">.page</span>&#123;            <span class="hljs-comment">// a变成块级元素，整体flex布局横排</span>            <span class="hljs-attribute">display</span>: flex;            &gt;<span class="hljs-selector-tag">a</span>&#123;                <span class="hljs-attribute">display</span>: block;                <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;                <span class="hljs-attribute">padding</span>: .<span class="hljs-number">3rem</span> .<span class="hljs-number">7rem</span>;                <span class="hljs-comment">// 去除相邻两个border重叠的边框</span>                <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">1px</span>;                <span class="hljs-comment">// class=&#x27;current&#x27;选中的页码</span>                <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-class">.current</span>&#123;                    <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;                &#125;                <span class="hljs-comment">// a的第一个元素圆角</span>                <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-pseudo">:first-child</span>&#123;                    <span class="hljs-attribute">border-top-left-radius</span>:.<span class="hljs-number">3rem</span>;                    <span class="hljs-attribute">border-bottom-left-radius</span>:.<span class="hljs-number">3rem</span>;                &#125;                <span class="hljs-comment">// a的最后一个元素圆角</span>                <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-pseudo">:last-child</span>&#123;                    <span class="hljs-attribute">border-top-right-radius</span>:.<span class="hljs-number">3rem</span>;                    <span class="hljs-attribute">border-bottom-right-radius</span>: .<span class="hljs-number">3rem</span>;                &#125;            &#125;        &#125;    &#125;&#125;</code></pre><h4 id="12-控制边距组件"><a href="#12-控制边距组件" class="headerlink" title="12.控制边距组件"></a>12.控制边距组件</h4><p>可以分别对css进行组件拆分，分别维护不同的css，边距也可类似栅格布局进行定义。</p><h4 id="13-rem响应布局"><a href="#13-rem响应布局" class="headerlink" title="13.rem响应布局"></a>13.rem响应布局</h4><p>不同尺寸的样式分别定义:root{font-size:15px}，其他尺寸使用rem，当root的字号改变rem会相对root的字号进行缩放。</p>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>text</title>
    <link href="/2021/01/11/text/"/>
    <url>/2021/01/11/text/</url>
    
    <content type="html"><![CDATA[<h1 id="text"><a href="#text" class="headerlink" title="text"></a>text</h1><p>1.自定义字体</p><p>字体：font-family: 字体1,字体2,…;</p><p>自定义: </p><p>@font-face{</p><p>​    font-family:自定义字体名;</p><p>​    src:url(‘path’) format(字体格式);</p><p>}</p><p>font-family:自定义字体名;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>zyh<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-keyword">@font-face</span>&#123;    <span class="hljs-attribute">font-family</span>: zyh;    <span class="hljs-attribute">src</span>: url(<span class="hljs-string">&#x27;./ADOBEGOTHICSTD-BOLD.OTF&#x27;</span>) format(<span class="hljs-string">&#x27;opentype&#x27;</span>);&#125;<span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-comment">// 自定义字体</span>    <span class="hljs-comment">// font-family: zyh;</span>    <span class="hljs-comment">// 字体库中字体</span>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Courier New&#x27;</span>, Courier, monospace;&#125;</code></pre><p>2.字重&amp;字号</p><p>字重：font-weight:bold|lighter|normal|num(100-900);</p><p>字号：font-size:small|meidum|large|%|px|em;</p><p>%|em：子元素的字号可以参考父元素的字号显示相对大小，1em=100%</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>zyh<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">font-size</span>:<span class="hljs-number">30px</span>;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">font-weight</span>: lighter;        <span class="hljs-comment">// 相对父元素的2倍，2em</span>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">200%</span>;    &#125;&#125;</code></pre><p>3.颜色&amp;行高</p><p>颜色：color:#|rgba;</p><p>行高：响应式布局行高用em，能够自适应</p><p>line-height:px|em;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum modi optio deserunt assumenda repellat impedit doloremque unde error nam, labore deleniti enim ab quisquam vel harum iure. Beatae, ex laborum.<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">color</span>:red;    <span class="hljs-comment">// 响应式布局行高用em，能够自适应</span>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1em</span>;&#125;</code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre><p>.</p><pre><code class="hljs html"></code></pre><pre><code class="hljs less"></code></pre>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>react native</title>
    <link href="/2021/01/10/react%20native/"/>
    <url>/2021/01/10/react%20native/</url>
    
    <content type="html"><![CDATA[<h2 id="React-Native"><a href="#React-Native" class="headerlink" title="React Native"></a>React Native</h2>]]></content>
    
    
    <categories>
      
      <category>react native</category>
      
    </categories>
    
    
    <tags>
      
      <tag>react native</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>weight</title>
    <link href="/2021/01/10/weight/"/>
    <url>/2021/01/10/weight/</url>
    
    <content type="html"><![CDATA[<h1 id="weight"><a href="#weight" class="headerlink" title="weight"></a>weight</h1><table><thead><tr><th>规则</th><th>权重</th></tr></thead><tbody><tr><td>继承</td><td>NULL</td></tr><tr><td>*</td><td>0000</td></tr><tr><td>标签|伪元素</td><td>0001</td></tr><tr><td>class|类属性</td><td>0010</td></tr><tr><td>id</td><td>0100</td></tr><tr><td>行内样式</td><td>1000</td></tr></tbody></table><p>1.继承权重&lt;*；</p><p>2.权重会继承父级，不会反哺，有些属性不会被继承（border）;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-comment">// 通配符：1</span>*&#123;    <span class="hljs-attribute">color</span>:green;&#125;<span class="hljs-comment">// 继承：null，div权重继承父级</span><span class="hljs-comment">// 继承权重&lt;*，最后使用*的样式</span><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">color</span>:red;    <span class="hljs-comment">// border不会被div继承，div中的样式也不会反哺父级</span>    <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;&#125;</code></pre><p>3.行内样式不要轻易使用；</p><p>4.!import强制提升权重；</p><p>5.权重相同使用后出现的；</p><p>6.权重可以叠加使用；</p>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>week7</title>
    <link href="/2021/01/10/week/week7/"/>
    <url>/2021/01/10/week/week7/</url>
    
    <content type="html"><![CDATA[<h1 id="week7"><a href="#week7" class="headerlink" title="week7"></a>week7</h1><p>1.[iframe框架都有哪些优缺点？]</p><p>2.[[css]简述你对BFC规范的理解]</p><p>3.[[js]统计某一字符或字符串在另一个字符串中出现的次数]</p><h3 id="1-iframe框架都有哪些优缺点？"><a href="#1-iframe框架都有哪些优缺点？" class="headerlink" title="1.[iframe框架都有哪些优缺点？]"></a>1.[iframe框架都有哪些优缺点？]</h3><h3 id="2-css-简述你对BFC规范的理解"><a href="#2-css-简述你对BFC规范的理解" class="headerlink" title="2.[[css]简述你对BFC规范的理解]"></a>2.[[css]简述你对BFC规范的理解]</h3><h3 id="3-js-统计某一字符或字符串在另一个字符串中出现的次数"><a href="#3-js-统计某一字符或字符串在另一个字符串中出现的次数" class="headerlink" title="3.[[js]统计某一字符或字符串在另一个字符串中出现的次数]"></a>3.[[js]统计某一字符或字符串在另一个字符串中出现的次数]</h3><p>1）递归</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;asdf.qert.aass&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">countFn</span>(<span class="hljs-params">str, i</span>) </span>&#123;    <span class="hljs-keyword">let</span> idx = str.indexOf(i);    <span class="hljs-keyword">if</span> (idx != -<span class="hljs-number">1</span>) &#123;        count++;        str = str.substr(idx + <span class="hljs-number">1</span>);        countFn(str, i);    &#125;    <span class="hljs-keyword">return</span> count;&#125;<span class="hljs-keyword">let</span> c = countFn(str, <span class="hljs-string">&quot;a&quot;</span>);<span class="hljs-built_in">console</span>.log(c);</code></pre><p>2）split</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;asdf.qert.aass&quot;</span>;<span class="hljs-built_in">console</span>.log(str.split(<span class="hljs-string">&#x27;a&#x27;</span>).length-<span class="hljs-number">1</span>)</code></pre><p>3）正则</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;tools.jb51.net&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">patchFn</span>(<span class="hljs-params">re, str</span>) </span>&#123;    <span class="hljs-comment">// 正则要转成RegExp对象</span>    <span class="hljs-keyword">let</span> newRe = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(re,<span class="hljs-string">&#x27;ig&#x27;</span>);    <span class="hljs-keyword">return</span> str.match(newRe).length;&#125;<span class="hljs-keyword">let</span> c = patchFn(<span class="hljs-string">&quot;t&quot;</span>, str)<span class="hljs-built_in">console</span>.log(c);</code></pre>]]></content>
    
    
    <categories>
      
      <category>week</category>
      
    </categories>
    
    
    <tags>
      
      <tag>week</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>week6</title>
    <link href="/2020/12/31/week/week6/"/>
    <url>/2020/12/31/week/week6/</url>
    
    <content type="html"><![CDATA[<h1 id="week6"><a href="#week6" class="headerlink" title="week6"></a>week6</h1><p>1.[[html]label都有哪些作用？并举相应的例子说明]</p><p>2.[[css]用css创建一个三角形，并简述原理]</p><p>3.[[js]写一个去除制表符和换行符的方法]</p><h3 id="1-html-label都有哪些作用？并举相应的例子说明"><a href="#1-html-label都有哪些作用？并举相应的例子说明" class="headerlink" title="1.[[html]label都有哪些作用？并举相应的例子说明]"></a>1.[[html]label都有哪些作用？并举相应的例子说明]</h3><p>1）label标签for属性与input标签种的id相同，绑定表单，点击label可以获取焦点；</p><p>2）label模拟button</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=&#x27;button&#x27;]</span> &#123;  <span class="hljs-attribute">display</span>: none;&#125;<span class="hljs-selector-tag">label</span> &#123;  <span class="hljs-attribute">display</span>: inline-block;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">20px</span>;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#456</span>;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">cursor</span>: pointer;  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">4px</span> <span class="hljs-number">0</span> rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">3</span>);  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;&#125;</code></pre><p>3）checkbox、radio实现css切换</p><h3 id="2-css-用css创建一个三角形，并简述原理"><a href="#2-css-用css创建一个三角形，并简述原理" class="headerlink" title="2.[[css]用css创建一个三角形，并简述原理]"></a>2.[[css]用css创建一个三角形，并简述原理]</h3><p>border是由4个三角形拼成的，border-width控制三角的大小，</p><p>width:0;height:0;</p><p>border宽度：div中心到四边的宽度</p><p>1）一条横竖边：</p><p>border-横竖边方向：长度 solid color;</p><p>border-两条斜边方向：长度 solid transparent;</p><p>2）两条横竖边：</p><p>若斜边是在三角形的右边，这时候设置top或bottom的直线，和右边的斜线。</p><p>border-top|borde-bottom:长度 solid color;</p><p>border-right:长度 solid transparent；</p><p>若斜边是在三角形的左边，这时候设置top或bottom的直线，和左边的斜线。</p><p>border-top|borde-bottom:长度 solid color;</p><p>border-left:长度 solid transparent；</p><hr><p>带边框的三角型</p><p>黄色三角相对父元素padding绝对定位，父元素宽高为0，内容区域为div的中心，是蓝色三角顶点位置。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">border-bottom</span>:<span class="hljs-number">40px</span> solid blue;    <span class="hljs-attribute">border-left</span>:<span class="hljs-number">40px</span> solid transparent;    <span class="hljs-attribute">border-right</span>:<span class="hljs-number">40px</span> solid transparent;&#125;<span class="hljs-attribute">div</span>::after&#123;    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">38px</span> solid yellow;    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">38px</span> solid transparent;    <span class="hljs-attribute">border-right</span>: <span class="hljs-number">38px</span> solid transparent;    <span class="hljs-attribute">position</span>: absolute;    <span class="hljs-attribute">left</span>: <span class="hljs-number">10px</span>;    <span class="hljs-attribute">top</span>: <span class="hljs-number">9px</span>;&#125;</code></pre><h3 id="3-js-写一个去除制表符和换行符的方法"><a href="#3-js-写一个去除制表符和换行符的方法" class="headerlink" title="3.[[js]写一个去除制表符和换行符的方法]"></a>3.[[js]写一个去除制表符和换行符的方法]</h3><p>[]：表达式</p><p>\n：换行符</p><p>\t：制表符</p><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">str</span>) </span>&#123;      <span class="hljs-keyword">return</span> str.replace(<span class="hljs-regexp">/[\n\t]/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)&#125;<span class="hljs-keyword">let</span> str=<span class="hljs-string">&#x27;asdf   as\tasd\sasd\n  .&#x27;</span><span class="hljs-built_in">console</span>.log(fn(str))</code></pre>]]></content>
    
    
    <categories>
      
      <category>week</category>
      
    </categories>
    
    
    <tags>
      
      <tag>week</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>grid布局</title>
    <link href="/2020/12/27/grid/"/>
    <url>/2020/12/27/grid/</url>
    
    <content type="html"><![CDATA[<h1 id="grid布局"><a href="#grid布局" class="headerlink" title="grid布局"></a>grid布局</h1><h4 id="1-栅格布局4-4"><a href="#1-栅格布局4-4" class="headerlink" title="1.栅格布局4*4"></a>1.栅格布局4*4</h4><p>template都在开启grid布局的盒子里</p><p>display:grid;</p><p>grid-template-rows:设置行</p><p>grid-template-colums:设置列</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>7<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>9<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>11<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>12<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>13<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>14<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>15<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>16<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-comment">// 背景到盒子的content 100-10*2-1*2=78</span>        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-comment">// 元素的总宽高包含到border 100*100</span>        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><h4 id="2-重复设置栅格结构"><a href="#2-重复设置栅格结构" class="headerlink" title="2.重复设置栅格结构"></a>2.重复设置栅格结构</h4><p>行高1，行高2….，重复x次</p><p>grid-template-rows:repeat(行数，行高);</p><p>grid-template-colums:repeat(列数，列宽);</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 行高100px 50px，重复2行</span>    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">2</span>,<span class="hljs-number">100px</span> <span class="hljs-number">50px</span>);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-comment">// 背景到盒子的content 100-10*2-1*2=78</span>        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-comment">// 元素的总宽高包含到border 100*100</span>        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><h4 id="3-自动填充行列"><a href="#3-自动填充行列" class="headerlink" title="3.自动填充行列"></a>3.自动填充行列</h4><p>行|列自动填充，每个元素宽高为num*num</p><p>grid-template-rows:repeat(auto-fill,num);</p><p>grid-template-colums:repeat(auto-fill,num);</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>7<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>9<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 自动填充行列，元素100*100</span>    <span class="hljs-attribute">grid-template-rows</span>: repeat(auto-fill,<span class="hljs-number">100px</span>);    <span class="hljs-attribute">grid-template-columns</span>: repeat(auto-fill,<span class="hljs-number">100px</span>);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><h4 id="4-元素尺寸范围minmax"><a href="#4-元素尺寸范围minmax" class="headerlink" title="4.元素尺寸范围minmax()"></a>4.元素尺寸范围minmax()</h4><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 3行，元素高度50-100</span>    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,minmax(<span class="hljs-number">50px</span>,<span class="hljs-number">100px</span>));    <span class="hljs-attribute">grid-template-columns</span>: repeat(auto-fill,<span class="hljs-number">100px</span>);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><h4 id="5-栅格间距"><a href="#5-栅格间距" class="headerlink" title="5.栅格间距"></a>5.栅格间距</h4><p>row-gap<br>|column-gap&lt;==&gt;gap</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">gap</span>:<span class="hljs-number">10px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><h4 id="6-栅格编号线"><a href="#6-栅格编号线" class="headerlink" title="6.栅格编号线"></a>6.栅格编号线</h4><p>行起始线：grid-row-start:num; </p><p>行终止线：grid-row-end:num;</p><p>列起始线：grid-column-start:num;</p><p>列终止线：grid-column-end:num;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-comment">// 行线2-3，列线2-3</span>        <span class="hljs-attribute">grid-row-start</span>:<span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-row-end</span>:<span class="hljs-number">3</span>;        <span class="hljs-attribute">grid-column-start</span>:<span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-column-end</span>: <span class="hljs-number">3</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><p>不规则元素布局</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 第一个元素行线1-3，列线1-2，将元素3挤到空白处</span>    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">1</span>)&#123;        <span class="hljs-attribute">grid-row-start</span>:<span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-row-end</span>:<span class="hljs-number">3</span>;        <span class="hljs-attribute">grid-column-start</span>: <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column-end</span>:<span class="hljs-number">2</span>;    &#125;&#125;</code></pre><h4 id="7-栅格命名"><a href="#7-栅格命名" class="headerlink" title="7.栅格命名"></a>7.栅格命名</h4><h5 id="1）每行-列命名，每行列都要命名"><a href="#1）每行-列命名，每行列都要命名" class="headerlink" title="1）每行|列命名，每行列都要命名"></a>1）每行|列命名，每行列都要命名</h5><p>grid-template-rows:[r1行起] num [r1行终 r2行起] num [r2行终 r3行起] num [r3行终]；</p><p>grid-template-columns: [c1列起] num [c1列终 c2列起] num [c2列终 c3列起] num [c3列终]；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: [r1-start] <span class="hljs-number">100px</span> [r1-end r2-start] <span class="hljs-number">100px</span> [r2-end r3-start] <span class="hljs-number">100px</span> [r3-end];    <span class="hljs-attribute">grid-template-columns</span>: [c1-start] <span class="hljs-number">100px</span> [c1-end c2-start] <span class="hljs-number">100px</span> [c2-end c3-start] <span class="hljs-number">100px</span> [c3-end];    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 2行起-2行终，2列起-2列终</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row-start</span>:r2-start;        <span class="hljs-attribute">grid-row-end</span>:r2-end;        <span class="hljs-attribute">grid-column-start</span>:c2-start;        <span class="hljs-attribute">grid-column-end</span>:c2-end;    &#125;&#125;</code></pre><h5 id="2）重复栅格命名，行列只命名一次"><a href="#2）重复栅格命名，行列只命名一次" class="headerlink" title="2）重复栅格命名，行列只命名一次"></a>2）重复栅格命名，行列只命名一次</h5><p>n行|列，每行|列高度num，栅格线每行|列起始、终止命名为括号里的内容</p><p>grid-template-rows:repeat(n, [行起] num [行终])</p><p>grid-template-columns:(n, [列起] num [列终])</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 重复3行|列等分</span>    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,[r-start] <span class="hljs-number">1</span>fr [r-end]);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,[c-start] <span class="hljs-number">1</span>fr[c-end]);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 1行起-1行终，1列起-3列终</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row-start</span>: r-start <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-row-end</span>: r-end <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column-start</span>: c-start <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column-end</span>: c-end <span class="hljs-number">3</span>;    &#125;&#125;</code></pre><h5 id="3）栅格线数字命名，只数栅格线数字序号"><a href="#3）栅格线数字命名，只数栅格线数字序号" class="headerlink" title="3）栅格线数字命名，只数栅格线数字序号"></a>3）栅格线数字命名，只数栅格线数字序号</h5><p>不写grid-x-start，默认偏移1格</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 数字命名只数栅格线数字序号，行线：1-2，列线：1-4</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row-start</span>:<span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-row-end</span>:<span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-column-start</span>: <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column-end</span>:<span class="hljs-number">4</span>;    &#125;&#125;</code></pre><h5 id="4）偏移量命名"><a href="#4）偏移量命名" class="headerlink" title="4）偏移量命名"></a>4）偏移量命名</h5><p>行|列偏移num：grid-x-start:span num;</p><p>栅格线命名只加grid-x-end|grid-x-start，默认偏移一格；</p><p>偏移量span同时加在start|end上</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 行end：3，列end：4，起始start同时偏移2</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row-start</span>:span <span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-row-end</span>:<span class="hljs-number">3</span>;        <span class="hljs-attribute">grid-column-start</span>:span <span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-column-end</span>:<span class="hljs-number">4</span>;    &#125;&#125;</code></pre><h5 id="5）元素定位简写"><a href="#5）元素定位简写" class="headerlink" title="5）元素定位简写"></a>5）元素定位简写</h5><p>行start：x，end：y        grid-row:x/y;</p><p>列start：x，end：y        grid-column:x/y</p><p>less使用grid元素定位简写会被计算，要跟偏移量同时使用；</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 行start：1，span 1；列start：1，span 3</span>    <span class="hljs-attribute">div</span>:first-child&#123;        <span class="hljs-attribute">grid-row</span>: <span class="hljs-number">1</span>/span <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column</span>: <span class="hljs-number">1</span>/span <span class="hljs-number">3</span>;    &#125;&#125;</code></pre><p>eg.不规则布局(小米首页)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);     <span class="hljs-attribute">grid-template-columns</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-comment">// 行start：1，span 3；列start：1，span 1</span>    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">1</span>)&#123;        <span class="hljs-attribute">grid-row</span>: <span class="hljs-number">1</span>/span <span class="hljs-number">3</span>;    &#125;    <span class="hljs-comment">// 行start：1，span 2；列start：2，span 2</span>    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">2</span>)&#123;        <span class="hljs-attribute">grid-row</span>:<span class="hljs-number">1</span>/span <span class="hljs-number">2</span>;        <span class="hljs-attribute">grid-column</span>:<span class="hljs-number">2</span>/span <span class="hljs-number">2</span>;    &#125;    <span class="hljs-comment">// 计算完1、2位置3被挤到行3 span 1的位置；列start：2，span 2</span>    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">3</span>)&#123;        <span class="hljs-attribute">grid-column</span>:<span class="hljs-number">2</span>/span <span class="hljs-number">2</span>;    &#125;&#125;</code></pre><h5 id="6）区域命名"><a href="#6）区域命名" class="headerlink" title="6）区域命名"></a>6）区域命名</h5><p>grid-area:行/列/行/列；</p><p>less会被计算成值，使用区域定位的命名</p><p>grid-template-rows:repeat(3,[r] 1fr);</p><p>grid-template-columns:repeat(3,[c] 1fr);</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-comment">// 区域定位的命名</span>    <span class="hljs-attribute">grid-template-rows</span>:repeat(<span class="hljs-number">3</span>,[r]<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">3</span>,[c]<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">box-sizing</span>:border-box;        <span class="hljs-attribute">grid-area</span>: r <span class="hljs-number">2</span>/ c <span class="hljs-number">2</span>/ r <span class="hljs-number">3</span>/ c <span class="hljs-number">3</span>;    &#125;&#125;</code></pre><h5 id="7）区域模板命名"><a href="#7）区域模板命名" class="headerlink" title="7）区域模板命名"></a>7）区域模板命名</h5><p>父元素：</p><p>grid-template-rows:m行;</p><p>grid-template-colunms:n列;</p><p>grid-template-areas: m行n列;</p><p>子元素：</p><p>grid-area:对应父元素中区域的名字</p><p>eg.不规则布局(小米首页)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr <span class="hljs-number">60px</span>;    <span class="hljs-attribute">grid-template-columns</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr;    <span class="hljs-comment">// 三行两列命名</span>    <span class="hljs-attribute">grid-template-areas</span>:<span class="hljs-string">&#x27;header header&#x27;</span>    <span class="hljs-string">&#x27;nav main&#x27;</span>    <span class="hljs-string">&#x27;footer footer&#x27;</span>;    <span class="hljs-selector-tag">header</span>,<span class="hljs-selector-tag">nav</span>,<span class="hljs-selector-tag">main</span>,<span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-attribute">padding</span>:<span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">background-clip</span>: content-box;    &#125;    <span class="hljs-comment">// 各部分区域名</span>    <span class="hljs-selector-tag">header</span>&#123;        <span class="hljs-attribute">grid-area</span>: header;    &#125;    <span class="hljs-selector-tag">nav</span>&#123;        <span class="hljs-attribute">grid-area</span>:nav;    &#125;    <span class="hljs-selector-tag">main</span>&#123;        <span class="hljs-attribute">grid-area</span>:main;    &#125;    <span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-attribute">grid-area</span>:footer;    &#125;&#125;</code></pre><p>占位符优化区域模板命名</p><p>区域模板中名字相同会被合并区域；</p><p>不同用’.’占位，每个区域是独立的空间；</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr <span class="hljs-number">60px</span>;    <span class="hljs-attribute">grid-template-columns</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr;    <span class="hljs-comment">// 三行两列命名, 引号内区域名称相同会被合并;</span>    <span class="hljs-comment">// &#x27;. .&#x27;占位不会合并区域</span>    <span class="hljs-attribute">grid-template-areas</span>:<span class="hljs-string">&#x27;header header&#x27;</span>    <span class="hljs-string">&#x27;. .&#x27;</span>    <span class="hljs-string">&#x27;footer footer&#x27;</span>;    <span class="hljs-selector-tag">header</span>,<span class="hljs-selector-tag">nav</span>,<span class="hljs-selector-tag">main</span>,<span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-comment">// 现有background才能background-clip</span>        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>:<span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;        <span class="hljs-attribute">background-clip</span>: content-box;    &#125;    <span class="hljs-selector-tag">header</span>&#123;        <span class="hljs-attribute">grid-area</span>: header;    &#125;    <span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-attribute">grid-area</span>: footer;    &#125;&#125;</code></pre><h5 id="8）区域栅格线命名"><a href="#8）区域栅格线命名" class="headerlink" title="8）区域栅格线命名"></a>8）区域栅格线命名</h5><p>每条栅格线名称：区域模板中区域命名-start|end</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr <span class="hljs-number">60px</span>;    <span class="hljs-attribute">grid-template-columns</span>:<span class="hljs-number">60px</span> <span class="hljs-number">1</span>fr;    <span class="hljs-comment">// 三行两列命名</span>    <span class="hljs-attribute">grid-template-areas</span>:<span class="hljs-string">&#x27;header header&#x27;</span>    <span class="hljs-string">&#x27;nav main&#x27;</span>    <span class="hljs-string">&#x27;footer footer&#x27;</span>;    <span class="hljs-selector-tag">header</span>,<span class="hljs-selector-tag">nav</span>,<span class="hljs-selector-tag">main</span>,<span class="hljs-selector-tag">footer</span>&#123;        <span class="hljs-attribute">padding</span>:<span class="hljs-number">10px</span>;        <span class="hljs-attribute">box-sizing</span>: border-box;        <span class="hljs-attribute">background-clip</span>: content-box;    &#125;    <span class="hljs-comment">// 行：header结束-footer开始</span>    <span class="hljs-comment">// 列: nav开始-main结束</span>    <span class="hljs-selector-tag">header</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">grid-row</span>: header-end/footer-start;        <span class="hljs-attribute">grid-column</span>: nav-start/main-end;    &#125;&#125;</code></pre><h4 id="8-栅格流动"><a href="#8-栅格流动" class="headerlink" title="8.栅格流动"></a>8.栅格流动</h4><p>栅格横向|纵向排列 自动占满空出来的空间：grid-auto-flow: row|column dense;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-rows</span>: repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>fr);    <span class="hljs-comment">// 行排列 后面的元素自动填满空出来的空间</span>    <span class="hljs-attribute">grid-auto-flow</span>: row dense;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">1</span>)&#123;        <span class="hljs-attribute">grid-column</span>: <span class="hljs-number">1</span>/span <span class="hljs-number">2</span>;    &#125;    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">2</span>)&#123;        <span class="hljs-attribute">grid-row</span>:<span class="hljs-number">2</span>/span <span class="hljs-number">1</span>;        <span class="hljs-attribute">grid-column</span>: <span class="hljs-number">3</span>/span <span class="hljs-number">1</span>;    &#125;&#125;</code></pre><h4 id="9-栅格对齐"><a href="#9-栅格对齐" class="headerlink" title="9.栅格对齐"></a>9.栅格对齐</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><h5 id="1）栅格整体对齐与简写"><a href="#1）栅格整体对齐与简写" class="headerlink" title="1）栅格整体对齐与简写"></a>1）栅格整体对齐与简写</h5><p>栅格整体：</p><p>justify-content: 栅格整体主轴对齐方式;</p><p>align-content:栅格整体交叉轴对其方式;</p><p>简写：place-content:align justify;</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">4</span>,<span class="hljs-number">100px</span>);    <span class="hljs-comment">// 栅格整体对齐</span>    <span class="hljs-comment">// justify-content: space-around;</span>    <span class="hljs-comment">// align-content: center;</span>    <span class="hljs-comment">// 栅格整体对齐简写</span>    <span class="hljs-attribute">place-content</span>: center space-around;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><h5 id="2）栅格内元素整体对齐与简写"><a href="#2）栅格内元素整体对齐与简写" class="headerlink" title="2）栅格内元素整体对齐与简写"></a>2）栅格内元素整体对齐与简写</h5><p>栅格整体：</p><p>justify-items:栅格内元素主轴对齐方式;</p><p>align-items:栅格内元素交叉轴对齐方式;</p><p>简写：place-items:align justify; </p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">4</span>,<span class="hljs-number">100px</span>);    <span class="hljs-comment">// 栅格内元素整体对齐</span>    <span class="hljs-comment">// justify-items: start;</span>    <span class="hljs-comment">// align-items:center;</span>    <span class="hljs-comment">// 栅格整体对齐简写</span>    <span class="hljs-attribute">place-items</span>: center start;    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;&#125;</code></pre><h5 id="3）栅格元素独立控制对齐与简写"><a href="#3）栅格元素独立控制对齐与简写" class="headerlink" title="3）栅格元素独立控制对齐与简写"></a>3）栅格元素独立控制对齐与简写</h5><p>栅格独立元素内：</p><p>justify-self:栅格元素独立控制主轴对齐方式;</p><p>align-self:栅格元素独立控制交叉轴对齐方式;</p><p>简写：place-self:align justify; </p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">display</span>: grid;    <span class="hljs-attribute">grid-template-columns</span>:repeat(<span class="hljs-number">4</span>,<span class="hljs-number">100px</span>);    <span class="hljs-selector-tag">div</span>&#123;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;        <span class="hljs-attribute">background</span>: lightblue;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;        <span class="hljs-attribute">background-clip</span>: content-box;        <span class="hljs-attribute">box-sizing</span>: border-box;    &#125;    <span class="hljs-attribute">div</span>:nth-child(<span class="hljs-number">3</span>)&#123;        <span class="hljs-comment">// 栅格元素独立控制对齐</span>        <span class="hljs-comment">// justify-self: end;</span>        <span class="hljs-comment">// align-self: center;</span>        <span class="hljs-comment">// 栅格元素独立控制对齐简写</span>        <span class="hljs-attribute">place-self</span>: center end;    &#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>week5</title>
    <link href="/2020/12/27/week/week5/"/>
    <url>/2020/12/27/week/week5/</url>
    
    <content type="html"><![CDATA[<h1 id="week5"><a href="#week5" class="headerlink" title="week5"></a>week5</h1><p>1.[[html]简述超链接target属性的取值和作用]</p><p>2.[[css]CSS3新增伪类有哪些并简要描述]</p><p>3.[[js]写一个把字符串大小写切换的方法]</p><h3 id="1-html-简述超链接target属性的取值和作用"><a href="#1-html-简述超链接target属性的取值和作用" class="headerlink" title="1.[[html]简述超链接target属性的取值和作用]"></a>1.[[html]简述超链接target属性的取值和作用]</h3><table><thead><tr><th>target</th><th>描述</th></tr></thead><tbody><tr><td>_blank</td><td>点击一次打开一个窗口</td></tr><tr><td>_self</td><td>始终打开自己的窗口</td></tr><tr><td>_new</td><td>点击多次，始终打开一个窗口</td></tr><tr><td>_parent</td><td>打开父框架的窗口。链接的框架不是嵌套的，等同_self</td></tr><tr><td>_top</td><td>打开自己的窗口，会删除所有框架</td></tr></tbody></table><h3 id="2-css-CSS3新增伪类有哪些并简要描述"><a href="#2-css-CSS3新增伪类有哪些并简要描述" class="headerlink" title="2.[[css]CSS3新增伪类有哪些并简要描述]"></a>2.[[css]CSS3新增伪类有哪些并简要描述]</h3><p>:first-child|:last-child|:first-of-type|:last-of-type|:only-child|:only-of-type</p><p>:enabled|:disabled|:checked</p><h3 id="3-js-写一个把字符串大小写切换的方法"><a href="#3-js-写一个把字符串大小写切换的方法" class="headerlink" title="3.[[js]写一个把字符串大小写切换的方法]"></a>3.[[js]写一个把字符串大小写切换的方法]</h3><p>全大写：str.toUpperCase()</p><p>全小写：str.toLowerCase()</p><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toggleLetter</span>(<span class="hljs-params">str</span>)</span>&#123;<span class="hljs-keyword">return</span> str.split(<span class="hljs-string">&#x27;&#x27;</span>).map(<span class="hljs-function"><span class="hljs-params">item</span>=&gt;</span>&#123;        <span class="hljs-keyword">if</span>(item===item.toUpperCase())&#123;            <span class="hljs-keyword">return</span> item.toLowerCase()        &#125;<span class="hljs-keyword">else</span>&#123;            <span class="hljs-keyword">return</span> item.toUpperCase()        &#125;    &#125;).join(<span class="hljs-string">&#x27;&#x27;</span>)&#125;toggleLetter(<span class="hljs-string">&#x27;AsDf&#x27;</span>)</code></pre>]]></content>
    
    
    <categories>
      
      <category>week</category>
      
    </categories>
    
    
    <tags>
      
      <tag>week</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>选择器</title>
    <link href="/2020/12/27/selector/"/>
    <url>/2020/12/27/selector/</url>
    
    <content type="html"><![CDATA[<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h4 id="1-选择器"><a href="#1-选择器" class="headerlink" title="1.选择器"></a>1.选择器</h4><p>1）通配符(*)</p><p>2）标签</p><p>3）id（唯一）&amp;类</p><h4 id="2-结构选择器"><a href="#2-结构选择器" class="headerlink" title="2.结构选择器"></a>2.结构选择器</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>结构选择器h1<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>结构选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>结构选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>结构选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>结构选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><p>1）所有后代</p><pre><code class="hljs less"><span class="hljs-comment">// main article 所有h2</span><span class="hljs-selector-tag">main</span> <span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">color</span>: lightblue;&#125;</code></pre><p>2）子元素</p><pre><code class="hljs less"><span class="hljs-comment">// main article子元素h2</span><span class="hljs-selector-tag">main</span> <span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">color</span>: lightblue;&#125;</code></pre><p>3）兄弟</p><pre><code class="hljs less"><span class="hljs-comment">// main article h1的兄弟元素h2</span><span class="hljs-selector-tag">main</span> <span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h1</span>~<span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">color</span>: lightblue;&#125;</code></pre><p>4）铁兄弟</p><pre><code class="hljs less"><span class="hljs-comment">// main article h1紧挨下面的兄弟h2</span><span class="hljs-selector-tag">main</span> <span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h1</span>+<span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">color</span>: lightblue;&#125;</code></pre><h4 id="3-属性选择器"><a href="#3-属性选择器" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h4><p>1）属性约束，选择属性[title]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>2）属性值约束，[title=’attribute’]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;attribute&quot;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title=&#x27;attribute&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>3）^以属性值开头，[title^=’attri’]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;attr&quot;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;attri&quot;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title^=&#x27;attri&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>4）$以属性值结尾，[title$=’ibute’]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;ibute&quot;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;bute&quot;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title$=&#x27;ibute&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>5）<em>属性包含相同属性值会被选中，[key</em>=value]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute1&#x27;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute12345&#x27;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title*=&#x27;attribute12345&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>6）<del>选择器值是一个单词会被选中，[key</del>=value]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute12&#x27;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute12  com&#x27;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title~=&#x27;attribute12&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><p>7）|以选择器值开头，并用‘-’连接下一个内容，[key|=value]</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute123&#x27;</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;attribute123-com&#x27;</span>&gt;</span>属性选择器2<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">h4</span><span class="hljs-selector-attr">[title|=&#x27;attribute123&#x27;]</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><h4 id="4-伪类"><a href="#4-伪类" class="headerlink" title="4.伪类"></a>4.伪类</h4><p>1）lv|ha|fha</p><p>:link|:visited|:hover|:active （初始|点击后|悬浮|点击中）</p><p>focus（聚焦）</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>伪类选择器<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">a</span>&#123;  <span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-attribute">a</span>:link&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;<span class="hljs-attribute">a</span>:visited&#123;  <span class="hljs-attribute">background</span>: lightgreen;&#125;<span class="hljs-attribute">a</span>:hover&#123;  <span class="hljs-attribute">background</span>: red;&#125;<span class="hljs-attribute">a</span>:active&#123;  <span class="hljs-attribute">background</span>: yellow;&#125;<span class="hljs-attribute">input</span>:focus&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;<span class="hljs-attribute">input</span>:hover&#123;  <span class="hljs-attribute">background</span>: red;&#125;<span class="hljs-attribute">input</span>:active&#123;  <span class="hljs-attribute">background</span>: yellow;&#125;</code></pre><p>2）:target|:empty|:root（目标伪类|空伪类|根伪类）</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#target&quot;</span>&gt;</span>目标<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;target&quot;</span>&gt;</span>锚点<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>非空<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">1000px</span>;&#125;<span class="hljs-comment">// 目标伪类</span><span class="hljs-attribute">div</span>:target&#123;  <span class="hljs-attribute">color</span>: blue;&#125;<span class="hljs-comment">// 空伪类，空li不显示</span><span class="hljs-attribute">li</span>:empty&#123;  <span class="hljs-attribute">display</span>: none;&#125;<span class="hljs-comment">// 根伪类:root等价于html</span><span class="hljs-selector-pseudo">:root</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;&#125;</code></pre><h4 id="5-伪类选择元素"><a href="#5-伪类选择元素" class="headerlink" title="5.伪类选择元素"></a>5.伪类选择元素</h4><p>空格：元素的后代</p><p>child要紧跟冒号前的元素，type不需要</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>首尾元素选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>首尾元素选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>首尾元素选择器h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><p>1）:first-child选择第一个元素</p><p>:last-child选择最后一个元素</p><hr><p>article所有后代第一个|最后一个元素</p><pre><code class="hljs less"><span class="hljs-attribute">article </span>:first-child&#123;    <span class="hljs-attribute">color</span>: red;&#125;</code></pre><pre><code class="hljs less"> <span class="hljs-attribute">article </span>:last-child&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article后代子元素第一个|最后一个</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-pseudo">:first-child</span>&#123;    <span class="hljs-attribute">color</span>: red;&#125;</code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-pseudo">:last-child</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article子元素是h2的第一个|最后一个元素</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:first-child</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:last-child</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article所有后代是h1的第一个元素</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:first-child</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article所有后代是h1，h1下所有后代的第一个元素</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h1</span> <span class="hljs-selector-pseudo">:first-child</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>2）:first-of-type选择第一个类型的元素</p><p>:last-of-type选择最后一个类型的元素</p><hr><p>article所有后代的是h2，第一个|最后一个出现的类型元素</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:first-of-type</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:last-of-type</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>3）唯一选择器:only-child</p><p>article所有后代唯一的子元素。aside-&gt;h2是唯一的孙元素，有唯一性。</p><p>h1和h2是平级关系，没唯一性。</p><pre><code class="hljs less"><span class="hljs-attribute">article </span>:only-child&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>4）only-of-type选择唯一元素类型</p><p>article子元素是h2的唯一类型</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:only-of-type</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><h4 id="6-元素编号选择"><a href="#6-元素编号选择" class="headerlink" title="6.元素编号选择"></a>6.元素编号选择</h4><p>1）:nth-child(n)选择第n个元素，n从1开始，选择紧跟冒号：之前的元素</p><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>元素编号<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>元素编号h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>             <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>元素编号h2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>         <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span>     <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><p>article所有后代元素下的第2个，aside这层只有一个，所以不被选中</p><pre><code class="hljs less"><span class="hljs-attribute">article </span>:nth-child(<span class="hljs-number">2</span>)&#123;    <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article所有子元素下紧跟article的第1个</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>article所有子元素h1下紧跟article的第1个</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>odd：奇数，even：偶数</p><p>列表li的索引从1开始，括号中计算的结果&gt;0，n&gt;=0</p><p>-n+2 n=2(结果0) n=1(1) n=0(2) 选中1、2</p><p>n+2 n=0(2)   n=1(3) n=2(4) 选中2之后</p><hr><p>:nth-child(n)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><p>选择li第1、2个</p><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(-n+2)</span>&#123;     <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>2）:nth-last-child(n)选择倒数第n个元素，</p><p>ul所有后代元素li，选择li倒数第1、2个</p><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-last-child(-n+2)</span>&#123;    <span class="hljs-attribute">color</span>:red;&#125;</code></pre><p>3）article所有后代元素是h2的倒数1、2个元素，包括孙元素</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>元素编号<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>元素编号.com<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>元素编号.com<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:nth-last-child(-n+2)</span>&#123;    <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>4）:nth-last-of-type(n)选择倒数第n个类型的元素</p><p>article子元素是h2，倒数第一个类型</p><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&gt;<span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:nth-last-of-type(1)</span>&#123;    <span class="hljs-attribute">color</span>:red;&#125;</code></pre><p>5）:not(n)排除选择器</p><p>ul所有后代元素为li，选择第1、2、3个元素，排除第3个，排除第一个</p><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(-n+3)</span><span class="hljs-selector-pseudo">:not(</span><span class="hljs-selector-pseudo">:nth-child(3))</span><span class="hljs-selector-pseudo">:not(</span><span class="hljs-selector-pseudo">:first-child)</span>&#123;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><h4 id="7-表单伪类"><a href="#7-表单伪类" class="headerlink" title="7.表单伪类"></a>7.表单伪类</h4><p>:disabled|:enabled|:required|:optional|:checked（禁用|可用|必填|非必填|选中）</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>禁用<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>可用<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">enabled</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>必填<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">required</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>非必填<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">optional</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;man&quot;</span> <span class="hljs-attr">checked</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;man&quot;</span>&gt;</span>man<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;woman&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;woman&quot;</span>&gt;</span>woman<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-attribute">input</span>:disabled&#123;    <span class="hljs-attribute">background</span>: lightblue;&#125;<span class="hljs-attribute">input</span>:enabled&#123;    <span class="hljs-attribute">background</span>: blue;&#125;<span class="hljs-attribute">input</span>:required&#123;    <span class="hljs-attribute">background</span>: green;&#125;<span class="hljs-selector-tag">span</span>&gt;<span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:optional</span>&#123;    <span class="hljs-attribute">background</span>: red;&#125;<span class="hljs-attribute">input</span>:checked+label&#123;    <span class="hljs-attribute">color</span>: gold;&#125;</code></pre><h4 id="8-文本伪类"><a href="#8-文本伪类" class="headerlink" title="8.文本伪类"></a>8.文本伪类</h4><p>1）文本</p><p>::first-letter选择文本第一个字</p><p>::first-line选择文本第一行</p><p>::after|::before选择元素后面|前面（可对添加的伪类元素修改）</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Praesentium, eos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>文本伪类<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">p</span>&#123;    <span class="hljs-attribute">display</span>: block;    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;&#125;<span class="hljs-attribute">p</span>::first-letter&#123;    <span class="hljs-attribute">color</span>: red;&#125;<span class="hljs-attribute">p</span>::first-line&#123;    <span class="hljs-attribute">color</span>: greenyellow;&#125;<span class="hljs-attribute">div</span>::after&#123;    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;123&#x27;</span>;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">left</span>: <span class="hljs-number">200px</span>;    <span class="hljs-attribute">top</span>: <span class="hljs-number">40px</span>;&#125;</code></pre><p>2）自定义输入框</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;    <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=&#x27;text&#x27;]</span>&#123;        <span class="hljs-attribute">border</span>:none;        <span class="hljs-attribute">outline</span>: none;    &#125;    <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=&#x27;text&#x27;]</span>+<span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">::after</span>&#123;        <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;🙂&#x27;</span>;        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;        <span class="hljs-attribute">color</span>:gray    &#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>week4</title>
    <link href="/2020/12/18/week/week4/"/>
    <url>/2020/12/18/week/week4/</url>
    
    <content type="html"><![CDATA[<h2 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h2><p>1.[[html]为什么HTML5只需要写<code>&lt;!DOCTYPE HTML&gt;</code>就可以？]</p><p>2.[[css]CSS选择器有哪些？哪些属性可以继承？]</p><p>3.[[js]写一个方法把下划线命名转成大驼峰命名]</p><h3 id="1-html-为什么HTML5只需要写-lt-DOCTYPE-HTML-gt-就可以？"><a href="#1-html-为什么HTML5只需要写-lt-DOCTYPE-HTML-gt-就可以？" class="headerlink" title="1.[[html]为什么HTML5只需要写&lt;!DOCTYPE HTML&gt;就可以？]"></a>1.[[html]为什么HTML5只需要写<code>&lt;!DOCTYPE HTML&gt;</code>就可以？]</h3><p>html5不基于标准通用标记语言（SGML），不用对DTD引用，需要DOCTYPE规范浏览器行为（按照什么类型运行）；</p><p>html4基于SGML，需要对DTD引用，才能知道文档类型（document type）HTML版本</p><h3 id="2-css-CSS选择器有哪些？哪些属性可以继承？"><a href="#2-css-CSS选择器有哪些？哪些属性可以继承？" class="headerlink" title="2.[[css]CSS选择器有哪些？哪些属性可以继承？]"></a>2.[[css]CSS选择器有哪些？哪些属性可以继承？]</h3><table><thead><tr><th>选择器</th><th></th></tr></thead><tbody><tr><td>标签、id、class</td><td></td></tr><tr><td>结构</td><td>1）后代（空格）<br />2）子元素（&gt;）<br />3）兄弟（~）<br />4）铁兄弟（+）</td></tr><tr><td>属性</td><td>1）[key]<br />2）[key=value]<br />3）[key^=value]以value开头<br />4）[key$=value]以value结尾<br />5）[key*=value]有value<br />6）[key~=value]value是一个单词<br />7）[key|=value]开头value，‘-’连接</td></tr><tr><td>伪类</td><td>1）:link初始值<br />2）:visited点击后<br />3）:hover悬浮<br />4）:acitve点击中<br />5）:focus聚焦<br />6）:target目标<br />7）:empty空<br />8）:root根<br /></td></tr><tr><td>伪类元素</td><td>1）:first-child|:last-child选择第一个|最后一个元素<br />2）:first-of-type|:last-of-type选择第一个|最后一个元素类型<br />3）:only-child唯一元素<br />4）:only-of-type唯一元素类型<br />5）:nth-child(n)第n个元素<br />6）:nth-last-child(n)最后第n个元素<br />7）:nth-last-of-type(n)最后第n个元素类型<br />8）:not(n)排除第n个元素<br /></td></tr><tr><td>表单伪类</td><td>1）:disabled禁用<br />2）:enabled可用<br />3）:required必填<br />4）:optional非必填<br />5）:checked选中</td></tr><tr><td>文本伪类</td><td>1）::first-letter选择文本第一个字<br />2）::first-line选择文本第一行<br />3）::after|::before选择元素后面|前面的元素</td></tr></tbody></table><table><thead><tr><th>可继承</th><th>不可继承</th></tr></thead><tbody><tr><td>font|color</td><td>margin|padding|border|width|height</td></tr></tbody></table><h3 id="3-js-写一个方法把下划线命名转成大驼峰命名"><a href="#3-js-写一个方法把下划线命名转成大驼峰命名" class="headerlink" title="3.[[js]写一个方法把下划线命名转成大驼峰命名]"></a>3.[[js]写一个方法把下划线命名转成大驼峰命名]</h3><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bigHumpFunc</span>(<span class="hljs-params">str</span>) </span>&#123;    <span class="hljs-comment">// str前没有‘_’,给str加上</span>    <span class="hljs-keyword">if</span> (str[<span class="hljs-number">0</span>] !== <span class="hljs-string">&quot;_&quot;</span>) str = <span class="hljs-string">&quot;_&quot;</span> + str;    <span class="hljs-keyword">let</span> arr = str.split(<span class="hljs-string">&quot;&quot;</span>);    arr.map(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;        <span class="hljs-comment">// 有‘_’，删除‘_’，删除后当前索引item转换大写</span>        <span class="hljs-keyword">if</span> (item === <span class="hljs-string">&quot;_&quot;</span>) &#123;            arr.splice(index, <span class="hljs-number">1</span>);            arr[index] = arr[index].toUpperCase();        &#125;    &#125;);    <span class="hljs-keyword">return</span> arr.join(<span class="hljs-string">&quot;&quot;</span>);&#125;<span class="hljs-keyword">let</span> hump = bigHumpFunc(<span class="hljs-string">&quot;_ad_bd_cd&quot;</span>);<span class="hljs-built_in">console</span>.log(hump);</code></pre><hr><pre><code class="hljs xquery"><span class="hljs-keyword">function</span> bigHumpFunc(str) &#123;    <span class="hljs-keyword">let</span> arr = str.split(<span class="hljs-string">&#x27;_&#x27;</span>).<span class="hljs-keyword">map</span>((<span class="hljs-type">item</span>,index)=&gt;(<span class="hljs-type">item</span>[<span class="hljs-number">0</span>]) &amp;&amp; <span class="hljs-type">item</span>[<span class="hljs-number">0</span>].toUpperCase()+<span class="hljs-type">item</span>.substr(<span class="hljs-number">1</span>))    <span class="hljs-keyword">return</span> arr.join(<span class="hljs-string">&#x27;&#x27;</span>)&#125;<span class="hljs-keyword">let</span> hump = bigHumpFunc(<span class="hljs-string">&quot;_ ad_bd_cd&quot;</span>);console.log(hump)</code></pre>]]></content>
    
    
    <categories>
      
      <category>week</category>
      
    </categories>
    
    
    <tags>
      
      <tag>week</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>背景与渐变</title>
    <link href="/2020/12/13/background/"/>
    <url>/2020/12/13/background/</url>
    
    <content type="html"><![CDATA[<h2 id="背景与渐变"><a href="#背景与渐变" class="headerlink" title="背景与渐变"></a>背景与渐变</h2><h4 id="1-背景裁切"><a href="#1-背景裁切" class="headerlink" title="1.背景裁切"></a>1.背景裁切</h4><p>背景显示到边框|padding|content</p><p>background-clip:border-box|padding-box|content-box;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>背景裁切<span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">background-color</span>: lightblue;  <span class="hljs-attribute">border</span>:<span class="hljs-number">5px</span> dashed;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-comment">// 背景内容显示在content区域</span>  <span class="hljs-attribute">background-clip</span>: content-box;&#125;</code></pre><h4 id="2-背景重复-amp-滚动"><a href="#2-背景重复-amp-滚动" class="headerlink" title="2.背景重复&amp;滚动"></a>2.背景重复&amp;滚动</h4><p>背景重复：    </p><p>background-repeat: no-repeat|repeat|repeat-x|repeat-y;</p><p>背景滚动：</p><p>background-attachment: fixed|scorll;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>背景重复&amp;滚动<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> dashed;  <span class="hljs-attribute">overflow</span>: auto;  &gt;<span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">3000px</span>;    <span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">&#x27;../background/pic.jpg&#x27;</span>);    <span class="hljs-comment">// 背景重复</span>    <span class="hljs-attribute">background-repeat</span>: no-repeat;    <span class="hljs-comment">// 背景滚动</span>    <span class="hljs-attribute">background-attachment</span>: fixed;  &#125;&#125;</code></pre><h4 id="3-多图定义组合语句"><a href="#3-多图定义组合语句" class="headerlink" title="3.多图定义组合语句"></a>3.多图定义组合语句</h4><p>background:rgba src repeat position/size;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> dashed;  <span class="hljs-comment">// 组合</span>  <span class="hljs-attribute">background</span>:lightblue url(<span class="hljs-string">&#x27;../background/pic.jpg&#x27;</span>) no-repeat center/contain;&#125;</code></pre><h4 id="4-盒子阴影"><a href="#4-盒子阴影" class="headerlink" title="4.盒子阴影"></a>4.盒子阴影</h4><p>box-shadow:h v blur 阴影大小 rgba;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> rgba(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>, .<span class="hljs-number">5</span>);  <span class="hljs-comment">// 盒子阴影</span>  <span class="hljs-attribute">background</span>:lightblue url(<span class="hljs-string">&#x27;../background/pic.jpg&#x27;</span>) no-repeat center/contain;&#125;</code></pre><h4 id="5-渐变"><a href="#5-渐变" class="headerlink" title="5.渐变"></a>5.渐变</h4><p>线性</p><p>linear-gradient(to 方向/角度,color1,color2……);</p><p>镜像</p><p>radial-gradient(at 位置/%/px,color1,color2……);</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-comment">// 线性</span>  <span class="hljs-attribute">background</span>: linear-gradient(to bottom right, red, yellow);&#125;<span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-comment">// 渐变</span>  <span class="hljs-attribute">background</span>: radial-gradient(at bottom,red,yellow,black);&#125;</code></pre><h4 id="6-标志位-amp-阈值"><a href="#6-标志位-amp-阈值" class="headerlink" title="6.标志位&amp;阈值"></a>6.标志位&amp;阈值</h4><p>标志位：不写默认为0，%/px</p><p>阈值：渐变开始的位置，%/px</p><p>线性</p><p>background: linear-gradient(to %/px|角度,color1 标志位, 阈值,color2 标志位……);</p><p>镜像</p><p>background: radial-gradient(at 位置/%/px,color1 标志位, 阈值,color2 标志位……);</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">background</span>: radial-gradient(at <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>,red,yellow <span class="hljs-number">30px</span>,black <span class="hljs-number">70%</span>,black <span class="hljs-number">100%</span>);&#125;</code></pre><h4 id="7-渐变重复"><a href="#7-渐变重复" class="headerlink" title="7.渐变重复"></a>7.渐变重复</h4><p>线性</p><p>background:repeating-linear-gradient(角度|to 方向%/px,</p><p>color1 标志位, 阈值,color2 标志位,……)</p><p>镜像</p><p>background:repeating-radial-gradient(at 位置%/px,</p><p>color1 标志位,阈值，color 标志位,……)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-comment">// 线性</span>  <span class="hljs-attribute">background</span>:repeating-linear-gradient(<span class="hljs-number">45deg</span>,red <span class="hljs-number">20px</span>,yellow <span class="hljs-number">40px</span>,black <span class="hljs-number">60px</span>);&#125;<span class="hljs-selector-tag">div</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-comment">// 镜像</span>  <span class="hljs-attribute">background</span>:repeating-radial-gradient(at <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>, red <span class="hljs-number">20px</span>,yellow <span class="hljs-number">40px</span>,black <span class="hljs-number">60px</span>);&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>弹性布局</title>
    <link href="/2020/12/13/flex/"/>
    <url>/2020/12/13/flex/</url>
    
    <content type="html"><![CDATA[<h2 id="弹性布局"><a href="#弹性布局" class="headerlink" title="弹性布局"></a>弹性布局</h2><h4 id="1-传统布局-amp-弹性布局"><a href="#1-传统布局-amp-弹性布局" class="headerlink" title="1.传统布局&amp;弹性布局"></a>1.传统布局&amp;弹性布局</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>main<span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>second<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>thrid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-comment">//传统布局</span>*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;&#125;<span class="hljs-selector-tag">footer</span>&#123;  <span class="hljs-attribute">position</span>: fixed;  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  &gt;<span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">background</span>: linear-gradient(to bottom,<span class="hljs-number">#f3f3f3</span>,<span class="hljs-number">#ddd</span>,<span class="hljs-number">#f3f3f3</span>);    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">33%</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;    <span class="hljs-attribute">text-align</span>: center;    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">3em</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(n+2)</span>&#123;    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#555</span>;  &#125;&#125;</code></pre><pre><code class="hljs less"><span class="hljs-comment">// 弹性布局</span>*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-direction</span>: column;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;&#125;<span class="hljs-selector-tag">footer</span>&#123;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">align-items</span>: center;  <span class="hljs-attribute">background</span>: linear-gradient(to bottom,<span class="hljs-number">#f3f3f3</span>, <span class="hljs-number">#ddd</span>, <span class="hljs-number">#f3f3f3</span>);  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;  &gt;<span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">3em</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">33%</span>;    <span class="hljs-attribute">text-align</span>: center;  &#125;  <span class="hljs-selector-pseudo">:nth-child(n+2)</span>&#123;    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#555</span>;  &#125;&#125;</code></pre><h4 id="2-弹性元素方向-amp-溢出换行"><a href="#2-弹性元素方向-amp-溢出换行" class="headerlink" title="2.弹性元素方向&amp;溢出换行"></a>2.弹性元素方向&amp;溢出换行</h4><p>元素方向：水平|水平翻转|垂直|垂直翻转</p><p>flex-direction:row|row-reverse|column|column-reverse;</p><hr><p>不加换行时，外部盒子w|h减小，内部元素自动被压缩，直到内部弹性元素的margin+border+padding+content&gt;外部包裹的盒子盒子被撑破。</p><p>换行|反向换行</p><p>flex-wrap:wrap|wrap-reverse;</p><hr><p>组合语句：flex-flow: flex-direction flex-wrap;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-comment">//flex-direction:column; 垂直排列反向换行</span>  <span class="hljs-comment">// 水平排列弹性元素&gt;外部盒子压缩，flex-wrap反向换行</span>  <span class="hljs-attribute">flex-wrap</span>: wrap-reverse;  <span class="hljs-comment">// *全选子元素</span>  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><h4 id="3-主轴-amp-交叉轴"><a href="#3-主轴-amp-交叉轴" class="headerlink" title="3.主轴&amp;交叉轴"></a>3.主轴&amp;交叉轴</h4><p>flex-direction设置后水平|垂直排列，主轴为水平|垂直，与主轴垂直的是交叉轴。</p><p>主轴排列</p><p>justify-content</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-comment">// 水平反向排列，主轴对齐方式也要反向</span>  <span class="hljs-attribute">flex-direction</span>: row-reverse;  <span class="hljs-attribute">justify-content</span>: flex-end;  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><p>交叉轴排列</p><p>align-items</p><p>stretch;拉伸不设置弹性元素在交叉轴上的尺寸，否则不能拉伸。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-comment">// y主轴</span>  <span class="hljs-attribute">flex-direction</span>: column;  <span class="hljs-comment">// 交叉轴属性align-items，向交叉轴拉伸，不设置弹性元素在交叉轴上的尺寸，width</span>  <span class="hljs-attribute">align-items</span>:stretch;  <span class="hljs-comment">// x主轴，设置交叉轴上的拉伸，不设置弹性元素在交叉轴上的尺寸，height</span>  <span class="hljs-comment">// align-items: stretch;</span>  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-comment">// width: 100px;</span>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><h4 id="4-多行交叉轴"><a href="#4-多行交叉轴" class="headerlink" title="4.多行交叉轴"></a>4.多行交叉轴</h4><p>多行元素在交叉轴上的排列</p><p>align-content:包含主轴交叉轴的属性；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-wrap</span>: wrap;  <span class="hljs-attribute">align-content</span>: space-around;  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><h4 id="5-单个元素交叉轴"><a href="#5-单个元素交叉轴" class="headerlink" title="5.单个元素交叉轴"></a>5.单个元素交叉轴</h4><p>单个元素在交叉轴的控制</p><p>align-self:center|flex-end|flex-start</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-comment">// 弹性元素排列方向翻转，交叉轴y排列到end</span>  <span class="hljs-attribute">flex-direction</span>: row-reverse;  <span class="hljs-attribute">align-items</span>: flex-end;  <span class="hljs-comment">// article第二个元素居中</span>  <span class="hljs-selector-pseudo">:nth-child(2)</span>&#123;    <span class="hljs-attribute">align-self</span>:center  &#125;  <span class="hljs-comment">// article第三个元素排列到start</span>  <span class="hljs-selector-pseudo">:nth-child(3)</span>&#123;    <span class="hljs-attribute">align-self</span>: flex-start;  &#125;  *&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;  &#125;&#125;</code></pre><h4 id="6-弹性元素"><a href="#6-弹性元素" class="headerlink" title="6.弹性元素"></a>6.弹性元素</h4><h5 id="1）剩余空间分配"><a href="#1）剩余空间分配" class="headerlink" title="1）剩余空间分配"></a>1）剩余空间分配</h5><p>剩余空间分配</p><p>flex-grow:num;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">display</span>: flex;  * &#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;    <span class="hljs-comment">// 元素总宽高包含padding+border</span>    <span class="hljs-attribute">box-sizing</span>: border-box;    <span class="hljs-comment">// 背景元素区域从content开始保留，现有background再有background-clip</span>    <span class="hljs-attribute">background-clip</span>: content-box;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  &#125;  <span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;    <span class="hljs-comment">// 第1个元素占剩余空间的0/0+1+2</span>    <span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">0</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(2)</span> &#123;    <span class="hljs-comment">// 第2个元素占剩余空间的1/0+1+2</span>    <span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">1</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(3)</span> &#123;    <span class="hljs-comment">// 第3个元素占剩余空间的2/0+1+2</span>    <span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">2</span>;  &#125;&#125;</code></pre><p>页面结构</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-direction</span>: column;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;&#125;<span class="hljs-selector-tag">header</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">background</span>: yellow;  <span class="hljs-comment">// 上下定宽，中间自适应</span>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;&#125;<span class="hljs-selector-tag">footer</span>&#123;  <span class="hljs-attribute">background</span>: lightgreen;  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;</code></pre><h5 id="2）超出空间缩小"><a href="#2）超出空间缩小" class="headerlink" title="2）超出空间缩小"></a>2）超出空间缩小</h5><p>超出弹性盒子缩小比例</p><p>flex-shrink:num;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;  <span class="hljs-attribute">display</span>: flex;  * &#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;    <span class="hljs-comment">// 元素总宽高包含padding+border</span>    <span class="hljs-attribute">box-sizing</span>: border-box;    <span class="hljs-comment">// 背景元素区域从content开始保留</span>    <span class="hljs-attribute">background-clip</span>: content-box;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  &#125;  <span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;    <span class="hljs-comment">// 第1个元素缩小超出空间的100-(200-100*3)*(0/0+1+3)</span>    <span class="hljs-attribute">flex-shrink</span>: <span class="hljs-number">0</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(2)</span> &#123;    <span class="hljs-comment">// 第2个元素缩小超出空间的100-(200-100*3)*(1/0+1+3)</span>    <span class="hljs-attribute">flex-shrink</span>: <span class="hljs-number">1</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(3)</span> &#123;    <span class="hljs-comment">// 第3个元素缩小超出空间的100-(200-100*3)*(3/0+1+3)</span>    <span class="hljs-attribute">flex-shrink</span>: <span class="hljs-number">3</span>;  &#125;&#125;</code></pre><h5 id="3）组合定义"><a href="#3）组合定义" class="headerlink" title="3）组合定义"></a>3）组合定义</h5><p>默认flex:0 1 auto;</p><p>flex-grow:0;</p><p>flex-shrink:1;</p><p>权重：min|max&gt;flex-basis&gt;width|height</p><p>flex-basis:auto;</p><h4 id="7-弹性元素排序"><a href="#7-弹性元素排序" class="headerlink" title="7.弹性元素排序"></a>7.弹性元素排序</h4><p>从上到下order减小</p><p>order:num;</p><h4 id="8-定位元素在弹性布局"><a href="#8-定位元素在弹性布局" class="headerlink" title="8.定位元素在弹性布局"></a>8.定位元素在弹性布局</h4><p>绝对定位丢失空间位，弹性布局会把空间位计算在内</p><p>position: absolute;</p><p>相对定位有空间位，会影响后面的元素</p><p>position: relative;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-direction</span>: column;  <span class="hljs-attribute">justify-content</span>: space-between;  <span class="hljs-attribute">position</span>: relative;  * &#123;    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">background-clip</span>: content-box;    <span class="hljs-attribute">box-sizing</span>: border-box;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  &#125;  <span class="hljs-selector-pseudo">:nth-child(1)</span>&#123;    <span class="hljs-comment">// 绝对定位丢失空间位，弹性布局会把空间位计算在内，</span>    <span class="hljs-comment">// position: absolute;</span>    <span class="hljs-comment">// 相对定位有空间位，会影响后面的元素</span>    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">background</span>: lightgreen;    <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;  &#125;&#125;</code></pre><h4 id="9-弹性布局通用菜单"><a href="#9-弹性布局通用菜单" class="headerlink" title="9.弹性布局通用菜单"></a>9.弹性布局通用菜单</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>main<span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>second<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>b<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>thrid<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>b<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>c<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less">*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">flex-direction</span>: column;&#125;<span class="hljs-selector-tag">main</span> &#123;  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#f3f3f3</span>;&#125;<span class="hljs-selector-tag">footer</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-attribute">justify-content</span>: space-around;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#eee</span>;  <span class="hljs-selector-tag">section</span>&#123;    <span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;    <span class="hljs-attribute">display</span>: flex;    <span class="hljs-comment">// h4 ul 列翻转</span>    <span class="hljs-attribute">flex-direction</span>: column-reverse;    <span class="hljs-comment">// flex可以用在文本上</span>    <span class="hljs-selector-tag">h4</span>&#123;      <span class="hljs-comment">// 不放、缩，basis:50px</span>      <span class="hljs-attribute">flex</span>:<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">50px</span>;      <span class="hljs-attribute">display</span>: flex;      <span class="hljs-attribute">align-items</span>: center;      <span class="hljs-attribute">justify-content</span>: center;    &#125;    <span class="hljs-selector-tag">ul</span>&#123;      <span class="hljs-attribute">list-style</span>: none;      <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;      <span class="hljs-attribute">display</span>: flex;      <span class="hljs-attribute">flex-direction</span>: column;      <span class="hljs-attribute">align-items</span>:center;      <span class="hljs-comment">// 不放大、收缩，basis:50px</span>      <span class="hljs-attribute">flex</span>:<span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">50px</span>;    &#125;  &#125;  <span class="hljs-comment">// 去掉最右边的边线</span>  <span class="hljs-attribute">section</span>:last-child&#123;    <span class="hljs-attribute">border-right</span>: none;  &#125;&#125;</code></pre><h4 id="10-导航菜单flex"><a href="#10-导航菜单flex" class="headerlink" title="10.导航菜单flex"></a>10.导航菜单flex</h4><p>margin-auto:自动撑满空间</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>home<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>video<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>img<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>user<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">nav</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">display</span>: flex;  <span class="hljs-selector-tag">ul</span>&#123;    <span class="hljs-attribute">list-style</span>: none;    <span class="hljs-attribute">display</span>: flex;    <span class="hljs-attribute">align-items</span>: center;  &#125;  <span class="hljs-comment">// 第一个ul margin-right: auto;地洞撑满空间</span>  <span class="hljs-attribute">ul</span>:nth-child(<span class="hljs-number">1</span>)&#123;    <span class="hljs-attribute">margin-right</span>: auto;  &#125;  <span class="hljs-attribute">ul</span>:nth-child(<span class="hljs-number">1</span>)&gt;li&#123;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;  &#125;  <span class="hljs-attribute">ul</span>:nth-child(<span class="hljs-number">2</span>)&gt;li&#123;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">display</span>: flex;    <span class="hljs-attribute">justify-content</span>: center;    <span class="hljs-attribute">align-items</span>: center;  &#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>定位布局</title>
    <link href="/2020/12/06/position/"/>
    <url>/2020/12/06/position/</url>
    
    <content type="html"><![CDATA[<h2 id="定位布局"><a href="#定位布局" class="headerlink" title="定位布局"></a>定位布局</h2><h3 id="1-absolute参照元素："><a href="#1-absolute参照元素：" class="headerlink" title="1.absolute参照元素："></a>1.absolute参照元素：</h3><p>父元素有定位属性absolute|relative|fixed|…，子元素相对于父元素定位，如果父元素没有定位，一直向上找，找不到时对于整个页面；</p><h3 id="2-定位设置尺寸："><a href="#2-定位设置尺寸：" class="headerlink" title="2.定位设置尺寸："></a>2.定位设置尺寸：</h3><p>没设置尺寸时定位的top|bottom|left|right会影响尺寸;</p><h3 id="3-滚动对元素定位影响"><a href="#3-滚动对元素定位影响" class="headerlink" title="3.滚动对元素定位影响"></a>3.滚动对元素定位影响</h3><p>内容在容器里发生定位，有滚动条时内容随滚动条滚动，不会相对父元素始终定位</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid yellowgreen;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">position</span>: relative;  <span class="hljs-attribute">overflow</span>: scroll;  <span class="hljs-selector-tag">section</span>&#123;    <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;    <span class="hljs-selector-tag">div</span> &#123;      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">background</span>: yellowgreen;      <span class="hljs-attribute">position</span>: absolute;      <span class="hljs-comment">// 绝对定位居中，父元素有定位属性，相对于父元素定位；</span>      <span class="hljs-comment">// 父元素没有定位，向上层找有定位属性，相对于该上层元素定位，</span>      <span class="hljs-comment">// 没有相对于整个页面</span>      <span class="hljs-attribute">top</span>:<span class="hljs-number">50%</span>;      <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;      <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">50px</span>;      <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">50px</span>;    &#125;  &#125;&#125;</code></pre><h3 id="4-图标定位"><a href="#4-图标定位" class="headerlink" title="4.图标定位"></a>4.图标定位</h3><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>hot<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> &#123;  <span class="hljs-attribute">list-style</span>: none;  <span class="hljs-selector-tag">li</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> solid lightgreen;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">box-sizing</span>: content-box;    <span class="hljs-selector-tag">span</span> &#123;      <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;      <span class="hljs-attribute">background</span>: red;      <span class="hljs-attribute">display</span>: inline-block;      <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;      <span class="hljs-attribute">text-align</span>: center;      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">26px</span>;      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;      <span class="hljs-attribute">position</span>: absolute;      <span class="hljs-attribute">top</span>: -<span class="hljs-number">20px</span>;      <span class="hljs-attribute">left</span>: -<span class="hljs-number">20px</span>;    &#125;  &#125;&#125;</code></pre><h3 id="5-定位层级"><a href="#5-定位层级" class="headerlink" title="5.定位层级"></a>5.定位层级</h3><p>a.有定位属性时，鼠标移入改变元素层级</p><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>hot<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;first&quot;</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">ul</span> &#123;  <span class="hljs-attribute">list-style</span>: none;  <span class="hljs-selector-tag">li</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> solid lightgreen;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">box-sizing</span>: content-box;    <span class="hljs-attribute">cursor</span>: pointer;    <span class="hljs-selector-tag">span</span> &#123;      <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;      <span class="hljs-attribute">background</span>: red;      <span class="hljs-attribute">display</span>: inline-block;      <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;      <span class="hljs-attribute">text-align</span>: center;      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">26px</span>;      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;      <span class="hljs-attribute">position</span>: absolute;      <span class="hljs-attribute">top</span>: -<span class="hljs-number">20px</span>;      <span class="hljs-attribute">left</span>: -<span class="hljs-number">20px</span>;      <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;    &#125;    <span class="hljs-selector-class">.first</span>&#123;      <span class="hljs-attribute">background</span>:red;      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">position</span>: absolute;      <span class="hljs-attribute">color</span>:<span class="hljs-number">#fff</span>;      <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;    &#125;  &#125;  <span class="hljs-comment">// 鼠标移入li&gt;.first层级改变</span>  <span class="hljs-attribute">li</span>:hover .first&#123;    <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;  &#125;&#125;</code></pre><p>b.购物车</p><p>鼠标移入展开，移除收缩</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span>shop<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>showShop<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">position</span>: relative;  &gt; <span class="hljs-selector-tag">div</span> &#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;  &#125;  <span class="hljs-selector-class">.top</span> &#123;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">cursor</span>: pointer;    <span class="hljs-comment">// 设置定位属性，增加top层级，让top层级覆盖bottom，默认层级为0</span>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  &#125;  <span class="hljs-comment">// 默认bottom隐藏，top有border-bottom</span>  <span class="hljs-selector-class">.bottom</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;    <span class="hljs-comment">// 绝对定位，right：0，bottom靠右，相对父级article定位</span>    <span class="hljs-attribute">position</span>: absolute;    <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">top</span>:<span class="hljs-number">50px</span>;    <span class="hljs-attribute">display</span>: none;  &#125;&#125;<span class="hljs-comment">// 鼠标移入article top的border-bottom消失，bottom出现</span><span class="hljs-attribute">article</span>:hover .top &#123;  <span class="hljs-attribute">border-bottom</span>: none;&#125;<span class="hljs-attribute">article</span>:hover .bottom &#123;  <span class="hljs-attribute">display</span>: block;&#125;</code></pre><h3 id="6-粘性定位sticky"><a href="#6-粘性定位sticky" class="headerlink" title="6.粘性定位sticky"></a>6.粘性定位sticky</h3><p>a.sticky的h2在同级，新来的元素会叠加之前的粘性元素；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>title1<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>title2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><p>b.sticky的h2在不同级，新来的元素会把之前的粘性元素顶走；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>title1<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>title2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">article</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">overflow</span>: auto;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">position</span>: relative;  <span class="hljs-selector-tag">p</span>&#123;    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;  &#125;&#125;<span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">section</span><span class="hljs-selector-pseudo">:nth-of-type(even)</span> <span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">background</span>: yellowgreen;&#125;<span class="hljs-selector-tag">article</span> <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">h2</span>&#123;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-comment">// 粘性定位 top：0定位到顶部</span>  <span class="hljs-attribute">position</span>: sticky;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;  <span class="hljs-attribute">top</span>:<span class="hljs-number">0</span>;&#125;</code></pre><h3 id="7-固定定位fixed"><a href="#7-固定定位fixed" class="headerlink" title="7.固定定位fixed"></a>7.固定定位fixed</h3><p>a.两个元素都有定位，后出现的定位权重高，层级大于前面的定位元素，能滚动时会覆盖前面的元素</p><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- main在header后，两个元素都有定位属性 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">header</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-comment">// 固定定位fixed，top:0</span>  <span class="hljs-attribute">position</span>: fixed;  <span class="hljs-attribute">top</span>:<span class="hljs-number">0</span>;  <span class="hljs-attribute">background</span>: lightgreen;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-attribute">position</span>: relative;  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">120px</span>;&#125;</code></pre><p>b.后面的元素没有定位属性，前面的元素能够固定</p><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- main在header后，两个元素都有定位属性 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-tag">header</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">position</span>: fixed;  <span class="hljs-attribute">top</span>:<span class="hljs-number">0</span>;  <span class="hljs-attribute">background</span>: lightgreen;&#125;<span class="hljs-selector-tag">main</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-comment">// position: relative;</span>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">120px</span>;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>week3</title>
    <link href="/2020/12/06/week/week3/"/>
    <url>/2020/12/06/week/week3/</url>
    
    <content type="html"><![CDATA[<h2 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h2><p>1.[[html]HTML全局属性(global attribute)有哪些（包含H5）？]</p><p>2.[[css]在页面上隐藏元素的方法有哪些？]</p><p>3.[[js]去除字符串中最后一个指定的字符]</p><h3 id="1-html-HTML全局属性-global-attribute-有哪些（包含H5）？"><a href="#1-html-HTML全局属性-global-attribute-有哪些（包含H5）？" class="headerlink" title="1.[[html]HTML全局属性(global attribute)有哪些（包含H5）？]"></a>1.[[html]HTML全局属性(global attribute)有哪些（包含H5）？]</h3><table><thead><tr><th>全局属性</th><th></th></tr></thead><tbody><tr><td>class</td><td>类</td></tr><tr><td>id</td><td>id，唯一</td></tr><tr><td>title</td><td>显示tooltip</td></tr><tr><td>lang</td><td>浏览器语言识别</td></tr><tr><td>style</td><td>css</td></tr><tr><td>accesskey</td><td>快捷键alt+‘ ’ （href=‘//’当前浏览器用http|https协议，自动加载相应协议脚本）<code>&lt;a href=&#39;//baidu.com&#39; accesskey=&#39;c&#39;&gt;baidu&lt;/a&gt;</code></td></tr><tr><td>hidden</td><td>元素隐藏 <code>&lt;div hidden&gt;hidden&lt;/div&gt;</code></td></tr><tr><td>draggable</td><td>元素拖动 draggable=’false|true|auto’</td></tr><tr><td>dropzone</td><td>在元素上拖动数据是否拷贝|移动|链接指向（大部分浏览器不支持）dropzone=‘copy|move|link‘</td></tr><tr><td>dir</td><td>文本方向从左到右|从右到左 dir=’ltr|rtl’</td></tr><tr><td>translate</td><td>是否翻译文本（大部分浏览器不支持） translate=’yes|no‘</td></tr><tr><td>contenteditable</td><td>元素是否可编辑contenteditable=’false|true‘</td></tr><tr><td>data-*</td><td>自定义属性str ，嵌入自定义数据</td></tr><tr><td>spellcheck</td><td>是否对元素语法检查</td></tr><tr><td>contextmenu</td><td>右键点击元素出现上下文菜单（只有火狐支持）</td></tr><tr><td>tabindex</td><td>tab控制导航次序</td></tr></tbody></table><h3 id="2-css-在页面上隐藏元素的方法有哪些？"><a href="#2-css-在页面上隐藏元素的方法有哪些？" class="headerlink" title="2.[[css]在页面上隐藏元素的方法有哪些？]"></a>2.[[css]在页面上隐藏元素的方法有哪些？]</h3><p>1.opacity（css）</p><p>opacity:0;</p><p>2.display（css）</p><p>display:none|block;</p><p>3.z-index（css）</p><p>4.transform（css）</p><p>缩放</p><p>transform:scale(0)</p><p>5.visibility:hidden|visible;</p><p>6.hidden（html）</p><h3 id="3-js-去除字符串中最后一个指定的字符"><a href="#3-js-去除字符串中最后一个指定的字符" class="headerlink" title="3.[[js]去除字符串中最后一个指定的字符]"></a>3.[[js]去除字符串中最后一个指定的字符]</h3><p>substr：str.substr(start,length);</p><p>1）截取str，不传参数，返回全部。不改变原始str；</p><p>2）省略stop，截取从开始到结尾；</p><p>3）start可为负数， -1：最后一个。length&lt;0，返回空；</p><hr><p>substring：str.substring(start,end);</p><p>1）截取str，不传参数，返回全部。不改变原始str；</p><p>2）省略stop，截取从开始到结尾；</p><p>3）如果start、end&lt;0，把值转换成0;</p><p>4）start&gt;end时，调换start和end的位置；</p><hr><p>slice：str.slice(start,end);</p><p>1）截取str/arr，不传参数，返回全部。不改变原始str；</p><p>2）省略stop，截取从开始到结尾；</p><p>3）start、end可为负数， -1：最后一个；</p><p>4）start&gt;end时，返回空；</p><p>end&lt;0|start&lt;0时，newend=length-end|newstart=length-start；</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> s=<span class="hljs-string">&#x27;123456&#x27;</span>;s.substr(<span class="hljs-number">0</span>,s.length-<span class="hljs-number">1</span>);s.substring(<span class="hljs-number">0</span>,s.length-<span class="hljs-number">1</span>);s.slice(<span class="hljs-number">0</span>,str.length-<span class="hljs-number">1</span>);</code></pre>]]></content>
    
    
    <categories>
      
      <category>week</category>
      
    </categories>
    
    
    <tags>
      
      <tag>week</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>week2</title>
    <link href="/2020/12/06/week/week2/"/>
    <url>/2020/12/06/week/week2/</url>
    
    <content type="html"><![CDATA[<h2 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h2><p>1.[[html]html的元素有哪些（包含H5）？]</p><p>2.[[css]CSS3有哪些新增的特性？]</p><p>3.[[js]写一个方法去掉字符串中的空格]</p><h3 id="1-html-html的元素有哪些（包含H5）？"><a href="#1-html-html的元素有哪些（包含H5）？" class="headerlink" title="1.[[html]html的元素有哪些（包含H5）？]"></a>1.[[html]html的元素有哪些（包含H5）？]</h3><p>行内：a|span|em|label|br</p><p>1）不可设置width|height|padding|margin；</p><p>2）和其他元素一行排列；</p><p>3）自身有高度</p><p>块：div|h*|p|form|table|ul|li</p><p>1）可设置width|height|padding|margin;</p><p>2）独占一行；</p><p>3）高度默认继承父元素</p><p>行块：input|img</p><p>1）可设置width|heigth|padding|margin;</p><p>2）独占一行；</p><p>3）display:inline-block;|float|position:absolute|fixed可改变为行块；</p><p>H5：header|footer|main|article|aside|nav|video|audio|canvas|mark|time|details|meter</p><h3 id="2-css-CSS3有哪些新增的特性？"><a href="#2-css-CSS3有哪些新增的特性？" class="headerlink" title="2.[[css]CSS3有哪些新增的特性？]"></a>2.[[css]CSS3有哪些新增的特性？]</h3><p>1.css选择器</p><p>last-child 父元素最后一个子元素</p><p>nth-child(n) 父元素的第n个子元素</p><p>nth-last-child(n) 父元素倒数第n个子元素</p><p>2.圆角</p><p>border-radius:num|%;</p><p>3.阴影</p><p>box-shadow: h v 模糊距离 阴影大小 rgba;</p><p>4.多列布局</p><p>column-count:num;</p><p>column-gap:num;</p><p>column-rule: 列宽 列中间样式 列中间颜色</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mul-col&quot;</span>&gt;</span>      当我年轻的时候，我梦想改变这个世界；当我成熟以后，我发现我不能够改变这个世界，我将目光缩短了些，决定只改变我的国家；当我进入暮年以后，我发现我不能够改变我们的国家，我的最后愿望仅仅是改变一下我的家庭，但是，这也不可能。当我现在躺在床上，行将就木时，我突然意识到：如果一开始我仅仅去改变我自己，然后，我可能改变我的家庭；在家人的帮助和鼓励下，我可能为国家做一些事情；然后，谁知道呢?我甚至可能改变这个世界。<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.mul-col</span>&#123;  <span class="hljs-attribute">column-count</span>:<span class="hljs-number">3</span>;  <span class="hljs-attribute">column-gap</span>:<span class="hljs-number">10px</span>;  <span class="hljs-attribute">column-rule</span>:<span class="hljs-number">1px</span> solid red;&#125;</code></pre><p>5.@font-face</p><p>加载没有安装的字体</p><pre><code class="hljs less"><span class="hljs-keyword">@font-face</span>&#123;  <span class="hljs-attribute">font-family</span>: myfont;  <span class="hljs-attribute">src</span>:url(<span class="hljs-string">&#x27;../text/ADOBEGOTHICSTD-BOLD.OTF&#x27;</span>)&#125;<span class="hljs-selector-class">.mul-col</span>&#123;  <span class="hljs-attribute">column-count</span>:<span class="hljs-number">3</span>;  <span class="hljs-attribute">column-gap</span>:<span class="hljs-number">10px</span>;  <span class="hljs-attribute">column-rule</span>:<span class="hljs-number">1px</span> solid red;  <span class="hljs-attribute">font-family</span>: myfont;&#125;</code></pre><p>6.flex</p><p>7.渐变</p><p>background:linear-gradient(渐变方向,color1,color2,…….)</p><h3 id="3-js-写一个方法去掉字符串中的空格"><a href="#3-js-写一个方法去掉字符串中的空格" class="headerlink" title="3.[[js]写一个方法去掉字符串中的空格]"></a>3.[[js]写一个方法去掉字符串中的空格]</h3><p>1）正则</p><pre><code class="hljs JS"><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;    f d   sf s  &quot;</span><span class="hljs-comment">// ig:忽略大小写&amp;全局匹配</span><span class="hljs-comment">// *:表达式匹配&gt;=0次</span><span class="hljs-comment">// $:匹配行尾</span><span class="hljs-comment">// ^:匹配行首</span><span class="hljs-comment">// |:或</span><span class="hljs-comment">// 去除所有空格</span>s.replace(<span class="hljs-regexp">/\s/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-comment">// 去除左右两边所有空格</span>s.replace(<span class="hljs-regexp">/^\s*|\s*$/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-comment">// 去除左边空格</span>s.replace(<span class="hljs-regexp">/^\s*/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-comment">// 去除右边空格</span>s.replace(<span class="hljs-regexp">/\s*$/ig</span>,<span class="hljs-string">&#x27;&#x27;</span>)</code></pre><p>2）trim</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;    f d   sf s  &quot;</span><span class="hljs-comment">// 去除左右两边所有空格</span>s.trim()<span class="hljs-comment">// 去除左边空格</span>s.trimLeft()<span class="hljs-comment">// 去除右边空格</span>s.trimRight()</code></pre><p>3）split</p><pre><code class="hljs js"><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;    f d   sf s  &quot;</span><span class="hljs-comment">// 去除所有空格</span>s.split(<span class="hljs-string">&#x27; &#x27;</span>).join(<span class="hljs-string">&#x27;&#x27;</span>)</code></pre>]]></content>
    
    
    <categories>
      
      <category>week</category>
      
    </categories>
    
    
    <tags>
      
      <tag>week</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浮动布局</title>
    <link href="/2020/11/30/float/"/>
    <url>/2020/11/30/float/</url>
    
    <content type="html"><![CDATA[<h2 id="浮动布局"><a href="#浮动布局" class="headerlink" title="浮动布局"></a>浮动布局</h2><h3 id="1-文档流与浮动空间的消失"><a href="#1-文档流与浮动空间的消失" class="headerlink" title="1.文档流与浮动空间的消失"></a>1.文档流与浮动空间的消失</h3><p>块级元素：浮动会脱离文档流，从左向右排列，不占空间位，影响后面的元素，后面的元素不浮动会补充到浮动的位置上。</p><p>行级元素：浮动会变为行级块，浮动到相应位置，依然占据空间位，能设置宽高。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box1&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box2&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;&#125;<span class="hljs-selector-class">.box1</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;  <span class="hljs-attribute">float</span>: left;&#125;<span class="hljs-selector-class">.box2</span>&#123;  <span class="hljs-attribute">background</span>: blue;&#125;</code></pre><h3 id="2-左右浮动"><a href="#2-左右浮动" class="headerlink" title="2.左右浮动"></a>2.左右浮动</h3><p>浮动参考父盒子，在内边距内padding内。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  &#125;  <span class="hljs-selector-class">.box1</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;    <span class="hljs-attribute">float</span>: left;  &#125;  <span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">background</span>: blue;    <span class="hljs-attribute">float</span>: right;  &#125;&#125;</code></pre><h3 id="3-行级元素浮动后转换为行级块"><a href="#3-行级元素浮动后转换为行级块" class="headerlink" title="3.行级元素浮动后转换为行级块"></a>3.行级元素浮动后转换为行级块</h3><p>行级元素没有宽高，在一行。浮动后转换为块级元素，有宽高</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span>box1<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span>box2<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    &#125;    <span class="hljs-selector-class">.box1</span>&#123;        <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;        <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-class">.box2</span>&#123;        <span class="hljs-attribute">background</span>: blue;        <span class="hljs-comment">// float: right;</span>  &#125;&#125;</code></pre><h3 id="4-清除浮动（clear）"><a href="#4-清除浮动（clear）" class="headerlink" title="4.清除浮动（clear）"></a>4.清除浮动（clear）</h3><p>清除不占空间位对后面元素的影响;</p><h6 id="a-空的块级元素清除浮动后能撑开父元素"><a href="#a-空的块级元素清除浮动后能撑开父元素" class="headerlink" title="a.空的块级元素清除浮动后能撑开父元素"></a>a.空的块级元素清除浮动后能撑开父元素</h6><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span>box1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span>box2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box3&quot;</span>&gt;</span>box3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  &#125;  <span class="hljs-selector-class">.box1</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;    <span class="hljs-attribute">float</span>: left;  &#125;  <span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">background</span>: blue;    <span class="hljs-attribute">float</span>: right;  &#125;  <span class="hljs-selector-class">.box3</span>&#123;    <span class="hljs-attribute">clear</span>: both;  &#125;&#125;</code></pre><h6 id="b-伪元素清除浮动，在父元素后面增加伪元素，通过清除一个空的伪元素并把伪元素转换成块级元素来撑开父元素；"><a href="#b-伪元素清除浮动，在父元素后面增加伪元素，通过清除一个空的伪元素并把伪元素转换成块级元素来撑开父元素；" class="headerlink" title="b.伪元素清除浮动，在父元素后面增加伪元素，通过清除一个空的伪元素并把伪元素转换成块级元素来撑开父元素；"></a>b.伪元素清除浮动，在父元素后面增加伪元素，通过清除一个空的伪元素并把伪元素转换成块级元素来撑开父元素；</h6><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span>box1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span>box2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  &#125;  <span class="hljs-selector-class">.box1</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;    <span class="hljs-attribute">float</span>: left;  &#125;  <span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">background</span>: blue;    <span class="hljs-attribute">float</span>: right;  &#125;&#125;<span class="hljs-selector-class">.main</span><span class="hljs-selector-pseudo">::after</span>&#123;  <span class="hljs-attribute">content</span>:<span class="hljs-string">&#x27;&#x27;</span>;  <span class="hljs-attribute">clear</span>: both;  <span class="hljs-attribute">display</span>: block;&#125;</code></pre><h6 id="c-BFC清除浮动overflow-hidden"><a href="#c-BFC清除浮动overflow-hidden" class="headerlink" title="c.BFC清除浮动overflow:hidden;"></a>c.BFC清除浮动overflow:hidden;</h6><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span>&gt;</span>box1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span>box2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.box1</span>,<span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  &#125;  <span class="hljs-selector-class">.box1</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;    <span class="hljs-attribute">float</span>: left;  &#125;  <span class="hljs-selector-class">.box2</span>&#123;    <span class="hljs-attribute">background</span>: blue;    <span class="hljs-attribute">float</span>: right;  &#125;&#125;</code></pre><h3 id="5-块结构布局"><a href="#5-块结构布局" class="headerlink" title="5.块结构布局"></a>5.块结构布局</h3><h6 id="a-布局1"><a href="#a-布局1" class="headerlink" title="a.布局1"></a>a.布局1</h6><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>          <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <span class="hljs-attribute">box-sizing</span>: border-box;  <span class="hljs-selector-class">.box</span>&#123;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;    <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;    <span class="hljs-attribute">overflow</span>: hidden;    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">10px</span>  &#125;  <span class="hljs-selector-class">.top</span>&#123;    <span class="hljs-selector-class">.box</span>;    <span class="hljs-selector-class">.topItem</span>&#123;      <span class="hljs-attribute">background</span>: yellow;      <span class="hljs-attribute">width</span>: <span class="hljs-number">550px</span>;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;     &#125;    <span class="hljs-selector-class">.left</span>&#123;      <span class="hljs-selector-class">.topItem</span>;      <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-class">.right</span>&#123;      <span class="hljs-selector-class">.topItem</span>;      <span class="hljs-attribute">float</span>: right;    &#125;  &#125;  <span class="hljs-selector-class">.bottom</span>&#123;    <span class="hljs-selector-class">.box</span>;    <span class="hljs-selector-class">.left</span>&#123;      <span class="hljs-attribute">background</span>: yellow;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;      <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-class">.right</span>&#123;      <span class="hljs-attribute">background</span>: yellow;      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;      <span class="hljs-attribute">width</span>: calc(<span class="hljs-number">100%</span> - <span class="hljs-number">120px</span>);      <span class="hljs-attribute">float</span>: right;      <span class="hljs-selector-tag">ul</span> &#123;        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;        <span class="hljs-selector-tag">li</span>&#123;        <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;          <span class="hljs-attribute">list-style</span>: none;          <span class="hljs-attribute">float</span>: left;          <span class="hljs-attribute">height</span>: calc(<span class="hljs-number">100%</span> - <span class="hljs-number">15px</span>);          <span class="hljs-attribute">width</span>:<span class="hljs-number">300px</span>;          <span class="hljs-attribute">background</span>: greenyellow;        &#125;      &#125;    &#125;  &#125;&#125;</code></pre><h6 id="b-布局2"><a href="#b-布局2" class="headerlink" title="b.布局2"></a>b.布局2</h6><p>不用position:fixed; bottom:0;定位footer到底端，就需要BFC清除浮动；</p><p>否则不用BFC；</p><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>             <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>                 <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>             <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>         <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>             <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>login<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>         <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>     <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">main</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>footer<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less">*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">li</span>&#123;  <span class="hljs-attribute">list-style</span>: none;&#125;<span class="hljs-selector-tag">a</span>&#123;  <span class="hljs-attribute">text-decoration</span>: none;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;&#125;<span class="hljs-comment">// header</span><span class="hljs-selector-class">.header</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> rgba(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,.<span class="hljs-number">3</span>);  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">5px</span> solid <span class="hljs-number">#1791A1</span>;  <span class="hljs-selector-tag">nav</span>&#123;    <span class="hljs-attribute">padding</span>: <span class="hljs-number">25px</span> <span class="hljs-number">10px</span> <span class="hljs-number">40px</span> <span class="hljs-number">10px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;    <span class="hljs-selector-class">.left</span>&#123;      <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-tag">ul</span>&#123;      <span class="hljs-attribute">float</span>: left;    &#125;    <span class="hljs-selector-class">.right</span>&#123;      <span class="hljs-attribute">float</span>: right;    &#125;  &#125;&#125;<span class="hljs-comment">// content</span><span class="hljs-selector-class">.content</span>&#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">15px</span> auto;  <span class="hljs-comment">// BFC</span>  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-tag">article</span>&#123;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">width</span>: <span class="hljs-number">800px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  &#125;  <span class="hljs-selector-tag">aside</span>&#123;    <span class="hljs-attribute">float</span>: right;    <span class="hljs-attribute">width</span>: calc(<span class="hljs-number">100%</span> - <span class="hljs-number">900px</span>);    <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  &#125;&#125;<span class="hljs-comment">// footer</span><span class="hljs-selector-class">.footer</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-comment">// position: fixed;</span>  <span class="hljs-comment">// bottom: 0;</span>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">border-top</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>; <span class="hljs-selector-class">.content</span>&#123;   <span class="hljs-attribute">padding</span>: <span class="hljs-number">25px</span>;   <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;   <span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span> auto;   <span class="hljs-attribute">text-align</span>: center; &#125; &#125;</code></pre><h3 id="6-文字环绕距离"><a href="#6-文字环绕距离" class="headerlink" title="6.文字环绕距离"></a>6.文字环绕距离</h3><p>内容与元素的距离</p><p>shape-outside:padding-box|border-box|content-box;</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia.      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.left</span>&#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> solid red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">shape-outside</span>: padding-box;  &#125;&#125;</code></pre><h3 id="7-浮动显示区域形状"><a href="#7-浮动显示区域形状" class="headerlink" title="7.浮动显示区域形状"></a>7.浮动显示区域形状</h3><p>clip-path:circle()|ellipse(10% 30%)|polygon(0 0, 100% 100%, 0 100%);</p><p>形状 circle(半径)|ellipse(长轴，短轴)|polygon(顺时针，左上角坐标0 0)</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia.      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.left</span>&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">shape-outside</span>: padding-box;    <span class="hljs-comment">// clip-path: circle();</span>    <span class="hljs-comment">// clip-path: ellipse(10% 30%);</span>    <span class="hljs-attribute">clip-path</span>: polygon(<span class="hljs-number">0</span> <span class="hljs-number">0</span>, <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">0</span> <span class="hljs-number">100%</span>);  &#125;&#125;</code></pre><h3 id="8-文字与显示形状环绕"><a href="#8-文字与显示形状环绕" class="headerlink" title="8.文字与显示形状环绕"></a>8.文字与显示形状环绕</h3><p>shape-outside与clip-path设置成一样的区域，文字与显示形状会环绕</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia.      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.left</span>&#123;    <span class="hljs-attribute">background</span>: red;    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-comment">// clip-path: circle();</span>    <span class="hljs-comment">// shape-outside: circle();</span>    <span class="hljs-comment">// clip-path: ellipse(10% 30%);</span>    <span class="hljs-comment">// shape-outside: ellipse(10% 30%);</span>    <span class="hljs-attribute">clip-path</span>: polygon(<span class="hljs-number">0</span> <span class="hljs-number">0</span>, <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">0</span> <span class="hljs-number">100%</span>);    <span class="hljs-attribute">shape-outside</span>: polygon(<span class="hljs-number">0</span> <span class="hljs-number">0</span>, <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">0</span> <span class="hljs-number">100%</span>);  &#125;&#125;</code></pre><h3 id="9-文字与图片环绕"><a href="#9-文字与图片环绕" class="headerlink" title="9.文字与图片环绕"></a>9.文字与图片环绕</h3><p>shape-outside:url(‘’)文字围绕图片形状环绕</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1607254170243&amp;di=1b2f8a4f1cff0cb1aa22cd96e96475cc&amp;imgtype=0&amp;src=http%3A%2F%2Fpngimg.com%2Fuploads%2Fpokemon%2Fpokemon_PNG148.png&#x27;</span>/&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eum ducimus ad        at dolor impedit vitae natus reprehenderit beatae, corrupti sequi fuga        laudantium voluptate inventore quidem nulla alias amet eligendi fugiat        nostrum repellendus accusantium minus laborum. Expedita tempora aperiam        perspiciatis quisquam dicta culpa, fugit neque quas ducimus quo iusto        necessitatibus sint quaerat explicabo, est officia.      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><pre><code class="hljs less"><span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-tag">img</span>&#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">shape-outside</span>: url(<span class="hljs-string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1607254170243&amp;di=1b2f8a4f1cff0cb1aa22cd96e96475cc&amp;imgtype=0&amp;src=http%3A%2F%2Fpngimg.com%2Fuploads%2Fpokemon%2Fpokemon_PNG148.png&#x27;</span>);  &#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>week1</title>
    <link href="/2020/11/26/week/week1/"/>
    <url>/2020/11/26/week/week1/</url>
    
    <content type="html"><![CDATA[<h2 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h2><p>1.[页面导入样式时，使用link和@import有什么区别？]</p><p>2.[[css]圣杯布局和双飞翼布局的理解和区别，并用代码实现]</p><p>3.[[js]用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值]</p><hr><h3 id="1-页面导入样式时，使用link和-import有什么区别？"><a href="#1-页面导入样式时，使用link和-import有什么区别？" class="headerlink" title="1.[页面导入样式时，使用link和@import有什么区别？]"></a>1.[页面导入样式时，使用link和@import有什么区别？]</h3><p>link：</p><p>1.页面渲染同时加载，</p><p>2.xhtml，无兼容问题；</p><p>3.支持用js控制dom修改样式；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;old.css&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text/css&#x27;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&#x27;stylesheet&#x27;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;link&#x27;</span>&gt;</span></code></pre><pre><code class="hljs js"><span class="hljs-keyword">let</span> linkId = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;link&#x27;</span>)linkId.href = <span class="hljs-string">&#x27;new.css&#x27;</span></code></pre><p>@import：</p><p>1.页面渲染结束加载；</p><p>2.css，存在兼容问题，不兼容ie5之前；</p><p>3.不支持；</p><h3 id="2-css-圣杯布局和双飞翼布局的理解和区别，并用代码实现"><a href="#2-css-圣杯布局和双飞翼布局的理解和区别，并用代码实现" class="headerlink" title="2.[[css]圣杯布局和双飞翼布局的理解和区别，并用代码实现]"></a>2.[[css]圣杯布局和双飞翼布局的理解和区别，并用代码实现]</h3><p>圣杯布局:</p><p>1）dom直观，div包裹整个主区域；</p><p>2）相对定位；</p><p>3）代码量多，清除浮动多，副作用少；</p><p>双飞翼布局:</p><p>1）dom不直观，div包裹主区域的中间区域；</p><p>2）不用定位；</p><p>3）代码量少，清除浮动少，副作用多；</p><h6 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h6><table><thead><tr><th>header</th><th>header</th><th>头</th></tr></thead><tbody><tr><td>left content right</td><td>div</td><td>主</td></tr><tr><td>footer</td><td>footer</td><td>底</td></tr></tbody></table><p>1）主区域的content优先加载，要将content的div放在第一个位置，此时从上到下排列为left content right,</p><p>2）float将主区域的三块内容显示在一行，设置负外边距，给main增加padding，padding左右两侧的距离是左右元素的宽度，再设置margin元素不会出去。调整顺序.content{width: 100%;}主区域的中间内容独占一行。</p><p>左区域.left{margin-left:-100%;}使左区域在中间区域的左边；</p><p>右区域.left{margin-left:-右区域宽度;}使左区域在中间区域的右边；</p><p>3）给左右区域增加相对定位，就不会挡住中间区域；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>header<span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-comment">&lt;!-- 圣杯布局先加载主区域，优先显示 --&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>footer<span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less">*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;&#125;<span class="hljs-selector-class">.header</span>,<span class="hljs-selector-class">.footer</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;&#125;<span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">300px</span>;  <span class="hljs-comment">// 清除浮动的塌陷</span>  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-selector-class">.content</span>&#123;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;    <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightgreen;  &#125;  <span class="hljs-selector-class">.left</span>&#123;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightblue;    <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">100%</span>;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">left</span>: -<span class="hljs-number">300px</span>;  &#125;  <span class="hljs-selector-class">.right</span>&#123;    <span class="hljs-attribute">float</span>: left;    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: yellow;    <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">300px</span>;    <span class="hljs-attribute">position</span>: relative;    <span class="hljs-attribute">right</span>: -<span class="hljs-number">300px</span>;  &#125;&#125;</code></pre><h6 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h6><table><thead><tr><th>header</th><th>header</th><th>头</th></tr></thead><tbody><tr><td>content</td><td>div content div</td><td>中</td></tr><tr><td>left</td><td>div</td><td>左</td></tr><tr><td>right</td><td>div</td><td>右</td></tr><tr><td>footer</td><td>footer</td><td>底</td></tr></tbody></table><p>双飞翼布局主区域中的中间区域被div包裹</p><p>1）中间区域宽度.main{width:100%}，</p><p>左区域.left{margin-left:-100%}调整左区域与中间区域的顺序，</p><p>右区域.right{margin-right:右区域的宽度}</p><p>左右区域会遮住中间区域，给中间区域包裹一层div，设置浮动和宽度。给中间区域设置外边距中间缩进；</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>header<span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">main</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>conter<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>footer<span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></code></pre><pre><code class="hljs less">*&#123;  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">body</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;&#125;<span class="hljs-selector-class">.header</span>&#123;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;&#125;<span class="hljs-selector-class">.footer</span>&#123;  <span class="hljs-selector-class">.header</span>;  <span class="hljs-comment">// 清除浮动对footer的影响</span>  <span class="hljs-attribute">clear</span>: both;&#125;<span class="hljs-selector-class">.main</span>&#123;  <span class="hljs-attribute">float</span>: left;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-selector-class">.center</span>&#123;    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">300px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>: lightgreen;  &#125;&#125;<span class="hljs-selector-class">.left</span>&#123;  <span class="hljs-attribute">float</span>: left;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">background</span>: lightblue;  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">100%</span>;&#125;<span class="hljs-selector-class">.right</span>&#123;  <span class="hljs-attribute">float</span>: left;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">background</span>: yellow;  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">300px</span>;&#125;</code></pre><h3 id="3-js-用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值"><a href="#3-js-用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值" class="headerlink" title="3.[[js]用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值]"></a>3.[[js]用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值]</h3><pre><code class="hljs js"><span class="hljs-comment">// new 长度=5的数组</span><span class="hljs-keyword">let</span> arr = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">5</span>) <span class="hljs-keyword">let</span> num = randomNum()<span class="hljs-comment">//计数器</span><span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>randomArr(arr,num)<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomArr</span>(<span class="hljs-params">arr,num</span>)</span>&#123;    <span class="hljs-comment">//arr数组中没有随机数num，给arr索引位置赋值，i++,</span>    <span class="hljs-comment">//否则重新获取随机数</span>    <span class="hljs-keyword">if</span>(arr.indexOf(num)&lt;<span class="hljs-number">0</span>)&#123;        arr[i] = num;        i++    &#125;<span class="hljs-keyword">else</span>&#123;        num=randomNum()    &#125;    <span class="hljs-comment">//计数器i&lt;arr数组长度,重新调用randomArr()</span>    <span class="hljs-comment">//否则return</span>    <span class="hljs-keyword">if</span>(i&lt;arr.length)&#123;        randomArr(arr,num)    &#125;<span class="hljs-keyword">else</span>&#123;        <span class="hljs-built_in">console</span>.log(arr)        <span class="hljs-keyword">return</span>    &#125;&#125;<span class="hljs-comment">//2-32的随机数</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomNum</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-comment">//floor向下取整，random取(0,1)随机数</span>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">31</span>+<span class="hljs-number">2</span>)&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>week</category>
      
    </categories>
    
    
    <tags>
      
      <tag>week</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
